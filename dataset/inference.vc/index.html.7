<!doctype html>
<html lang="en">
	<head>
	    <meta http-equiv="Content-Type" content="text/html" charset="UTF-8" />
	    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
	    <title>Variational Inference using Implicit Models Part III: Joint-Contrastive Inference, ALI and BiGAN</title>
	    <meta name="description" content="" />
	    <link href='http://fonts.googleapis.com/css?family=Open+Sans:300italic,700italic,300,700' rel='stylesheet' type='text/css'>
		<link href='http://fonts.googleapis.com/css?family=Bree+Serif' rel='stylesheet' type='text/css'>
		<link rel="stylesheet" type="text/css" href="/assets/styles/crisp.css?v=a4a8b7e06d">
		<link rel="shortcut icon" href="/content/images/2014/Mar/face.png"/>
	    <meta name="HandheldFriendly" content="True" />
	    <meta name="MobileOptimized" content="320" />
	    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
		<!--[if lt IE 9]>
			<script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
			<script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
		<![endif]-->
	    <link rel="canonical" href="http://www.inference.vc/variational-inference-using-implicit-models-part-iii-joint-contrastive-inference-ali-and-bigan/" />
    <meta name="referrer" content="no-referrer-when-downgrade" />
    <link rel="amphtml" href="http://www.inference.vc/variational-inference-using-implicit-models-part-iii-joint-contrastive-inference-ali-and-bigan/amp/" />
    
    <meta property="og:site_name" content="inFERENCe" />
    <meta property="og:type" content="article" />
    <meta property="og:title" content="Variational Inference using Implicit Models Part III: Joint-Contrastive Inference, ALI and BiGAN" />
    <meta property="og:description" content="This post is part of a series of tutorials on how one can use implicit models for variational inference. Here&#x27;s a table of contents: Part I: Inference of single, global variable (Bayesian logistic regression) Part II: Amortised Inference via the Prior-Contrastive Method (Explaining Away Demo) ➡️️Part III (you are here)" />
    <meta property="og:url" content="http://www.inference.vc/variational-inference-using-implicit-models-part-iii-joint-contrastive-inference-ali-and-bigan/" />
    <meta property="og:image" content="http://www.inference.vc/content/images/2017/02/Hierarchical-ALI-1.png" />
    <meta property="article:published_time" content="2017-02-09T14:11:57.000Z" />
    <meta property="article:modified_time" content="2017-02-09T20:36:58.000Z" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="Variational Inference using Implicit Models Part III: Joint-Contrastive Inference, ALI and BiGAN" />
    <meta name="twitter:description" content="This post is part of a series of tutorials on how one can use implicit models for variational inference. Here&#x27;s a table of contents: Part I: Inference of single, global variable (Bayesian logistic regression) Part II: Amortised Inference via the Prior-Contrastive Method (Explaining Away Demo) ➡️️Part III (you are here)" />
    <meta name="twitter:url" content="http://www.inference.vc/variational-inference-using-implicit-models-part-iii-joint-contrastive-inference-ali-and-bigan/" />
    <meta name="twitter:image" content="http://www.inference.vc/content/images/2017/02/Hierarchical-ALI-1.png" />
    <meta name="twitter:label1" content="Written by" />
    <meta name="twitter:data1" content="Ferenc Huszar" />
    <meta name="twitter:site" content="@fhuszar" />
    <meta property="og:image:width" content="600" />
    <meta property="og:image:height" content="562" />
    
    <script type="application/ld+json">
{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "inFERENCe",
        "logo": "http://www.inference.vc/content/images/2014/Mar/face.png"
    },
    "author": {
        "@type": "Person",
        "name": "Ferenc Huszar",
        "image": "//www.gravatar.com/avatar/943e71b49d8fa0b3725fa6c82c97163d?d=404",
        "url": "http://www.inference.vc/author/ferenc-huszar/",
        "sameAs": []
    },
    "headline": "Variational Inference using Implicit Models Part III: Joint-Contrastive Inference, ALI and BiGAN",
    "url": "http://www.inference.vc/variational-inference-using-implicit-models-part-iii-joint-contrastive-inference-ali-and-bigan/",
    "datePublished": "2017-02-09T14:11:57.000Z",
    "dateModified": "2017-02-09T20:36:58.000Z",
    "image": {
        "@type": "ImageObject",
        "url": "http://www.inference.vc/content/images/2017/02/Hierarchical-ALI-1.png",
        "width": 600,
        "height": 562
    },
    "description": "This post is part of a series of tutorials on how one can use implicit models for variational inference. Here&#x27;s a table of contents: Part I: Inference of single, global variable (Bayesian logistic regression) Part II: Amortised Inference via the Prior-Contrastive Method (Explaining Away Demo) ➡️️Part III (you are here)",
    "mainEntityOfPage": {
        "@type": "WebPage",
        "@id": "http://www.inference.vc"
    }
}
    </script>

    <meta name="generator" content="Ghost 0.11" />
    <link rel="alternate" type="application/rss+xml" title="inFERENCe" href="http://www.inference.vc/rss/" />
    <script src="//load.sumome.com/" data-sumo-site-id="a378ae33aa68caa37662d339c31c409600c8a85e240c12fceaeb0c70684208c0" async="async"></script>
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-96562474-1', 'auto');
  ga('send', 'pageview');

</script>
		<script>
			!function(g,s,q,r,d){r=g[r]=g[r]||function(){(r.q=r.q||[]).push(
			arguments)};d=s.createElement(q);q=s.getElementsByTagName(q)[0];
			d.src='//d1l6p2sc9645hc.cloudfront.net/tracker.js';q.parentNode.
			insertBefore(d,q)}(window,document,'script','_gs');

			_gs('GSN-053712-R');
		</script>
	</head>
	<body class="post-template">
		<header id="header">
			<a id="logo" href="http://www.inference.vc"><img src="/content/images/2014/Mar/face.png" alt="inFERENCe" /></a>
			<h1><a href="http://www.inference.vc">inFERENCe</a></h1>
			<p>posts on machine learning, statistics, opinions on things I&#x27;m reading in the space</p>
			<h6><a href="http://www.inference.vc/about">About</a></h6>
		</header>
		<main id="content">
			<article id="100" class="post">
    <span class="post-stamp">February 9th, 2017</span>
    <h1 class="post-title">Variational Inference using Implicit Models Part III: Joint-Contrastive Inference, ALI and BiGAN</h1>
    <p>This post is part of a series of tutorials on how one can use implicit models for variational inference. Here's a table of contents:</p>

<ul>
<li><a href="http://www.inference.vc/variational-inference-with-implicit-probabilistic-models-part-1-2/">Part I</a>: Inference of single, global variable (Bayesian logistic regression)</li>
<li><a href="http://www.inference.vc/variational-inference-with-implicit-models-part-ii-amortised-inference-2/">Part II</a>: Amortised Inference via the Prior-Contrastive Method (Explaining Away Demo)</li>
<li>➡️️<a href="http://www.inference.vc/variational-inference-using-implicit-models-part-iii-joint-contrastive-inference-ali-and-bigan/">Part III</a> (you are here): Amortised Inference via a Joint-Contrastive Method (ALI, BiGAN)</li>
<li><a href="http://www.inference.vc/variational-inference-using-implicit-models-part-iv-denoisers-instead-of-discriminators/">Part IV</a> : Using Denoisers instead of Discriminators</li>
</ul>

<p>This post is a short follow-up to Part II, showing a different way in which adversarial-like algorithms can be used to approximate variational inference with implicit models. As a reminder, we're interested in inference in a latent variable model, where for each i.i.d. observation $y_n$ we have an associated latent variable $x_n$</p>

<h2 id="recaponvariationalinference">Recap on variational inference</h2>

<p>Skip this if you know this. Here's the notation I use:</p>

<ul>
<li>$p(x)$ is the prior</li>
<li>$p(y\vert x)$ is the likelihood</li>
<li>$p(x\vert y)$ is the posterior, which is intractable</li>
<li>$q(x\vert y)$ is the recognition model which is meant to approximate the posterior</li>
<li>$p_{0}(y)$ is the real distribution from which data is drawn from. In statistics this would be called the population distribution. This is constant and unknown.</li>
<li>$p_{\mathcal{D}}$ is the empirical distribution of observed data $\mathcal{D}$, which is essentially a collection of point masses $p_{\mathcal{D}}(y) = \frac{1}{N}\sum_{n=1}^{N}\delta(y-y_n)$</li>
</ul>

<p>In variational inference we are interested in minimising the following divergence:</p>

<p>$$
\mathbb{E}_{y \sim p_0} \operatorname{KL}[ q(x \vert y) \| p(x \vert y)]
$$</p>

<p>We can rearrange this in the following way:</p>

<p>\begin{align}
\mathbb{E}_{y \sim p_0} \operatorname{KL}[ q(x \vert y) \| p(x \vert y)] &amp;= \mathbb{E}_{y\sim p_0} \mathbb{E}_{x\vert y \sim q(x\vert y)} \log \frac{q(x\vert y)}{p(x\vert y)}\\
&amp;= \mathbb{E}_{y\sim p_0} \mathbb{E}_{x\vert y \sim q(x_ y)} \log \frac{q(x\vert y)p(y)}{p(y\vert x)p(x)} + \mathbb{E}_{y\sim p_0}\log p_0(y) - \mathbb{E}_{y\sim p_0}\log p_0(y)\\
&amp;= \mathbb{E}_{y\sim p_0} \mathbb{E}_{x\vert y \sim q(x_ y)} \log \frac{q(x\vert y)p_0(y)}{p(y\vert x)p(x)} + \mathbb{E}_{y\sim p_0} \frac{\log p(y)}{\log p_0(y)}\\
&amp;= \operatorname{KL}[ q(x \vert y) p_0(y)\| p(x, y)] - \operatorname{KL}[p_0(y)\|p(y)]
\end{align}</p>

<p>In the second line I used Bayes' rule, and added and substracted the same quantity. We can write this equation as a bound:</p>

<p>$$
\mathcal{L}(q) = \operatorname{KL}[ q(x \vert y) p_0(y)\| p(x, y)] = \operatorname{KL}[p_0(y)\|p(y)] + \mathbb{E}_{y \sim p_0} \operatorname{KL}[ q(x \vert y) \| p(x \vert y)] \geq \operatorname{KL}[ q(x \vert y) \| p(x \vert y)]
$$</p>

<p>The right hand-side of this boind is the KL divergence between the real data distribution $p_0(y)$ and the marginal likelihood $p(y)$. This is exactly what we would like to minimize in maximum likelihood training and indeed this is closely related to the likelihood. The left-hand side is the (negative) variational lower bound. The bound is exact if the $\mathbb{E}_{y \sim p_0} \operatorname{KL}[ q(x \vert y) \| p(x \vert y)]$ term is $0$, which only happens if $q(x \vert y)$ matches the posterior perfectly.</p>

<h2 id="jointcontrastivemethod">Joint-contrastive method</h2>

<p>As the derivation above suggests, the variational bound can be expressed as the expectation of the following logarithmic density ratio:</p>

<p>$$
\mathcal{L}(q) = \mathbb{E}_{y\sim p_0} \mathbb{E}_{x\vert y \sim q(x\vert y)} \log \frac{q(x\vert y)p(y)}{p(y\vert x)p_0(x)}
$$</p>

<p>Note that in practice we approximate sampling from $p_0$ by sampling datapoints from $p_\mathcal{D}$ instead. As in <a href="http://www.inference.vc/variational-inference-with-implicit-models-part-ii-amortised-inference-2/">Part II</a>, we are going to approximate this density ratio with a discriminator $D(x, y)$ trained via logistic regression. As before, the discriminator will take an $(x, y)$ pair. Whereas in <a href="http://www.inference.vc/variational-inference-with-implicit-models-part-ii-amortised-inference-2/">Part II</a> this was our choice (remember, we <em>amortized</em> the discriminator) now it is absolutely essential. Once we introduce the discriminator we obtain the following two-step iterative algorithm:</p>

<p>First, we minimise the discriminator loss, keeping the generator $G$ fixed: <br />
$$
\mathcal{L}(D; G) = \frac{1}{N} \sum_{n=1}^{N} \mathbb{E}_{x\sim q(x \vert y_n)} \log D(x,y_n) + \mathbb{E}_{x\sim p(x)}\mathbb{E}_{y\vert x \sim p(y\vert x)} \log (1 - D(x, y))
$$</p>

<p>Then we improve the generator using the following loss (exactly as before): <br />
\begin{align}
\mathcal{L}(G; D) &amp;= \frac{1}{N} \sum_{n=1}^{N} \mathbb{E}_{x\sim q(x\vert y_n)} \left[ \log \frac{D(x, y_n)}{1 - D(x, y_n)}\right]\\
&amp;= \frac{1}{N} \sum_{n=1}^{N} \mathbb{E}_{z\sim\mathcal{N}(0,I)} \left[ \log \frac{D(G(z,y_n), y_n)}{1 - D(G(z,y_n), y_n)}\right]
\end{align}</p>

<p>So in the first step, given the generator $G$ we train a discriminator $D$ to classify $(x,y)$ pairs. The pairs are sampled as follows:</p>

<ul>
<li>for <em>real</em> examples we take a real datapoint $y_n$ and infer the corresponding latent using our recognition model $q(x\vert y_n)$.</li>
<li>for <em>synthetic</em> samples we draw $x$ from the prior $p(x)$, and simulate $y$ from the forward model $p(y\vert x)$. This is the same as saying that the pair $(x,y)$ are drawn from the joint $p(x,y)$.</li>
</ul>

<p>Compared with the amortized scheme of <a href="http://www.inference.vc/variational-inference-with-implicit-models-part-ii-amortised-inference-2/">Part II</a>, there are two differences:</p>

<ol>
<li>the way $y$ is sampled for synthetic examples is different. Previously, $y$ was always a real datapoint. Here, for synthetic samples it is sampled conditionally on $x$.</li>
<li>the likelihood $p(y\vert x)$ doesn't appear in the generator's training objective anymore. This means that <strong>the likelihood can  also be implicit now</strong>, just as the prior $p(x)$ and the recognition model $q(x\vert y)$.</li>
</ol>

<p>In the prior-contrastive scheme $y$ was only provided to the discriminator by way of context. As it is always sampled from the same marginal distribution it alone cannot help the discriminator figure out if it is looking at a real or a synthetic sample. Indeed, had we decided not to amortise the discriminator in that case, we could have trained separate discriminators for each $y_n$.</p>

<p>In contrast, I call this method <strong>joint-contrastive inference</strong> as the discriminator learns to contrast joint distributions $p(x,y)$ and $q(x\vert y)p_0(y)$. Here, $y$ is sampled differently for the real and synthetic pairs, so the discriminator can and should learn to discriminate on the basis of $y$.</p>

<p>If everything converges, the discriminator converges to a constant $0.5$. It's easy to see why: Suppose our model describes the world perfectly, and the approximate posterior mimicks the real posterior perfectly. Then, there should be no difference between first sampling an $x$ and then a $y$ from the model, or first sampling a $y$ from the world and subsequently inferring $x$. This is the kind of Nash equilibrium we are hoping to reach.</p>

<h2 id="connectionstoalibigans">Connections to ALI, BiGANs</h2>

<p>This scheme is almost exactly the same as ALI (Adversarially Learned Inference, <a href="https://arxiv.org/abs/1606.00704">Dumoulin et al, 2016</a>) or BiGANs (<a href="https://arxiv.org/abs/1605.09782">Donahue et al, 2016</a>). These papers independently discovered the same algorithm and it happens to work very well. As far as I'm aware neither papers provide a derivation of these algorithms from first principles like above, and neither papers used the KL-divergence loss function to make the connection to variational inference valid. So now you know: ALI and BiGAN (can be modified to) approximate <strong>maximum likelihood</strong> learning.</p>

<p>I should mention that the notation and terminology used in those papers is very different from how I presented things here. They call the generator $G$ which defines auxillary distribution $q$ the encoder for example. But identifying the components should be pretty straightforward.</p>

<p>The main difference from what is presented here is the specific form of the generator loss used to update $q$. In these papers the authors use the form that approximates the Jensen-Shannon divergence between $p(y, x)$ and $q(x\vert y)p_0(y)$, but to obtain the variational bound we have to use the loss function that corresponds to the $\operatorname{KL}$ divergence (<a href="https://arxiv.org/abs/1610.04490">Sønderby et al, 2016</a>).</p>

<h2 id="hierarchicalmodels">Hierarchical models</h2>

<p>Just as VAEs, one can stack multiple instances of the variational BiGAN on top of one another. As I mentioned earlier, maximising variational lower bound with respect to the prior $p(x)$ is the same as fitting $p(x)$ to data sampled from the aggregate posterior $\frac{1}{N} \sum_{n=1}^{N} q(x\vert y_n)$ via maximum likelhiood. This can be seen by observing:</p>

<p>\begin{align}
\mathbb{E}_{y \sim p_0} \operatorname{KL}[ q(x \vert y) \| p(x \vert y)] &amp;= \mathbb{E}_{y \sim p_0}  \mathbb{E}_{x\vert y \sim p(x\vert y)} \log \frac{ q(x \vert y) }{ p(x \vert y) } \\
&amp;= \mathbb{E}_{y \sim p_0}  \mathbb{E}_{x\vert y \sim p(x\vert y)} \log \frac{ q(x \vert y) p(y)}{ p(x) p(y\vert x)} \\
&amp;= - \mathbb{E}_{y \sim p_0} \mathbb{E}_{x\vert y \sim p(x\vert y)} \log p(x) + c
\end{align}</p>

<p>This means that, if $p(x)$ is a hierarchical model in itself, we can <em>lower bound the lower bound</em> with respect to parameters of $p(x)$ using variational inference. Here's a diagram I drew to illustrate this:</p>

<p><img src="/content/images/2017/02/Hierarchical-ALI.png" alt="" /></p>

<p>The model has layers of hidden variables $h^{(0)}$ all the way up to $h^{(L)}$. On the right, we have a prior on $h^{(L)}$ and set of forward models $p(h^{(\ell-1)}\vert h^{(\ell)})$, finally a forward model of observations conditioned on the lowest layer $p(y\vert h^{(0)})$.</p>

<blockquote>
  <p>All of these can be implicit models.</p>
</blockquote>

<p>On the left we have the recognition pathway. Here, $y$ is sampled from the empirical data distribution $p_{\mathcal{D}}$, and subsequent layers are sampled from the recognition models $q(h^{(\ell)} \vert h^{(\ell - 1)})$.</p>

<blockquote>
  <p>All recognition models can be implicit, too.</p>
</blockquote>

<p>For each pair of neighbouring layers we have discriminators $D^{(\ell)}$ which are trained to classify $(h^{(\ell-1)},h^{(\ell)})$ pairs from the left-hand inference stream vs the right-hand generative stream. Once the discriminators are converged, the recognition models $q$ and all the forward models $p$ can be updated jointly by maximising the variational lower bound that corresponds to that layer.</p>

<p>A drawback of this hierarchical model is that as we go up in the layer hierarchy our lower bounds get weaker and weaker. Also, such model with implicit models everywhere, might prove to be way too complicated to learn meaningful feature hierarchies. The lower layers themselves could do much of the job if they are allowed to be complex enough.</p>

<p>Finally, as pointed out in <a href="https://arxiv.org/abs/1602.02282">(Ladder Variational Autoencoders, Sønderby et al, 2016b</a>], stacked recognition models that only depend on the layer below may not be the best way to approximate inference. They instead introduce inference models that take into account upstream and downstream dependencies simultaneously, which kind of makes sense. I am unsure whether this ALI/BiGAN method could apply in that situation, but I'll leave that for you as homework.</p>

<h2 id="summary">Summary</h2>

<p>In this part of my mini-series on variational inference with implicit models I covered a method I call joint-contrastive learning. It is closely related to existing methods ALI and BiGAN, but it is motivated from first principles and it can be shown that it approximates variational inference and learning.</p>

<p>Unlike in previous methods, now all the distributions involved, including the prior, likelhiood and recongition models, can be implicit. We only ever need to (a) sample from these distributions, and (b) evaluate the gradient of the expectations with respect to model parameters.</p>

<p>On one hand, This makes this approach super versatile as we can plug in a wide range of stochastic neural networks or probabilistic programs and in theory the whole thing just works. We can also stack these things on top of one another and the theory still works out. On the other hand, it makes me wonder whether this flexibility comes at a price. Conventional thinking is that if your assumptions about your generative models are too loose and permissive, the inference method will be able to exploit that flexibility and overfitting could occur. Technically, the method allows you to plug in arbitrarily large neural networks everywhere. But perhaps a better way forward is to keep your forward models highly structured and informed. For visual perception, I would look at (<a href="https://arxiv.org/abs/1503.03167">Kulkarni et al, 2015</a>) for inspiration.</p>
</article>

<div id="comments">
    <div id="disqus_thread"></div>
    <script>
        var disqus_config = function () {
            this.page.url = 'http://www.inference.vc/variational-inference-using-implicit-models-part-iii-joint-contrastive-inference-ali-and-bigan/';
            this.page.identifier = 100;
            };
        (function() { // DON'T EDIT BELOW THIS LINE
            var d = document, s = d.createElement('script'); s.src = '//inference.disqus.com/embed.js'; s.setAttribute('data-timestamp', +new Date()); (d.head || d.body).appendChild(s); })();
    </script>
    <noscript>Please enable JavaScript to view the <a href="https://disqus.com/?ref_noscript" rel="nofollow">comments powered by Disqus.</a></noscript>
</div>

		</main>
		<footer id="footer">
			<section id="footer-message">&copy; 2017 inFERENCe. All rights reserved. Powered by <a href="http://ghost.org" target="_blank">Ghost</a>. <a href="http://github.com/kathyqian/crisp" target="_blank">Crisp</a> theme by <a href="http://kathyqian.com" target="_blank">Kathy Qian</a>.</section>
		</footer>
	<!-- You can safely delete this line if your theme does not require jQuery -->
<script type="text/javascript" src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
		<script type="text/javascript"     src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>

		<script type="text/x-mathjax-config">
		MathJax.Hub.Config({
		    tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}
		});
		</script>
	</body>

</html>
