<!doctype html>
<html lang="ko">

<head>

<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="alternate" type="application/rss+xml" title="파이쿵" href="http://pythonkim.tistory.com/rss" />
<link href="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
<link href="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/style.css?_T_=1470399111" rel="stylesheet">
<link rel="shortcut icon" href="/favicon.ico" />
<title>파이쿵 :: 12. TensorFlow로 Logistic Classification의 구현하기 (lab 05)</title>

<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
<!--[if lt IE 9]>
  <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
  <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
<![endif]-->
		
<!-- 구글 애널리틱스 -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-76456208-1', 'auto');
  ga('send', 'pageview');
</script>
	

<style type="text/css">
		#daumSearchBox {
			height: 21px;
			background-image : url(http://i1.daumcdn.net/imgsrc.search/search_all/show/tistory/plugin/bg_search2_2.gif);
			margin: 5px auto ;
			padding: 0;
		}
		#daumSearchBox input {
			background: none;
			margin : 0;
			padding : 0;
			border : 0;
		}
		#daumSearchBox #daumLogo {
			width: 34px;
			height: 21px;
			float: left;
			margin-right: 5px;
			background-image : url(http://i1.daumcdn.net/img-media/tistory/img/bg_search1_2_2010ci.gif);
		}
		#daumSearchBox #show_q {
			background-color: transparent;
			border: none;
			font: 12px Gulim, Sans-serif;
			color: #555;
			margin-top: 4px;
			margin-right: 15px;
			float: left;
		}

		#daumSearchBox #show_btn {
			background-image : url(http://i1.daumcdn.net/imgsrc.search/search_all/show/tistory/plugin/bt_search_2.gif);
			width: 37px;
			height: 21px;
			float: left;
			margin:0;
			cursor:pointer;
			text-indent:-1000em;
		}
	</style><link rel="stylesheet" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/lightbox/assets/css/lightbox.min.css" />
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/TistoryProfileLayer/style.css" />
<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/TistoryProfileLayer/profile.js"></script>
	<style type="text/css">
		.another_category { border: 1px solid #E5E5E5; padding: 10px 10px 5px; margin:10px 0; clear: both; }
		.another_category h4 { font-size: 12px !important; margin: 0 !important; border-bottom: 1px solid #E5E5E5 !important; padding: 2px 0 6px !important; }
		.another_category h4 a { font-weight: bold !important; }
		.another_category table { table-layout: fixed; border-collapse: collapse; width: 100% !important; margin-top: 10px !important; }
		* html .another_category table { width: auto !important; }
		*:first-child+html .another_category table { width: auto !important; }
		.another_category th, .another_category td { padding: 0 0 4px !important; }
		.another_category th { text-align: left; font-size: 12px !important; font-weight: normal;  word-break: break-all; overflow: hidden; line-height: 1.5; }
		.another_category td { text-align: right; width: 80px; font-size: 11px; }
		.another_category th a { font-weight: normal; text-decoration: none; border: none !important; }
		.another_category th a.current{ font-weight: bold; text-decoration: none !important; border-bottom: 1px solid !important; }
		.another_category th span { font-weight: normal; text-decoration: none; font: 10px Tahoma, Sans-serif; border: none !important; }

		.another_category_color_gray, .another_category_color_gray h4 { border-color: #E5E5E5 !important; }
		.another_category_color_gray * { color: #909090 !important; }
		.another_category_color_gray th a.current{border-color:#909090 !important;}
		.another_category_color_gray h4, .another_category_color_gray h4 a { color: #737373 !important; }


		.another_category_color_red, .another_category_color_red h4 { border-color: #F6D4D3 !important;  }
		.another_category_color_red * { color: #E86869 !important; }
		.another_category_color_red th a.current{border-color:#E86869 !important;}
		.another_category_color_red h4, .another_category_color_red h4 a { color: #ED0908 !important; }


		.another_category_color_green, .another_category_color_green h4 { border-color: #CCE7C8 !important; }
		.another_category_color_green * { color: #64C05B !important; }
		.another_category_color_green th a.current{border-color:#64C05B !important;}
		.another_category_color_green h4, .another_category_color_green h4 a { color: #3EA731 !important; }


		.another_category_color_blue, .another_category_color_blue h4 { border-color: #C8DAF2 !important; }
		.another_category_color_blue * { color: #477FD6 !important; }
		.another_category_color_blue th a.current{border-color:#477FD6 !important;}
		.another_category_color_blue h4, .another_category_color_blue h4 a { color: #1960CA !important; }


		.another_category_color_violet, .another_category_color_violet h4 { border-color: #E1CEEC !important;  }
		.another_category_color_violet * { color:#9D64C5 !important; }
		.another_category_color_violet th a.current{border-color:#9D64C5 !important;}
		.another_category_color_violet h4, .another_category_color_violet h4 a { color: #7E2CB5 !important; }
	</style>
<script type="text/javascript">
window.TistoryBlog = {
    url: "http://pythonkim.tistory.com",
	tistoryUrl: "http://pythonkim.tistory.com"
};
var servicePath = "";
var blogURL = "";
</script>
<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/script/_/base.js"></script>
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/style/dialog.css"/>
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/style/menubar.css"/><style type="text/css">.tt_article_useless_p_margin p {padding-top:0 !important;padding-bottom:0 !important;margin-top:0 !important;margin-bottom:0 !important;}</style><meta name="referrer" content="always"><link rel="shortcut icon" href="http://i1.daumcdn.net/cfs.tistory/static/top/favicon_0630.ico"/><meta name="description" content="개인적으로는 코딩이 훨씬 쉽고 개념 정리하는 것도 쉽게 느껴진다. 힘들게 힘들게 Logistic Regression에 대해 이론적인 내용을 정리했으니, 텐서플로우로 결과를 볼 때가 됐다.  앞의 글에서 엄청난 설명을 했던 공식들이다. 복잡하긴 한데, 앞의 글을 읽었다면 그래도 좀 알 것 같은 느낌이 들어야 하지 않을까? 아래는 이번 글에서 사용한 소스코드 전체이다.  import tensorflow as tf import numpy as np # 04train.txt #..">

<!-- BEGIN OPENGRAPH -->
<link rel="canonical" href="http://pythonkim.tistory.com/17" /><meta property="og:type" content="article"><meta property="og:url" content="http://pythonkim.tistory.com/17" ><meta property="og:site_name" content="파이쿵" ><meta property="og:title" content="12. TensorFlow로 Logistic Classification의 구현하기 (lab 05)" ><meta name="by" content="사과쿵" ><meta property="og:description" content="개인적으로는 코딩이 훨씬 쉽고 개념 정리하는 것도 쉽게 느껴진다. 힘들게 힘들게 Logistic Regression에 대해 이론적인 내용을 정리했으니, 텐서플로우로 결과를 볼 때가 됐다.  앞의 글에서 엄청난 설명을 했던 공식들이다. 복잡하긴 한데, 앞의 글을 읽었다면 그래도 좀 알 것 같은 느낌이 들어야 하지 않을까? 아래는 이번 글에서 사용한 소스코드 전체이다.  import tensorflow as tf import numpy as np # 04train.txt #.." ><meta property="og:image" content="http://cfile27.uf.tistory.com/image/213D684857974796296FCF" ><meta property="article:section" content="과학" >
<!-- END OPENGRAPH -->



<!-- BEGIN TWITTERCARD -->
<meta name="twitter:card" content="summary_large_image"><meta name="twitter:site" content="@TISTORY"><meta name="twitter:title" content="12. TensorFlow로 Logistic Classification의 구현하기 (lab 05)" ><meta name="twitter:description" content="개인적으로는 코딩이 훨씬 쉽고 개념 정리하는 것도 쉽게 느껴진다. 힘들게 힘들게 Logistic Regression에 대해 이론적인 내용을 정리했으니, 텐서플로우로 결과를 볼 때가 됐다.  앞의 글에서 엄청난 설명을 했던 공식들이다. 복잡하긴 한데, 앞의 글을 읽었다면 그래도 좀 알 것 같은 느낌이 들어야 하지 않을까? 아래는 이번 글에서 사용한 소스코드 전체이다.  import tensorflow as tf import numpy as np # 04train.txt #.." ><meta property="twitter:image" content="http://cfile27.uf.tistory.com/image/213D684857974796296FCF" >
<!-- END TWITTERCARD -->



<!-- BEGIN DAUMAPP -->
<meta property="dg:plink" content="http://pythonkim.tistory.com/17" ><meta name="plink" content="http://pythonkim.tistory.com/17" ><meta name="title" content="12. TensorFlow로 Logistic Classification의 구현하기 (lab 05)" ><meta name="article:media_name" content="파이쿵" ><meta property="article:mobile_url" content="http://pythonkim.tistory.com/m/17" ><meta property="article:pc_url" content="http://pythonkim.tistory.com/17" ><meta property="article:mobile_view_url" content="http://pythonkim.tistory.com/m/17" ><meta property="article:pc_view_url" content="http://pythonkim.tistory.com/17" ><meta property="article:pc_service_home" content="http://www.tistory.com" ><meta property="article:mobile_service_home" content="http://www.tistory.com/m" ><meta property="article:txid" content="2072317_17" /><meta property="article:published_time" content="2016-07-27T11:47:45+09:00" ><meta property="og:regDate" content="20160726210615" ><meta property="article:modified_time" content="2017-01-16T07:47:24+09:00" >
<!-- END DAUMAPP -->



<!-- BEGIN STRUCTURED_DATA -->
<script type="application/ld+json">{"@context":"http://schema.org", "@type":"BlogPosting","mainEntityOfPage":{"@id": "http://pythonkim.tistory.com/17"},"url":"http://pythonkim.tistory.com/17","headline":"12. TensorFlow로 Logistic Classification의 구현하기 (lab 05)","description":"개인적으로는 코딩이 훨씬 쉽고 개념 정리하는 것도 쉽게 느껴진다. 힘들게 힘들게 Logistic Regression에 대해 이론적인 내용을 정리했으니, 텐서플로우로 결과를 볼 때가 됐다.  앞의 글에서 엄청난 설명을 했던 공식들이다. 복잡하긴 한데, 앞의 글을 읽었다면 그래도 좀 알 것 같은 느낌이 들어야 하지 않을까? 아래는 이번 글에서 사용한 소스코드 전체이다.  import tensorflow as tf import numpy as np # 04train.txt #..","author":{"@type":"Person","name":"사과쿵"},"image":{"@type":"ImageObject","url":"http://cfile27.uf.tistory.com/image/213D684857974796296FCF","width":"800px","height":"800px"},"datePublished":"20160727T11:47:45+09:00","dateModified":"20170116T07:47:24+09:00","publisher":{"@type":"Organization","name":"TISTORY","logo":{"@type":"ImageObject","url":"https://t1.daumcdn.net/cssjs/icon/557567EA016E200001","width":"800px","height":"800px"}}}</script>
<!-- END STRUCTURED_DATA -->

<link rel="apple-touch-icon" href="//i1.daumcdn.net/thumb/C180x180/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="76x76" href="//i1.daumcdn.net/thumb/C76x76/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="120x120" href="//i1.daumcdn.net/thumb/C120x120/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="152x152" href="//i1.daumcdn.net/thumb/C152x152/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D"></head>

<body>

<script type="text/javascript">
	T.config = {"TOP_SSL_URL":"https:\/\/www.tistory.com","PREVIEW":false,"ROLE":"guest","PREV_PAGE":"\/18","NEXT_PAGE":"\/22","BLOG":{"isDormancy":false,"title":"\ud30c\uc774\ucff5"},"NEED_COMMENT_LOGIN":false,"COMMENT_LOGIN_CONFIRM_MESSAGE":"","LOGIN_URL":"https:\/\/www.tistory.com\/auth\/login\/?redirectUrl=http%3A%2F%2Fpythonkim.tistory.com%2F17","DEFAULT_URL":"http:\/\/pythonkim.tistory.com","USER":{"name":null,"homepage":null}};
</script>

<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/script/blog/common.js"></script>
<div style="margin:0; padding:0; border:none; background:none; float:none; clear:none; z-index:0"></div>


<div id="header">
	<div class="container-fluid">
		<div class="row">
			<div class="col-md-12">
				<!-- Wrapper for slides 가로세로 비율(4:1)-->
				<div id="carousel" class="carousel slide" data-ride="carousel">
					<div class="centered carousel-inner" role="listbox">
						<div class="item active">
							<img src="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/slider_01.png" width="100%" alt="Carousel 01">
							<div class="carousel-caption">
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- header close -->

<div id="content">					<!-- 슬라이드와 본문 사이의 여백 -->
	<div class="container">
		<div class="row">				<!-- 본문 수평 마진 결정 -->
			<div class="col-md-9">
				

				

				
					<div class="entry">
						<div class="titleWrap jumbotron">
							<!-- 현재 보여지는 글의 제목 -->
							<h2>12. TensorFlow로 Logistic Classification의 구현하기 (lab 05)</h2>
							<!-- 현재 보여지는 글 제목의 아래에 있는 레이블 박스 2개 -->
							<!--<span class="category label label-primary">머신러닝_김성훈교수님</span> -->
							<!--<span class="date label label-info">2016.07.27 11:47</span> -->
						</div>
						
						<!-- 현재 보여지는 글의 본문과 본문 아래 글 목록까지 함께. _article_rep_desc_로 동시 처리 -->
						<div class="article">
							<p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:622px;;height:auto;max-width:100%"><img src="http://cfile29.uf.tistory.com/image/2729D13A579E32F4025B28" style="max-width:100%;height:auto" width="622" height="288" filename="lab_05_00.png" filemime="image/jpeg"/></span></p>
<p>개인적으로는 코딩이 훨씬 쉽고 개념 정리하는 것도 쉽게 느껴진다. 힘들게 힘들게 Logistic Regression에 대해 이론적인 내용을 정리했으니, 텐서플로우로 결과를 볼 때가 됐다.</p>
<p><br /></p>
<p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:549px;;height:auto;max-width:100%"><img src="http://cfile27.uf.tistory.com/image/213D684857974796296FCF" style="max-width:100%;height:auto" width="549" height="340" filename="lab_05_01.png" filemime="image/jpeg"/></span></p>
<p>앞의 글에서 엄청난 설명을 했던 공식들이다. 복잡하긴 한데, 앞의 글을 읽었다면 그래도 좀 알 것 같은 느낌이 들어야 하지 않을까?</p>
<p><br /></p>
<p>아래는 이번 글에서 사용한 소스코드 전체이다.&nbsp;<span class="imageblock" style="display:inline-block;;height:auto;max-width:100%"><a href="http://pythonkim.tistory.com/attachment/cfile6.uf@254D6843580631712C53A1.txt"><img src="//i1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/image/extension/txt.gif" alt="" style="vertical-align: middle;" /> 04train.txt</a></span></p><p><a class="txc-file"></a></p><pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color:#66d9ef;font-style:italic;">import </span>tensorflow <span style="color:#66d9ef;font-style:italic;">as </span>tf<br /><span style="color:#66d9ef;font-style:italic;">import </span>numpy <span style="color:#66d9ef;font-style:italic;">as </span>np<br /><br /><span style="color:#75715e;"># 04train.txt<br /></span><span style="color:#75715e;"># #x0 x1 x2 y<br /></span><span style="color:#75715e;"># 1   2   1   0<br /></span><span style="color:#75715e;"># 1   3   2   0<br /></span><span style="color:#75715e;"># 1   3   5   0<br /></span><span style="color:#75715e;"># 1   5   5   1<br /></span><span style="color:#75715e;"># 1   7   5   1<br /></span><span style="color:#75715e;"># 1   2   5   1<br /></span><span style="color:#75715e;"><br /></span><span style="color:#75715e;"># 원본 파일은 6행 4열이지만, 열 우선이라서 4행 6열로 가져옴<br /></span>xy <span style="color:#f92672;">= </span>np.loadtxt(<span style="color:#008080;font-weight:bold;">'04train.txt'</span>, <span style="color:#660099;">unpack</span><span style="color:#f92672;">=</span><span style="color:#66d9ef;font-style:italic;">True</span>, <span style="color:#660099;">dtype</span><span style="color:#f92672;">=</span><span style="color:#008080;font-weight:bold;">'float32'</span>)<br /><br /><span style="color:#75715e;"># print(xy[0], xy[-1])        # [ 1.  1.  1.  1.  1.  1.] [ 0.  0.  0.  1.  1.  1.]<br /></span><span style="color:#75715e;"><br /></span>x_data <span style="color:#f92672;">= </span>xy[<span style="color:#f92672;">:-</span><span style="color:#ae81ff;">1</span>]            <span style="color:#75715e;"># 3행 6열<br /></span>y_data <span style="color:#f92672;">= </span>xy[<span style="color:#f92672;">-</span><span style="color:#ae81ff;">1</span>]             <span style="color:#75715e;"># 1행 6열<br /></span><span style="color:#75715e;"><br /></span>X <span style="color:#f92672;">= </span>tf.placeholder(tf.float32)<br />Y <span style="color:#f92672;">= </span>tf.placeholder(tf.float32)<br /><br /><span style="color:#75715e;"># feature별 가중치를 난수로 초기화. feature는 bias 포함해서 3개. 1행 3열.<br /></span>W <span style="color:#f92672;">= </span>tf.Variable(tf.random_uniform([<span style="color:#ae81ff;">1</span>, <span style="color:#66d9ef;">len</span>(x_data)], <span style="color:#f92672;">-</span><span style="color:#ae81ff;">1.0</span>, <span style="color:#ae81ff;">1.0</span>))<br /><br /><span style="color:#75715e;"># 행렬 곱셈. (1x3) * (3x6)<br /></span>h <span style="color:#f92672;">= </span>tf.matmul(W, X)<br />hypothesis <span style="color:#f92672;">= </span>tf.div(<span style="color:#ae81ff;">1.</span>, <span style="color:#ae81ff;">1. </span><span style="color:#f92672;">+ </span>tf.exp(<span style="color:#f92672;">-</span>h))    <span style="color:#75715e;"># exp(-h) = e ** -h. e는 자연상수<br /></span><span style="color:#75715e;"><br /></span><span style="color:#75715e;"># exp()에는 실수만 전달<br /></span><span style="color:#75715e;"># print(tf.exp([1., 2., 3.]).eval())      # [2.71828175 7.38905621 20.08553696]<br /></span><span style="color:#75715e;"># print(tf.exp([-1., -2., -3.]).eval())   # [0.36787945 0.13533528 0.04978707]<br /></span><span style="color:#75715e;"><br /></span>cost <span style="color:#f92672;">= -</span>tf.reduce_mean(Y <span style="color:#f92672;">* </span>tf.log(hypothesis) <span style="color:#f92672;">+ </span>(<span style="color:#ae81ff;">1 </span><span style="color:#f92672;">- </span>Y) <span style="color:#f92672;">* </span>tf.log(<span style="color:#ae81ff;">1 </span><span style="color:#f92672;">- </span>hypothesis))<br /><br />rate <span style="color:#f92672;">= </span>tf.Variable(<span style="color:#ae81ff;">0.1</span>)<br />optimizer <span style="color:#f92672;">= </span>tf.train.GradientDescentOptimizer(rate)<br />train <span style="color:#f92672;">= </span>optimizer.minimize(cost)<br /><br />init <span style="color:#f92672;">= </span>tf.initialize_all_variables()<br /><br />sess <span style="color:#f92672;">= </span>tf.Session()<br />sess.run(init)<br /><br /><span style="color:#66d9ef;font-style:italic;">for </span>step <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(<span style="color:#ae81ff;">2001</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span>sess.run(train, <span style="color:#660099;">feed_dict</span><span style="color:#f92672;">=</span>{X<span style="color:#f92672;">: </span>x_data, Y<span style="color:#f92672;">: </span>y_data})<br />    <span style="color:#66d9ef;font-style:italic;">if </span>step <span style="color:#f92672;">% </span><span style="color:#ae81ff;">20 </span><span style="color:#f92672;">== </span><span style="color:#ae81ff;">0</span><span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span><span style="color:#66d9ef;">print</span>(step, sess.run(cost, <span style="color:#660099;">feed_dict</span><span style="color:#f92672;">=</span>{X<span style="color:#f92672;">: </span>x_data, Y<span style="color:#f92672;">: </span>y_data}), sess.run(W))<br /><br /><span style="color:#66d9ef;">print</span>(<span style="color:#008080;font-weight:bold;">'-----------------------------------------'</span>)<br /><br /><span style="color:#75715e;"># 결과가 0 또는 1로 계산되는 것이 아니라 0과 1 사이의 값으로 나오기 때문에 True/False는 직접 판단<br /></span><span style="color:#66d9ef;">print</span>(<span style="color:#008080;font-weight:bold;">'[1, 2, 2] :'</span>, sess.run(hypothesis, <span style="color:#660099;">feed_dict</span><span style="color:#f92672;">=</span>{X<span style="color:#f92672;">: </span>[[<span style="color:#ae81ff;">1</span>], [<span style="color:#ae81ff;">2</span>], [<span style="color:#ae81ff;">2</span>]]}) <span style="color:#f92672;">&gt; </span><span style="color:#ae81ff;">0.5</span>)<br /><span style="color:#66d9ef;">print</span>(<span style="color:#008080;font-weight:bold;">'[1, 5, 5] :'</span>, sess.run(hypothesis, <span style="color:#660099;">feed_dict</span><span style="color:#f92672;">=</span>{X<span style="color:#f92672;">: </span>[[<span style="color:#ae81ff;">1</span>], [<span style="color:#ae81ff;">5</span>], [<span style="color:#ae81ff;">5</span>]]}) <span style="color:#f92672;">&gt; </span><span style="color:#ae81ff;">0.5</span>)<br /><span style="color:#66d9ef;">print</span>(<span style="color:#008080;font-weight:bold;">'[1, 4, 2] [1, 0, 10] :'</span>, <span style="color:#660099;">end</span><span style="color:#f92672;">=</span><span style="color:#008080;font-weight:bold;">' '</span>)<br /><span style="color:#66d9ef;">print</span>(sess.run(hypothesis, <span style="color:#660099;">feed_dict</span><span style="color:#f92672;">=</span>{X<span style="color:#f92672;">: </span>[[<span style="color:#ae81ff;">1</span>, <span style="color:#ae81ff;">1</span>], [<span style="color:#ae81ff;">4</span>, <span style="color:#ae81ff;">0</span>], [<span style="color:#ae81ff;">2</span>, <span style="color:#ae81ff;">10</span>]]}) <span style="color:#f92672;">&gt; </span><span style="color:#ae81ff;">0.5</span>)<br />sess.close()<br /></pre><pre style="background-color: rgb(39, 40, 34);"><font color="#f8f8f2" face="Menlo"><span style="font-size: 12px; color: rgb(255, 255, 255);">[출력 결과]
...
1920 0.340956 [[-5.85679626  0.47247875  1.018206  ]]
1940 0.340727 [[-5.87786055  0.47344807  1.02187181]]
1960 0.340503 [[-5.8986907   0.47439972  1.02550077]]
1980 0.340284 [[-5.91929054  0.4753342   1.02909374]]
2000 0.340069 [[-5.93966627  0.47625202  1.03265131]]
-----------------------------------------
[1, 2, 2] : [[False]]
[1, 5, 5] : [[ True]]
[1, 4, 2] [1, 0, 10] : [[False  True]]</span></font></pre>
<p>파일에 있는 데이터를 읽어서 x_data와 y_data에 치환해서 사용하는 코드다. 음수 인덱스와 슬라이싱은 이전 글에서 설명했으니 여기서는 건너뛴다.</p>
<p><br /></p>
<pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color:#75715e;"># feature별 가중치를 난수로 초기화. feature는 bias 포함해서 3개. 1행 3열.<br /></span>W <span style="color:#f92672;">= </span>tf.Variable(tf.random_uniform([<span style="color:#ae81ff;">1</span>, <span style="color:#66d9ef;">len</span>(x_data)], <span style="color:#f92672;">-</span><span style="color:#ae81ff;">1.0</span>, <span style="color:#ae81ff;">1.0</span>))<br /></pre>
<p>가중치 배열을 생성하는 코드로 1행 3열의 2차원 배열이다.&nbsp;</p>
<p><br /></p>
<pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color:#75715e;"># 행렬 곱셈. (1x3) * (3x6)<br /></span>h <span style="color:#f92672;">= </span>tf.matmul(W, X)<br />hypothesis <span style="color:#f92672;">= </span>tf.div(<span style="color:#ae81ff;">1.</span>, <span style="color:#ae81ff;">1. </span><span style="color:#f92672;">+ </span>tf.exp(<span style="color:#f92672;">-</span>h))    <span style="color:#75715e;"># exp(-h) = e ** -h. e는 자연상수<br /></span></pre>
<p>X는 3행 6열의 배열이다. 현재는 placeholder로 되어 있고, 맨 밑의 반복문에서 데이터와 연결된다. matmul 함수는 행렬 곱셈을 지원하는 함수로, W와 X의 행렬 크기가 어울리지 않으면 에러를 발생시킨다. 여기서 사용된 2개의 변수에는 오해가 있을 수 있다. 정확하게 말하면 h가 hypothesis에 해당하고, hypothesis는 sigmoid에 해당한다. 그러나, 처음에 나온 그림에서 첫 번째 공식을 표현할 때 sigmoid를 H(X)로 표현했기 때문에, 김성훈 교수님의 동영상에서는 적절한 변수 이름이라고 할 수 있다. 그러나, sigmoid의 역할이 자연상수 e의 지수를 사용해서 hypothesis의 결과를 0과 1 사이의 값으로 변환하는 것임을 상기하면 수긍 가능할 것이다.</p>
<p><br /></p>
<pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;">cost <span style="color:#f92672;">= -</span>tf.reduce_mean(Y <span style="color:#f92672;">* </span>tf.log(hypothesis) <span style="color:#f92672;">+ </span>(<span style="color:#ae81ff;">1 </span><span style="color:#f92672;">- </span>Y) <span style="color:#f92672;">* </span>tf.log(<span style="color:#ae81ff;">1 </span><span style="color:#f92672;">- </span>hypothesis))<br /></pre>
<p>앞의 그림에서 두 번째 공식을 표현한다. reduce_mean 함수의 파라미터는 정확하게 시그마(∑)의 오른쪽에 있는 공식을 있는 그대로 표현하고 있다. 글자 그대로 log 함수를 호출했고, 약속했던 매개변수를 전달한다. 코드 맨 앞에는 음수 기호(-)도 붙어 있다.</p>
<p><br /></p>
<pre style="color: rgb(248, 248, 242); font-family: Menlo; font-size: 9pt; background-color: rgb(39, 40, 34);"><span style="color: rgb(102, 217, 239);">print</span>(<span style="color: rgb(0, 128, 128); font-weight: bold;">'[1, 2, 2] :'</span>, sess.run(hypothesis, <span style="color: rgb(102, 0, 153);">feed_dict</span><span style="color: rgb(249, 38, 114);">=</span>{X<span style="color: rgb(249, 38, 114);">: </span>[[<span style="color: rgb(174, 129, 255);">1</span>], [<span style="color: rgb(174, 129, 255);">2</span>], [<span style="color: rgb(174, 129, 255);">2</span>]]}) <span style="color: rgb(249, 38, 114);">&gt; </span><span style="color: rgb(174, 129, 255);">0.5</span>)</pre>
<p>학습 결과를 사용해서 성공과 실패를 예측하고 있다. 여기서 착각하면 안 되는 것이 hypothesis가 성공 또는 실패를 참과 거짓으로 직접 알려주는 것이 아니라 sigmoid 함수를 통해 0과 1 사이의 값으로 변환한 결과를 알려준다는 사실이다. 그래서, 참과 거짓에 대한 결과는 직접 0.5와 비교해서 사용해야 한다. 60%의 성공 확률이라고 표현할 수도 있기 때문에, 이렇게 반환하는 것이 맞다고 생각한다.</p>
<p>placeholder에 전달되는 X의 값이 조금 어렵다. 그런데, 앞에서 '04train.txt' 파일을 읽어올 때의 x_data는 6개의 데이터를 갖고 있어서 3행 6열이었다. 이번에는 데이터를 1개만 전달하기 때문에 3행 1열이 되어야 하니까, [[1], [2], [2]]와 같은 []가 두 번 중첩되어서 나오는 것이 맞다.</p>
<p><br /></p>
<p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:788px;;height:auto;max-width:100%"><img src="http://cfile30.uf.tistory.com/image/2739AC4757974F6B1A91EB" style="max-width:100%;height:auto" width="788" height="447" filename="lab_05_02.png" filemime="image/jpeg"/></span></p>
<p>동영상에서 코드가 있는 부분을 캡쳐했다. 위의 그림을 보면, 코드와 어울리는 공식이 어떤 것인지 쉽게 알 수 있다.</p>
<p><br /></p><pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color: rgb(255, 255, 255);">96000 0.321994 </span><span style="color: rgb(255, 255, 255);">[[</span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">12.81583881   0.57090575   2.35556102</span><span style="color: rgb(255, 255, 255);">]]</span><br /><span style="color: rgb(255, 255, 255);">97000 0.321991 </span><span style="color: rgb(255, 255, 255);">[[</span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">12.83300495   0.57092708   2.35898232</span><span style="color: rgb(255, 255, 255);">]]</span><br /><span style="color: rgb(255, 255, 255);">98000 0.321988 </span><span style="color: rgb(255, 255, 255);">[[</span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">12.85017109   0.570948     2.36240411</span><span style="color: rgb(255, 255, 255);">]]</span><br /><span style="color: rgb(255, 255, 255);">99000 0.321985 </span><span style="color: rgb(255, 255, 255);">[[</span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">12.86729622   0.57096756   2.36581874</span><span style="color: rgb(255, 255, 255);">]]</span><br /><span style="color: rgb(255, 255, 255);">100000 0.321983 </span><span style="color: rgb(255, 255, 255);">[[</span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">12.88358688   0.57098198   2.36907005</span><span style="color: rgb(255, 255, 255);">]]</span><br /></pre>
<p>최종적으로 두 번째 열에 있는 cost는 0이 되지 않았다. 앞에서 보여준 간단하면서도 feature가 하나밖에 없는 예제에서는 cost가 0이 될 수도 있겠지만, 실제 상황에서는 0이 될 수 없는 것이 맞다. 10만번을 구동시켜서 확인했는데, 위와 같은 결과가 나왔다. 줄어들기는 하지만, 0이 될 수는 없다.</p>
<p>결국 &nbsp;classification이라고 하는 것은 2차원 좌표상에 흩어진 데이터를 직선을 그어서 구분하겠다는 뜻인데, 그 직선을 계산하는 비용이 0이 될 수는 없다. 어떻게 계산해도 상당한 거리일 수밖에 없다. Logistic Regression을 포함한 모든 예측에서 100% 만족한 결과란 존재하지 않는다. 100%는 신의 영역이다. 대통령 선거와 같은 투표 결과 또한 위아래 5% 정도의 오차를 허용하고 있지 않은가?</p><div class="daum_like_wrapper"><iframe class="daum_like_button" id="daum_like_button_17" frameborder="0" scrolling="no" allowTransparency="true" src="http://pythonkim.tistory.com/like/?uid=2072317_17&sc=404%2CblogId_2072317&url=http%3A%2F%2Fpythonkim.tistory.com%2F17&published=1469587665" style="width:100%;height:44px;margin:10px auto"></iframe></div><div style="width:100%;margin-top:30px;clear:both;height:30px">		<div class="entry-ccl" style="float:right;margin-top:0;height:0">
			<a href="http://creativecommons.org/licenses/by/4.0/deed.ko" target="_blank" style="text-decoration: none">
				<img id="ccl-icon-17-0" class="entry-ccl-by" src="//i1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/static/admin/editor/ccl_black01.png"
				     onmouseover="tistoryCcl.show(this, 3)"
				     onmouseout="tistoryCcl.hide()" alt="저작자 표시" style="width:15px;height:15px"/>
								<!--
	<rdf:RDF xmlns="http://web.resource.org/cc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
		<Work rdf:about="">
			<license rdf:resource="http://creativecommons.org/licenses/by-fr/2.0/kr/" />
		</Work>
		<License rdf:about="http://creativecommons.org/licenses/by-fr/">
			<permits rdf:resource="http://web.resource.org/cc/Reproduction"/>
			<permits rdf:resource="http://web.resource.org/cc/Distribution"/>
			<requires rdf:resource="http://web.resource.org/cc/Notice"/>
			<requires rdf:resource="http://web.resource.org/cc/Attribution"/>
			<permits rdf:resource="http://web.resource.org/cc/DerivativeWorks"/>
		</License>
	</rdf:RDF>
	-->
			</a>
		</div>
					<script type="text/javascript">
				if (/MSIE [0-6]\./.test(navigator.userAgent)) {
					for (var i = 0; i <1; i++) {
						var el = document.getElementById('ccl-icon-17-' + i);
						el.style.filter = 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src="' + el.src + '",sizingMethod="image")';
						el.src = '//i1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/static/admin/form/s.gif';
					}
				}
			</script>
			<div style="width:31px;float:left;"><a href="/toolbar/popup/abuseReport/?entryId=17" onclick="window.open(this.href, 'tistoryThisBlogPopup', 'width=550, height=510, toolbar=no, menubar=no, status=no, scrollbars=no'); return false;"><img style="border:0" src="//t1.daumcdn.net/tistory_admin/static/ico/ico_spam_report.png" alt="신고"></a></div></div><div class="another_category another_category_color_gray">
<h4>'<a href="/category/머신러닝_김성훈교수님">머신러닝_김성훈교수님</a>' 카테고리의 다른 글</h4>
<table>
<tr>
<th>
<a href="http://pythonkim.tistory.com/19" >14. Softmax Regression- 기본 개념 소개 (lec 06-1)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.27</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/18" >13. 파이썬으로 Logistic Regression 직접 구현</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.27</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/17"  class ="current" >12. TensorFlow로 Logistic Classification의 구현하기 (lab 05)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.27</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/22" >11. Logistic Regression의 cost 함수 설명 (lec 05-2)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.27</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/16" >10. Logistic Classification의 가설 함수 정의 (lec 05-1)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.26</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/15" >09. 1주차 스터디 정리</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.25</td>
</tr>
</table></div>
						</div>

						<!-- 글 목록 하단의 프로필. 이미지와 간략한 소개 나오는 곳 -->
						<!-- 프로필 아래에 "받은 트랙백이 없고, 댓글이 없습니다." <div class="actionTrail"> -->
						
					</div> 					<!-- end of entry -->
				

			<!-- 하단 목록 번호 1 2 3 .. 9 10 <s_paging> -->
			</div>
			
			<div class="col-md-3">
				<!-- 기본 사이드바 -->
				<div class="sidebar">
				
					<!-- 오른쪽 사이드바의 공지사항 모듈. 없앨려면, s_sidebar_element 안쪽을 주석으로 막아야 한다. b 태그 추가했다 -->
						
							<div id="notice" class="widget">
								<h3><i class="fa fa-bullhorn"></i>공지사항</h3>
								<ul class="fa-ul">
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/77"><b>파이썬 동영상</b></a> </li>
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/76"><b>머신러닝 동영상</b></a> </li>
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/25"><b>머신러닝 목차</b></a> </li>
									
								</ul>
							</div>
						
					
					<!-- 오른쪽 사이드바의 카테고리 모듈. 없앨려면, s_sidebar_element 안쪽을 주석으로 막아야 한다. -->
						<div id="category" class="widget">
							<h3><i class="fa fa-folder"></i>카테고리</h3>
							<ul class="tt_category">
	<li class="">
		<a class="link_tit" href="/category">
			분류 전체보기							<span class="c_cnt">(70)</span>
			
					</a>

				<ul class="category_list">
							<li class="">
					<a class="link_item" href="/category/프로필">
						프로필													<span class="c_cnt">(0)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/머신러닝">
						머신러닝													<span class="c_cnt">(3)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/머신러닝_김성훈교수님">
						머신러닝_김성훈교수님													<span class="c_cnt">(45)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/텐서플로우">
						텐서플로우													<span class="c_cnt">(12)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/이것저것">
						이것저것													<span class="c_cnt">(10)</span>
						
											</a>

					
				</li>
					</ul>
			</li>
</ul>

						</div>
					
						<div class="author alert alert-success">
							<img src="http://cfile4.uf.tistory.com/image/211AB7495706515D201F0D" alt="블로그 이미지" 
									 class="img-responsive img-circle text-center" width="50%">
							<p><span class="text label label-primary"></span></p>
							<p>얼떨결에 붙인 이름 파이썬_킴</p>
						</div>
					
				</div>
			</div>
		</div>
	</div>
</div>
<!--	
<div id="footer">
	<div class="container">
		<div class="row">
				<div class="copyright">
					<p class="text-center">Copyright 2016 파이썬_킴. All Rights Reserved.<br/>
				</div>
		</div>
	</div>
</div>
-->


<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
<!-- Include all compiled plugins (below), or include individual files as needed -->
<script src="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/bootstrap.min.js"></script>
<script>
$(window).scroll(function() {
  if ($(document).scrollTop() > 50) {
    $('nav').addClass('shrink');
  } else {
    $('nav').removeClass('shrink');
  }
});
</script>
<script id="DragSearchJs" type="text/javascript" src="http://s1.daumcdn.net/img.search/front/js/searchDragSelection.js?nil_ch=tistory" charset="euc-kr"></script>
<script>
$("body").bind('copy', function (e) {
    if (typeof window.getSelection == "undefined") {//IE8 or earlier...
        event.preventDefault();

        var pagelink = '\n\n 출처: ' + decodeURI(document.location.href),
            copytext =  window.getSelection() + pagelink;

        if (window.clipboardData) {
            window.clipboardData.setData('Text', copytext);
        }
        return;
    }
    var body_element = document.getElementsByTagName('body')[0];
    var selection = window.getSelection();

    //if the selection is short let's not annoy our users
    if (("" + selection).length < 30) return;

    //create a div outside of the visible area
    var newdiv = document.createElement('div');
    newdiv.style.position = 'absolute';
    newdiv.style.left = '-99999px';
    body_element.appendChild(newdiv);
    newdiv.appendChild(selection.getRangeAt(0).cloneContents());

    //we need a <pre> tag workaround
    //otherwise the text inside "pre" loses all the line breaks!
    if (selection.getRangeAt(0).commonAncestorContainer.nodeName == "PRE") {
        newdiv.innerHTML = "<pre>" + newdiv.innerHTML + "</pre>";
    }

    newdiv.innerHTML += "<br /><br />출처: <a href='"
        + document.location.href + "'>"
        + decodeURI(document.location.href) + "</a> [파이쿵]";

    selection.selectAllChildren(newdiv);
    window.setTimeout(function () { body_element.removeChild(newdiv); }, 200);
});
</script><script> if (!window.jQuery) document.write("<script src=\"http://t1.daumcdn.net/tistory_admin/lib/jquery-1.12.4.min.js\"><\/script>") </script>
	<script src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/lightbox/assets/js/lightbox.min.js"></script>
	<script>
	    lightbox.option({
			"fadeDuration": 200,
		    "resizeDuration": 200,
		    "wrapAround": false,
			"albumLabel": "%1 / %2",
			"fitImagesInViewport":true ,
			"stopEvent": false
	    })
	</script><script type="text/javascript">
var _tiq = 'undefined' !== typeof _tiq ? _tiq : []; // Global Variables
_tiq.push(["__setParam", "title", "파이쿵 :: 12. TensorFlow로 Logistic Classification의 구현하기 (lab 05)"]);
_tiq.push(["__setParam", "svcdomain", "user.tistory.com"]);
_tiq.push(["__setParam", "category", ""]);
_tiq.push(["__setParam", "articleno", "17"]);
_tiq.push(["__setParam", "plink", "http://pythonkim.tistory.com/17"]);
_tiq.push(["__setParam", "date", "2016-07-27 11:47:45"]);
_tiq.push(["__setParam", "author", "pythonkim"]);
_tiq.push(["__setParam", "length", "16436"]);
_tiq.push(["__setParam", "isauthor", "N"]);
_tiq.push(["__setParam", "ishidden", "1"]);
_tiq.push(["__setParam", "comments", "0"]);
_tiq.push(["__setParam", "param1", "0"]);
_tiq.push(["__setParam", "param2", "e"]);
_tiq.push(["__setParam", "param3", ""]);
_tiq.push(["__setParam", "like_ex", "{'serviceId': 'tistory', 'uniqueId': '2072317_17', 'serviceCategories': '404,blogId_2072317'}"]);
_tiq.push(["__trackPageview"]);
(function(d) {
	var se = d.createElement('script'); se.type = 'text/javascript'; se.async = true;
	se.src = location.protocol + '//m2.daumcdn.net/tiara/js/td.min.js';
	var s = d.getElementsByTagName('head')[0]; s.appendChild(se);
})(document);
</script>
<script type="text/javascript">
var __TiaraObj = __TiaraObj || {}; if ('undefined' === typeof __TiaraObj.startTime) { __TiaraObj.startTime = new Date(); }
var addEvent = function (evt, fn) { window.addEventListener ? window.addEventListener(evt, fn, false) : window.attachEvent('on' + evt, fn); };
var ua = navigator.userAgent.toLowerCase(); var isIOS = /iP[ao]d|iPhone/i.test(ua); var contentStat = function() {
_tiq.push(['__content', 't_content', {
"c_id":"2072317_17", 
"c_title":"파이쿵 :: 12. TensorFlow로 Logistic Classification의 구현하기 (lab 05)", 
"type":"article", 
"author":"사과쿵", 
"author_id":"1415031", 
"cp":"pythonkim", 
"cp_id":"2072317", 
"regdata":"2016-07-27 11:47:45", 
"plink":"http://pythonkim.tistory.com/17", 
"media":"pcweb", 
"comment_cnt":0, 
"duration": (new Date()).getTime() - __TiaraObj.startTime.getTime()
}]); };
addEvent(isIOS ? "pagehide" : "beforeunload", contentStat);
</script>
<script type="text/javascript">window.roosevelt_params_queue = window.roosevelt_params_queue || []; window.roosevelt_params_queue.push({channel_id: "dk", channel_label: "tistory"});</script>
<script type="text/javascript" src="//adimg.daumcdn.net/rt/dk_bt/roosevelt_dk_bt.js" async></script><script type="text/javascript">if(window.console!=undefined){setTimeout(console.log.bind(console,"%cTISTORY","font:8em Arial;color:#EC6521;font-weight:bold"),0);setTimeout(console.log.bind(console,"%c  나를 표현하는 블로그","font:2em sans-serif;color:#333;"),0);}</script>		<div id="tistorytoolbarid"
		     style="position:absolute;height:20px;top:4px;right:0px;background-color:transparent;background-image:none;z-index:11;">
			<div class="tistorytoolbar tt_menubar_login">
				<div
					class="tt_menubar_whiteBar">
					<div id="ttMenubarInnerWrap" class="tt_menubar_inner">
						<div class="tt_menubar_bg_toolbar"></div>
						<h2 style="display:none;">티스토리 툴바</h2>
						<div class="tt_menubar_mainmenu"><a
								class="tt_menubar_link_tit tt_menubar_link_tit_daum tt_menubar_link_tit_eng"
								href="http://www.daum.net/?nil_ref=tistory"
								target="_blank">Daum</a></div>
						<div class="tt_menubar_bg_bar"></div>
						<div class="tt_menubar_mainmenu"><a class="tt_menubar_link_tit tt_menubar_link_tit_eng"
						                                    href="http://www.tistory.com">Tistory</a>
						</div>
						<div class="tt_menubar_bg_bar"></div>
						<div class="tt_menubar_logout"><a class="tt_menubar_link_tit"
														  href="https://www.tistory.com/auth/login">로그인</a>
						</div>
					</div>
				</div>
			</div>
		</div>
		</body>
</html>
