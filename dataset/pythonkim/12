<!doctype html>
<html lang="ko">

<head>

<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="alternate" type="application/rss+xml" title="파이쿵" href="http://pythonkim.tistory.com/rss" />
<link href="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
<link href="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/style.css?_T_=1470399111" rel="stylesheet">
<link rel="shortcut icon" href="/favicon.ico" />
<title>파이쿵 :: 06. cost 함수를 파이썬만으로 직접 구현</title>

<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
<!--[if lt IE 9]>
  <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
  <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
<![endif]-->
		
<!-- 구글 애널리틱스 -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-76456208-1', 'auto');
  ga('send', 'pageview');
</script>
	

<style type="text/css">
		#daumSearchBox {
			height: 21px;
			background-image : url(http://i1.daumcdn.net/imgsrc.search/search_all/show/tistory/plugin/bg_search2_2.gif);
			margin: 5px auto ;
			padding: 0;
		}
		#daumSearchBox input {
			background: none;
			margin : 0;
			padding : 0;
			border : 0;
		}
		#daumSearchBox #daumLogo {
			width: 34px;
			height: 21px;
			float: left;
			margin-right: 5px;
			background-image : url(http://i1.daumcdn.net/img-media/tistory/img/bg_search1_2_2010ci.gif);
		}
		#daumSearchBox #show_q {
			background-color: transparent;
			border: none;
			font: 12px Gulim, Sans-serif;
			color: #555;
			margin-top: 4px;
			margin-right: 15px;
			float: left;
		}

		#daumSearchBox #show_btn {
			background-image : url(http://i1.daumcdn.net/imgsrc.search/search_all/show/tistory/plugin/bt_search_2.gif);
			width: 37px;
			height: 21px;
			float: left;
			margin:0;
			cursor:pointer;
			text-indent:-1000em;
		}
	</style><link rel="stylesheet" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/lightbox/assets/css/lightbox.min.css" />
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/TistoryProfileLayer/style.css" />
<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/TistoryProfileLayer/profile.js"></script>
	<style type="text/css">
		.another_category { border: 1px solid #E5E5E5; padding: 10px 10px 5px; margin:10px 0; clear: both; }
		.another_category h4 { font-size: 12px !important; margin: 0 !important; border-bottom: 1px solid #E5E5E5 !important; padding: 2px 0 6px !important; }
		.another_category h4 a { font-weight: bold !important; }
		.another_category table { table-layout: fixed; border-collapse: collapse; width: 100% !important; margin-top: 10px !important; }
		* html .another_category table { width: auto !important; }
		*:first-child+html .another_category table { width: auto !important; }
		.another_category th, .another_category td { padding: 0 0 4px !important; }
		.another_category th { text-align: left; font-size: 12px !important; font-weight: normal;  word-break: break-all; overflow: hidden; line-height: 1.5; }
		.another_category td { text-align: right; width: 80px; font-size: 11px; }
		.another_category th a { font-weight: normal; text-decoration: none; border: none !important; }
		.another_category th a.current{ font-weight: bold; text-decoration: none !important; border-bottom: 1px solid !important; }
		.another_category th span { font-weight: normal; text-decoration: none; font: 10px Tahoma, Sans-serif; border: none !important; }

		.another_category_color_gray, .another_category_color_gray h4 { border-color: #E5E5E5 !important; }
		.another_category_color_gray * { color: #909090 !important; }
		.another_category_color_gray th a.current{border-color:#909090 !important;}
		.another_category_color_gray h4, .another_category_color_gray h4 a { color: #737373 !important; }


		.another_category_color_red, .another_category_color_red h4 { border-color: #F6D4D3 !important;  }
		.another_category_color_red * { color: #E86869 !important; }
		.another_category_color_red th a.current{border-color:#E86869 !important;}
		.another_category_color_red h4, .another_category_color_red h4 a { color: #ED0908 !important; }


		.another_category_color_green, .another_category_color_green h4 { border-color: #CCE7C8 !important; }
		.another_category_color_green * { color: #64C05B !important; }
		.another_category_color_green th a.current{border-color:#64C05B !important;}
		.another_category_color_green h4, .another_category_color_green h4 a { color: #3EA731 !important; }


		.another_category_color_blue, .another_category_color_blue h4 { border-color: #C8DAF2 !important; }
		.another_category_color_blue * { color: #477FD6 !important; }
		.another_category_color_blue th a.current{border-color:#477FD6 !important;}
		.another_category_color_blue h4, .another_category_color_blue h4 a { color: #1960CA !important; }


		.another_category_color_violet, .another_category_color_violet h4 { border-color: #E1CEEC !important;  }
		.another_category_color_violet * { color:#9D64C5 !important; }
		.another_category_color_violet th a.current{border-color:#9D64C5 !important;}
		.another_category_color_violet h4, .another_category_color_violet h4 a { color: #7E2CB5 !important; }
	</style>
<script type="text/javascript">
window.TistoryBlog = {
    url: "http://pythonkim.tistory.com",
	tistoryUrl: "http://pythonkim.tistory.com"
};
var servicePath = "";
var blogURL = "";
</script>
<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/script/_/base.js"></script>
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/style/dialog.css"/>
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/style/menubar.css"/><style type="text/css">.tt_article_useless_p_margin p {padding-top:0 !important;padding-bottom:0 !important;margin-top:0 !important;margin-bottom:0 !important;}</style><meta name="referrer" content="always"><link rel="shortcut icon" href="http://i1.daumcdn.net/cfs.tistory/static/top/favicon_0630.ico"/><meta name="description" content="텐서플로우가 동작하는 것은 그렇다 치고 직접 앞에서 설명한 공식들을 코드로 만들고 싶어졌다. 구글링을 엄청 하면서 어렵게 만든 어색한 코드가 여기 있다. def cost(W, X, y): s = 0 for i in range(len(X)): s += (W * X[i] - y[i]) ** 2 return s / len(X) X = [1., 2., 3.] Y = [1., 2., 3.] W_val, cost_val = [], [] for i in range(-30, 51): W = i*0.1 c = cost(W, X, Y) print('{:.1f}, {:.1f}'.format(W, c)) W_val..">

<!-- BEGIN OPENGRAPH -->
<link rel="canonical" href="http://pythonkim.tistory.com/12" /><meta property="og:type" content="article"><meta property="og:url" content="http://pythonkim.tistory.com/12" ><meta property="og:site_name" content="파이쿵" ><meta property="og:title" content="06. cost 함수를 파이썬만으로 직접 구현" ><meta name="by" content="사과쿵" ><meta property="og:description" content="텐서플로우가 동작하는 것은 그렇다 치고 직접 앞에서 설명한 공식들을 코드로 만들고 싶어졌다. 구글링을 엄청 하면서 어렵게 만든 어색한 코드가 여기 있다. def cost(W, X, y): s = 0 for i in range(len(X)): s += (W * X[i] - y[i]) ** 2 return s / len(X) X = [1., 2., 3.] Y = [1., 2., 3.] W_val, cost_val = [], [] for i in range(-30, 51): W = i*0.1 c = cost(W, X, Y) print('{:.1f}, {:.1f}'.format(W, c)) W_val.." ><meta property="og:image" content="http://cfile3.uf.tistory.com/image/245F553757920EDA307391" ><meta property="article:section" content="과학" >
<!-- END OPENGRAPH -->



<!-- BEGIN TWITTERCARD -->
<meta name="twitter:card" content="summary_large_image"><meta name="twitter:site" content="@TISTORY"><meta name="twitter:title" content="06. cost 함수를 파이썬만으로 직접 구현" ><meta name="twitter:description" content="텐서플로우가 동작하는 것은 그렇다 치고 직접 앞에서 설명한 공식들을 코드로 만들고 싶어졌다. 구글링을 엄청 하면서 어렵게 만든 어색한 코드가 여기 있다. def cost(W, X, y): s = 0 for i in range(len(X)): s += (W * X[i] - y[i]) ** 2 return s / len(X) X = [1., 2., 3.] Y = [1., 2., 3.] W_val, cost_val = [], [] for i in range(-30, 51): W = i*0.1 c = cost(W, X, Y) print('{:.1f}, {:.1f}'.format(W, c)) W_val.." ><meta property="twitter:image" content="http://cfile3.uf.tistory.com/image/245F553757920EDA307391" >
<!-- END TWITTERCARD -->



<!-- BEGIN DAUMAPP -->
<meta property="dg:plink" content="http://pythonkim.tistory.com/12" ><meta name="plink" content="http://pythonkim.tistory.com/12" ><meta name="title" content="06. cost 함수를 파이썬만으로 직접 구현" ><meta name="article:media_name" content="파이쿵" ><meta property="article:mobile_url" content="http://pythonkim.tistory.com/m/12" ><meta property="article:pc_url" content="http://pythonkim.tistory.com/12" ><meta property="article:mobile_view_url" content="http://pythonkim.tistory.com/m/12" ><meta property="article:pc_view_url" content="http://pythonkim.tistory.com/12" ><meta property="article:pc_service_home" content="http://www.tistory.com" ><meta property="article:mobile_service_home" content="http://www.tistory.com/m" ><meta property="article:txid" content="2072317_12" /><meta property="article:published_time" content="2016-07-22T21:24:36+09:00" ><meta property="og:regDate" content="20160722212436" ><meta property="article:modified_time" content="2017-01-15T17:18:48+09:00" >
<!-- END DAUMAPP -->



<!-- BEGIN STRUCTURED_DATA -->
<script type="application/ld+json">{"@context":"http://schema.org", "@type":"BlogPosting","mainEntityOfPage":{"@id": "http://pythonkim.tistory.com/12"},"url":"http://pythonkim.tistory.com/12","headline":"06. cost 함수를 파이썬만으로 직접 구현","description":"텐서플로우가 동작하는 것은 그렇다 치고 직접 앞에서 설명한 공식들을 코드로 만들고 싶어졌다. 구글링을 엄청 하면서 어렵게 만든 어색한 코드가 여기 있다. def cost(W, X, y): s = 0 for i in range(len(X)): s += (W * X[i] - y[i]) ** 2 return s / len(X) X = [1., 2., 3.] Y = [1., 2., 3.] W_val, cost_val = [], [] for i in range(-30, 51): W = i*0.1 c = cost(W, X, Y) print('{:.1f}, {:.1f}'.format(W, c)) W_val..","author":{"@type":"Person","name":"사과쿵"},"image":{"@type":"ImageObject","url":"http://cfile3.uf.tistory.com/image/245F553757920EDA307391","width":"800px","height":"800px"},"datePublished":"20160722T21:24:36+09:00","dateModified":"20170115T17:18:48+09:00","publisher":{"@type":"Organization","name":"TISTORY","logo":{"@type":"ImageObject","url":"https://t1.daumcdn.net/cssjs/icon/557567EA016E200001","width":"800px","height":"800px"}}}</script>
<!-- END STRUCTURED_DATA -->

<link rel="apple-touch-icon" href="//i1.daumcdn.net/thumb/C180x180/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="76x76" href="//i1.daumcdn.net/thumb/C76x76/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="120x120" href="//i1.daumcdn.net/thumb/C120x120/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="152x152" href="//i1.daumcdn.net/thumb/C152x152/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D"></head>

<body>

<script type="text/javascript">
	T.config = {"TOP_SSL_URL":"https:\/\/www.tistory.com","PREVIEW":false,"ROLE":"guest","PREV_PAGE":"\/13","NEXT_PAGE":"\/11","BLOG":{"isDormancy":false,"title":"\ud30c\uc774\ucff5"},"NEED_COMMENT_LOGIN":false,"COMMENT_LOGIN_CONFIRM_MESSAGE":"","LOGIN_URL":"https:\/\/www.tistory.com\/auth\/login\/?redirectUrl=http%3A%2F%2Fpythonkim.tistory.com%2F12","DEFAULT_URL":"http:\/\/pythonkim.tistory.com","USER":{"name":null,"homepage":null}};
</script>

<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/script/blog/common.js"></script>
<div style="margin:0; padding:0; border:none; background:none; float:none; clear:none; z-index:0"></div>


<div id="header">
	<div class="container-fluid">
		<div class="row">
			<div class="col-md-12">
				<!-- Wrapper for slides 가로세로 비율(4:1)-->
				<div id="carousel" class="carousel slide" data-ride="carousel">
					<div class="centered carousel-inner" role="listbox">
						<div class="item active">
							<img src="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/slider_01.png" width="100%" alt="Carousel 01">
							<div class="carousel-caption">
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- header close -->

<div id="content">					<!-- 슬라이드와 본문 사이의 여백 -->
	<div class="container">
		<div class="row">				<!-- 본문 수평 마진 결정 -->
			<div class="col-md-9">
				

				

				
					<div class="entry">
						<div class="titleWrap jumbotron">
							<!-- 현재 보여지는 글의 제목 -->
							<h2>06. cost 함수를 파이썬만으로 직접 구현</h2>
							<!-- 현재 보여지는 글 제목의 아래에 있는 레이블 박스 2개 -->
							<!--<span class="category label label-primary">머신러닝_김성훈교수님</span> -->
							<!--<span class="date label label-info">2016.07.22 21:24</span> -->
						</div>
						
						<!-- 현재 보여지는 글의 본문과 본문 아래 글 목록까지 함께. _article_rep_desc_로 동시 처리 -->
						<div class="article">
							<p>텐서플로우가 동작하는 것은 그렇다 치고 직접 앞에서 설명한 공식들을 코드로 만들고 싶어졌다. 구글링을 엄청 하면서 어렵게 만든 어색한 코드가 여기 있다.</p><p><br /></p><pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color:#66d9ef;font-style:italic;">def </span><span style="color:#a6e22e;">cost</span>(<span style="color:#fd971f;font-style:italic;">W</span>, <span style="color:#fd971f;font-style:italic;">X</span>, <span style="color:#fd971f;font-style:italic;">y</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span>s <span style="color:#f92672;">= </span><span style="color:#ae81ff;">0<br /></span><span style="color:#ae81ff;">    </span><span style="color:#66d9ef;font-style:italic;">for </span>i <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(<span style="color:#66d9ef;">len</span>(<span style="color:#fd971f;font-style:italic;">X</span>))<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span>s <span style="color:#f92672;">+= </span>(<span style="color:#fd971f;font-style:italic;">W </span><span style="color:#f92672;">* </span><span style="color:#fd971f;font-style:italic;">X</span>[i] <span style="color:#f92672;">- </span><span style="color:#fd971f;font-style:italic;">y</span>[i]) <span style="color:#f92672;">** </span><span style="color:#ae81ff;">2<br /></span><span style="color:#ae81ff;"><br /></span><span style="color:#ae81ff;">    </span><span style="color:#66d9ef;font-style:italic;">return </span>s <span style="color:#f92672;">/ </span><span style="color:#66d9ef;">len</span>(<span style="color:#fd971f;font-style:italic;">X</span>)<br /><br />X <span style="color:#f92672;">= </span>[<span style="color:#ae81ff;">1.</span>, <span style="color:#ae81ff;">2.</span>, <span style="color:#ae81ff;">3.</span>]<br />Y <span style="color:#f92672;">= </span>[<span style="color:#ae81ff;">1.</span>, <span style="color:#ae81ff;">2.</span>, <span style="color:#ae81ff;">3.</span>]<br /><br />W_val, cost_val <span style="color:#f92672;">= </span>[], []<br /><span style="color:#66d9ef;font-style:italic;">for </span>i <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(<span style="color:#f92672;">-</span><span style="color:#ae81ff;">30</span>, <span style="color:#ae81ff;">51</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span>W <span style="color:#f92672;">= </span>i<span style="color:#f92672;">*</span><span style="color:#ae81ff;">0.1<br /></span><span style="color:#ae81ff;">    </span>c <span style="color:#f92672;">= </span>cost(W, X, Y)<br /><br />    <span style="color:#66d9ef;">print</span>(<span style="color:#008080;font-weight:bold;">'{:.1f}, {:.1f}'</span>.format(W, c))<br /><br />    W_val.append(W)<br />    cost_val.append(c)<br /><br />
<span style="color:#75715e;"># ------------------------------------------ #<br /></span>
<span style="color:#75715e;"><br /></span><span style="color:#66d9ef;font-style:italic;">import </span>matplotlib.pyplot <span style="color:#66d9ef;font-style:italic;">as </span>plt<br /><br />plt.plot(W_val, cost_val, <span style="color:#008080;font-weight:bold;">'ro'</span>)<br />plt.ylabel(<span style="color:#008080;font-weight:bold;">'Cost'</span>)<br />plt.xlabel(<span style="color:#008080;font-weight:bold;">'W'</span>)<br />plt.show()<br /></pre><pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;">[출력 결과]<br />...<br /><span style="color: rgb(255, 255, 255);">4.6</span><span style="color: rgb(255, 255, 255);">, </span><span style="color:#ae81ff;"><span style="color: rgb(255, 255, 255);">60.5</span><br /></span><span style="color: rgb(255, 255, 255);">4.7</span><span style="color: rgb(255, 255, 255);">, </span><span style="color:#ae81ff;"><span style="color: rgb(255, 255, 255);">63.9</span><br /></span><span style="color: rgb(255, 255, 255);">4.8</span><span style="color: rgb(255, 255, 255);">, </span><span style="color:#ae81ff;"><span style="color: rgb(255, 255, 255);">67.4</span><br /></span><span style="color: rgb(255, 255, 255);">4.9</span><span style="color: rgb(255, 255, 255);">, </span><span style="color:#ae81ff;"><span style="color: rgb(255, 255, 255);">71.0</span><br /></span><span style="color: rgb(255, 255, 255);">5.0</span><span style="color: rgb(255, 255, 255);">, </span><span style="color:#ae81ff;"><span style="color: rgb(255, 255, 255);">74.7</span><br /></span></pre><p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:585px;;height:auto;max-width:100%"><img src="http://cfile24.uf.tistory.com/image/220A1E50579210552069EE" style="max-width:100%;height:auto" width="585" height="448" filename="lab_03_10.png" filemime="image/jpeg"/></span></p><p><br /></p><p>05. Linear Regression의 cost 최소화의 TensorFlow 구현 (lab 03)에서 보여준 텐서플로우 코드와 동일한 결과를 보여준다. 기울기에 해당하는 W가 바뀌는 과정에서 cost가 어떻게 바뀌는지를 보여주고 있다. 원본 코드와 다른 점이 있다면 cost에 해당하는 값인데, 이건 중요하지 않다. 비용을 계산하는 cost 함수가 convex 형태로 진행되는지가 중요한 것이니까.</p><p><br /></p><pre style="color: rgb(248, 248, 242); font-family: Menlo; font-size: 9pt; background-color: rgb(39, 40, 34);"><span style="color: rgb(102, 217, 239); font-style: italic;">def </span><span style="color: rgb(166, 226, 46);">cost</span>(<span style="color: rgb(253, 151, 31); font-style: italic;">W</span>, <span style="color: rgb(253, 151, 31); font-style: italic;">X</span>, <span style="color: rgb(253, 151, 31); font-style: italic;">y</span>)<span style="color: rgb(249, 38, 114);">:<br /></span><span style="color: rgb(249, 38, 114);">    </span>s <span style="color: rgb(249, 38, 114);">= </span><span style="color: rgb(174, 129, 255);">0<br /></span><span style="color: rgb(174, 129, 255);">    </span><span style="color: rgb(102, 217, 239); font-style: italic;">for </span>i <span style="color: rgb(102, 217, 239); font-style: italic;">in </span><span style="color: rgb(102, 217, 239);">range</span>(<span style="color: rgb(102, 217, 239);">len</span>(<span style="color: rgb(253, 151, 31); font-style: italic;">X</span>))<span style="color: rgb(249, 38, 114);">:<br /></span><span style="color: rgb(249, 38, 114);">        </span>s <span style="color: rgb(249, 38, 114);">+= </span>(<span style="color: rgb(253, 151, 31); font-style: italic;">W </span><span style="color: rgb(249, 38, 114);">* </span><span style="color: rgb(253, 151, 31); font-style: italic;">X</span>[i] <span style="color: rgb(249, 38, 114);">- </span><span style="color: rgb(253, 151, 31); font-style: italic;">y</span>[i]) <span style="color: rgb(249, 38, 114);">** </span><span style="color: rgb(174, 129, 255);">2<br /></span><span style="color: rgb(174, 129, 255);"><br /></span><span style="color: rgb(174, 129, 255);">    </span><span style="color: rgb(102, 217, 239); font-style: italic;">return </span>s <span style="color: rgb(249, 38, 114);">/ </span><span style="color: rgb(102, 217, 239);">len</span>(<span style="color: rgb(253, 151, 31); font-style: italic;">X</span>)<br /></pre>
<p>cost를 계산하는 함수로 이번 코드에서 가장 중요하다. 1x3 행렬에 들어있는 X는 행렬 연산을 할 수 없어서 for문 안에서 매번 X[i]와 W를 곱한 다음에 y[i]를 빼고 있다. 여기에 제곱을 취해서 벌점을 부여해야 해서, 이 값에 ** 연산자를 사용해서 제곱을 했다. 합계는 변수 s에 저장했고,  반환할 때 갯수 m에 해당하는 len(X)로 나누었으니까 return문의 오른쪽에서 평균을 구하고 있다.</p><p>이게 간단해 보이지만, 이거 구현하기 위해서 cost 함수에 대해 연구하고 구글링한 시간이 얼마인지.. 만들고 나니까, 어이없을 정도로 간단하고 잘 동작했다.</p><p><br /></p><p># ------------------------------------------------------------------ #</p><p><br /></p><p>이번에는 경사타고 내려가기(Gradient Descent) 알고리듬에서 다음 번 위치로 이동하기 위한 경사값을 직접 계산해서 앞에서 보여준 것처럼 원하는 기울기(W)가 1에 수렴하는지 확인하려고 만든 코드다.</p>
<pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color:#66d9ef;font-style:italic;">def </span><span style="color:#a6e22e;">gradients</span>(<span style="color:#fd971f;font-style:italic;">W</span>, <span style="color:#fd971f;font-style:italic;">X</span>, <span style="color:#fd971f;font-style:italic;">y</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span>nX <span style="color:#f92672;">= </span>[]<br />    <span style="color:#66d9ef;font-style:italic;">for </span>i <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(<span style="color:#66d9ef;">len</span>(<span style="color:#fd971f;font-style:italic;">X</span>))<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span>nX.append(<span style="color:#fd971f;font-style:italic;">W </span><span style="color:#f92672;">* </span><span style="color:#fd971f;font-style:italic;">X</span>[i] <span style="color:#f92672;">- </span><span style="color:#fd971f;font-style:italic;">y</span>[i])<br /><br />    s <span style="color:#f92672;">= </span><span style="color:#ae81ff;">0<br /></span><span style="color:#ae81ff;">    </span><span style="color:#66d9ef;font-style:italic;">for </span>i <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(<span style="color:#66d9ef;">len</span>(<span style="color:#fd971f;font-style:italic;">X</span>))<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span>s <span style="color:#f92672;">+= </span>nX[i] <span style="color:#f92672;">* </span><span style="color:#fd971f;font-style:italic;">X</span>[i]<br /><br />    <span style="color:#66d9ef;font-style:italic;">return </span>s <span style="color:#f92672;">/ </span><span style="color:#66d9ef;">len</span>(<span style="color:#fd971f;font-style:italic;">X</span>)<br /><br />X <span style="color:#f92672;">= </span>[<span style="color:#ae81ff;">1.</span>, <span style="color:#ae81ff;">2.</span>, <span style="color:#ae81ff;">3.</span>]<br />Y <span style="color:#f92672;">= </span>[<span style="color:#ae81ff;">1.</span>, <span style="color:#ae81ff;">2.</span>, <span style="color:#ae81ff;">3.</span>]<br /><br /><span style="color:#75715e;"># 양수로 시작하면 값이 줄어들고<br /></span><span style="color:#75715e;"># 음수로 시작하면 값이 늘어난다.<br /></span>W <span style="color:#f92672;">= </span><span style="color:#ae81ff;">100                     </span><span style="color:#75715e;"># -100으로도 테스트해 볼 것.<br /></span><span style="color:#66d9ef;font-style:italic;">for </span>i <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(<span style="color:#ae81ff;">1000</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span>g <span style="color:#f92672;">= </span>gradients(W, X, Y)<br />    W <span style="color:#f92672;">= </span>W <span style="color:#f92672;">- </span>g<span style="color:#f92672;">*</span><span style="color:#ae81ff;">0.01<br /></span><span style="color:#ae81ff;"><br /></span><span style="color:#ae81ff;">    </span><span style="color:#66d9ef;font-style:italic;">if </span>i<span style="color:#f92672;">%</span><span style="color:#ae81ff;">20 </span><span style="color:#f92672;">== </span><span style="color:#ae81ff;">19</span><span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span><span style="color:#66d9ef;">print</span>(<span style="color:#008080;font-weight:bold;">'{:4} : {:12.8f} {:12.8f}'</span>.format(i<span style="color:#f92672;">+</span><span style="color:#ae81ff;">1</span>, g, W))</pre><pre style="background-color: rgb(39, 40, 34);"><font color="#f8f8f2" face="Menlo"><span style="font-size: 9pt; color: rgb(255, 255, 255);">[출력 결과]
 ...
</span><span style="font-size: 12px; color: rgb(255, 255, 255);"> 920 :   0.00000000   1.00000000
 940 :   0.00000000   1.00000000
 960 :   0.00000000   1.00000000
 980 :   0.00000000   1.00000000
1000 :   0.00000000   1.00000000</span></font></pre>
<p>중간에 달아놓은 주석처럼 최소 비용이 1이라면 초기값 100은 경사면의 오른쪽에 있고 gradients 함수가 호출된 결과를 반영할 때마다 최소 비용을 향해 진행한다. 만약 -100으로 시작하면 경사면 왼쪽에서부터 오른쪽으로 진행하는 값을 확인할 수 있다.</p><p>gradients 함수는 cost 함수를 미분한 결과, 즉 변화량을 값으로 만들어 내는 함수이다. 이렇게 반환된 값에 learning rate에 해당하는 
<span style="box-sizing: border-box; color: rgb(0, 0, 0); line-height: 1.5em; font-size: 10pt; font-family: &quot;맑은 고딕&quot;, sans-serif;">
α</span>(알파)를 곱해서 실제 진행량을 결정하는데, 여기서는 0.01을 사용했다. 즉, 변화량의 1/100만큼 적용하고 있다.</p><p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:338px;;height:auto;max-width:100%"><img src="http://cfile3.uf.tistory.com/image/245F553757920EDA307391" style="max-width:100%;height:auto" width="338" height="73" filename="lab_03_02.png" filemime="image/jpeg"/></span></p><p><span style="box-sizing: border-box; line-height: 24px; font-size: 10pt; text-align: justify;">&nbsp;</span><span style="box-sizing: border-box; color: rgb(0, 0, 128); line-height: 18px; font-size: 12px; text-align: justify; font-family: 굴림, arial;"><span style="box-sizing: border-box; color: rgb(0, 0, 0); line-height: 1.5em; font-size: 10pt; font-family: &quot;맑은 고딕&quot;, sans-serif;">α(알파) 오른쪽에 있는 식을 코드로 구현했다. 첫 번째 반복문에서 W(x) - y 를 계산해서 nX 리스트에 저장했다. 두 번째 반복문에서 이 값을 공식 오른쪽 끝의 x(i)와 곱한 결과를 s에 저장했다. return문에서 데이터 갯수로 나누어서 앞선 코드처럼 평균을 반환했다.</span></span></p><p>아래는 gradients 함수를 축약 버전으로 구성한 코드다. 반복문을 하나로 줄이고, 중간 결과를 리스트에 저장했던 코드 대신 반복문 하나로 처리했다. 머신러닝이 익숙하지 않을 때는 앞의 코드가 쉽게 느껴졌는데, 지금은 아래 코드가 훨씬 편하다. 이번 코드의 좋은 점은 수식에 나타난 것과 같은 방식으로 구성했다는 점이다. 이번 코드는 이번 글의 맨 앞에 나왔던 cost 함수와 매우 유사하다. 제곱(**) 대신 X[i]를 곱하는 코드만 다를 뿐이다. 꼭! cost 함수와 비교해서 봐야 한다.</p><p></p><pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color:#66d9ef;font-style:italic;">def </span><span style="color:#a6e22e;">newGradients</span>(<span style="color:#fd971f;font-style:italic;">W</span>, <span style="color:#fd971f;font-style:italic;">X</span>, <span style="color:#fd971f;font-style:italic;">y</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span>s <span style="color:#f92672;">= </span><span style="color:#ae81ff;">0<br /></span><span style="color:#ae81ff;">    </span><span style="color:#66d9ef;font-style:italic;">for </span>i <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(<span style="color:#66d9ef;">len</span>(<span style="color:#fd971f;font-style:italic;">X</span>))<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span>s <span style="color:#f92672;">+= </span>(<span style="color:#fd971f;font-style:italic;">W </span><span style="color:#f92672;">* </span><span style="color:#fd971f;font-style:italic;">X</span>[i] <span style="color:#f92672;">- </span><span style="color:#fd971f;font-style:italic;">y</span>[i]) <span style="color:#f92672;">* </span><span style="color:#fd971f;font-style:italic;">X</span>[i]<br /><br />    <span style="color:#66d9ef;font-style:italic;">return </span>s <span style="color:#f92672;">/ </span><span style="color:#66d9ef;">len</span>(<span style="color:#fd971f;font-style:italic;">X</span>)<br /></pre><p><br /></p><p>텐서플로우가 한 줄도 없지만, 제대로 동작한다. 공식을 제대로 반영하는 것이 얼마나 중요한지 새삼 깨달을 수 있었다. 여기서 보여준 두 개의 함수를 구현하기 위해 1주일은 꼬박 고생했다. 공식 없이 마구잡이로 코딩하다가 벌어진 결과로 이 글을 보는 사람은 나처럼 미련하지 않기를 바라고, 계속적으로 중요하다고 하는 공식을 한번 더 보았으면 한다.</p><p><br /></p>
<pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color:#66d9ef;font-style:italic;">def </span><span style="color:#a6e22e;">cost</span>(<span style="color:#fd971f;font-style:italic;">W</span>, <span style="color:#fd971f;font-style:italic;">X</span>, <span style="color:#fd971f;font-style:italic;">y</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span>s <span style="color:#f92672;">= </span><span style="color:#ae81ff;">0<br /></span><span style="color:#ae81ff;">    </span><span style="color:#66d9ef;font-style:italic;">for </span>i <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(<span style="color:#66d9ef;">len</span>(<span style="color:#fd971f;font-style:italic;">X</span>))<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span>s <span style="color:#f92672;">+= </span>(<span style="color:#fd971f;font-style:italic;">W </span><span style="color:#f92672;">* </span><span style="color:#fd971f;font-style:italic;">X</span>[i] <span style="color:#f92672;">- </span><span style="color:#fd971f;font-style:italic;">y</span>[i]) <span style="color:#f92672;">** </span><span style="color:#ae81ff;">2<br /></span><span style="color:#ae81ff;"><br /></span><span style="color:#ae81ff;">    </span><span style="color:#66d9ef;font-style:italic;">return </span>s <span style="color:#f92672;">/ </span><span style="color:#66d9ef;">len</span>(<span style="color:#fd971f;font-style:italic;">X</span>)<br /><br /><span style="color:#66d9ef;font-style:italic;">def </span><span style="color:#a6e22e;">gradients</span>(<span style="color:#fd971f;font-style:italic;">W</span>, <span style="color:#fd971f;font-style:italic;">X</span>, <span style="color:#fd971f;font-style:italic;">y</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span>nX <span style="color:#f92672;">= </span>[]<br />    <span style="color:#66d9ef;font-style:italic;">for </span>i <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(<span style="color:#66d9ef;">len</span>(<span style="color:#fd971f;font-style:italic;">X</span>))<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span>nX.append(<span style="color:#fd971f;font-style:italic;">W </span><span style="color:#f92672;">* </span><span style="color:#fd971f;font-style:italic;">X</span>[i] <span style="color:#f92672;">- </span><span style="color:#fd971f;font-style:italic;">y</span>[i])<br /><br />    s <span style="color:#f92672;">= </span><span style="color:#ae81ff;">0<br /></span><span style="color:#ae81ff;">    </span><span style="color:#66d9ef;font-style:italic;">for </span>i <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(<span style="color:#66d9ef;">len</span>(<span style="color:#fd971f;font-style:italic;">X</span>))<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span>s <span style="color:#f92672;">+= </span>nX[i] <span style="color:#f92672;">* </span><span style="color:#fd971f;font-style:italic;">X</span>[i]<br /><br />    <span style="color:#66d9ef;font-style:italic;">return </span>s <span style="color:#f92672;">/ </span><span style="color:#66d9ef;">len</span>(<span style="color:#fd971f;font-style:italic;">X</span>)<br /><br />X <span style="color:#f92672;">= </span>[<span style="color:#ae81ff;">1.</span>, <span style="color:#ae81ff;">2.</span>, <span style="color:#ae81ff;">3.</span>]<br />Y <span style="color:#f92672;">= </span>[<span style="color:#ae81ff;">1.</span>, <span style="color:#ae81ff;">2.</span>, <span style="color:#ae81ff;">3.</span>]<br /><br />W <span style="color:#f92672;">= </span><span style="color:#ae81ff;">100<br /></span><span style="color:#66d9ef;font-style:italic;">for </span>i <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(<span style="color:#ae81ff;">1000</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span>c <span style="color:#f92672;">= </span>cost(W, X, Y)<br />    g <span style="color:#f92672;">= </span>gradients(W, X, Y)<br />    W <span style="color:#f92672;">= </span>W <span style="color:#f92672;">- </span>g<span style="color:#f92672;">*</span><span style="color:#ae81ff;">0.01<br /></span><span style="color:#ae81ff;"><br /></span><span style="color:#ae81ff;">    </span><span style="color:#75715e;"># cost는 거리의 제곱을 취하기 때문에 W가 음수이건 양수이건 상관없다.<br /></span><span style="color:#75715e;">    </span><span style="color:#66d9ef;font-style:italic;">if </span>c <span style="color:#f92672;">&lt; </span><span style="color:#ae81ff;">1.0e-15</span><span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span><span style="color:#66d9ef;font-style:italic;">break<br /></span><span style="color:#66d9ef;font-style:italic;"><br /></span><span style="color:#66d9ef;font-style:italic;">    if </span>i<span style="color:#f92672;">%</span><span style="color:#ae81ff;">20 </span><span style="color:#f92672;">== </span><span style="color:#ae81ff;">19</span><span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span><span style="color:#66d9ef;">print</span>(<span style="color:#008080;font-weight:bold;">'{:4} : {:17.12f} {:12.8f} {:12.8f}'</span>.format(i<span style="color:#f92672;">+</span><span style="color:#ae81ff;">1</span>, c, g, W))<br /></pre><pre style="background-color: rgb(39, 40, 34);"><font color="#f8f8f2" face="Menlo"><span style="font-size: 9pt; color: rgb(255, 255, 255);">[출력 결과]
</span><span style="font-size: 12px; color: rgb(255, 255, 255);">  20 : 7440.099604469872 186.33428246  39.06543199
  40 : 1099.942255029881  71.64540360  15.63613245
</span><span style="font-size: 9pt; color: rgb(255, 255, 255);"> ...
</span><span style="font-size: 12px; color: rgb(255, 255, 255);"> 400 :    0.000000000001   0.00000242   1.00000049
 420 :    0.000000000000   0.00000093   1.00000019
 440 :    0.000000000000   0.00000036   1.00000007
 460 :    0.000000000000   0.00000014   1.00000003</span><span style="font-size: 9pt;">
</span></font></pre>
<p>앞에 설명했던 코드를 묶어서 cost 함수와 gradient descent 알고리듬으로 동작하는 예제를 만들었다. 이렇게 되어야 텐서플로우에서 보여주던 예제와 똑같은 예제가 된다.</p><p>반복문 안에서 cost와 gradients가 함께 사용되는 것이 핵심이다. 이 부분은 앤드류 교수님께 배웠다. 텐서플로우 내부가 어떨지는 모르겠지만, 여기서는 c(비용)가 일정 수준 이하로 떨어지면 더 이상 계산하지 않도록 처리했다. 전체 횟수만큼 반복하지 않고 미리 탈출할 수 있기 때문에 early stopping이라고 부른다.&nbsp;출력 결과에서 콜론(:) 바로 오른쪽에 있는 숫자가 비용이다.</p><div class="daum_like_wrapper"><iframe class="daum_like_button" id="daum_like_button_12" frameborder="0" scrolling="no" allowTransparency="true" src="http://pythonkim.tistory.com/like/?uid=2072317_12&sc=404%2CblogId_2072317&url=http%3A%2F%2Fpythonkim.tistory.com%2F12&published=1469190276" style="width:100%;height:44px;margin:10px auto"></iframe></div><div style="width:100%;margin-top:30px;clear:both;height:30px">		<div class="entry-ccl" style="float:right;margin-top:0;height:0">
			<a href="http://creativecommons.org/licenses/by/4.0/deed.ko" target="_blank" style="text-decoration: none">
				<img id="ccl-icon-12-0" class="entry-ccl-by" src="//i1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/static/admin/editor/ccl_black01.png"
				     onmouseover="tistoryCcl.show(this, 3)"
				     onmouseout="tistoryCcl.hide()" alt="저작자 표시" style="width:15px;height:15px"/>
								<!--
	<rdf:RDF xmlns="http://web.resource.org/cc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
		<Work rdf:about="">
			<license rdf:resource="http://creativecommons.org/licenses/by-fr/2.0/kr/" />
		</Work>
		<License rdf:about="http://creativecommons.org/licenses/by-fr/">
			<permits rdf:resource="http://web.resource.org/cc/Reproduction"/>
			<permits rdf:resource="http://web.resource.org/cc/Distribution"/>
			<requires rdf:resource="http://web.resource.org/cc/Notice"/>
			<requires rdf:resource="http://web.resource.org/cc/Attribution"/>
			<permits rdf:resource="http://web.resource.org/cc/DerivativeWorks"/>
		</License>
	</rdf:RDF>
	-->
			</a>
		</div>
					<script type="text/javascript">
				if (/MSIE [0-6]\./.test(navigator.userAgent)) {
					for (var i = 0; i <1; i++) {
						var el = document.getElementById('ccl-icon-12-' + i);
						el.style.filter = 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src="' + el.src + '",sizingMethod="image")';
						el.src = '//i1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/static/admin/form/s.gif';
					}
				}
			</script>
			<div style="width:31px;float:left;"><a href="/toolbar/popup/abuseReport/?entryId=12" onclick="window.open(this.href, 'tistoryThisBlogPopup', 'width=550, height=510, toolbar=no, menubar=no, status=no, scrollbars=no'); return false;"><img style="border:0" src="//t1.daumcdn.net/tistory_admin/static/ico/ico_spam_report.png" alt="신고"></a></div></div><div class="another_category another_category_color_gray">
<h4>'<a href="/category/머신러닝_김성훈교수님">머신러닝_김성훈교수님</a>' 카테고리의 다른 글</h4>
<table>
<tr>
<th>
<a href="http://pythonkim.tistory.com/14" >08. multi-variable linear regression을 TensorFlow에서 구현하기(lab 04)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.25</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/13" >07. multi-variable linear regression (lec 04)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.25</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/12"  class ="current" >06. cost 함수를 파이썬만으로 직접 구현</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.22</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/11" >05. Linear Regression의 cost 최소화의 TensorFlow 구현 (lab 03)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.22</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/10" >04. Linear Regression의 cost 최소화 알고리즘의 원리 설명 (lec 03)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.22</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/9" >03. Tensorflow로 간단한 linear regression 구현 (lab 02)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.22</td>
</tr>
</table></div>
						</div>

						<!-- 글 목록 하단의 프로필. 이미지와 간략한 소개 나오는 곳 -->
						<!-- 프로필 아래에 "받은 트랙백이 없고, 댓글이 없습니다." <div class="actionTrail"> -->
						
					</div> 					<!-- end of entry -->
				

			<!-- 하단 목록 번호 1 2 3 .. 9 10 <s_paging> -->
			</div>
			
			<div class="col-md-3">
				<!-- 기본 사이드바 -->
				<div class="sidebar">
				
					<!-- 오른쪽 사이드바의 공지사항 모듈. 없앨려면, s_sidebar_element 안쪽을 주석으로 막아야 한다. b 태그 추가했다 -->
						
							<div id="notice" class="widget">
								<h3><i class="fa fa-bullhorn"></i>공지사항</h3>
								<ul class="fa-ul">
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/77"><b>파이썬 동영상</b></a> </li>
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/76"><b>머신러닝 동영상</b></a> </li>
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/25"><b>머신러닝 목차</b></a> </li>
									
								</ul>
							</div>
						
					
					<!-- 오른쪽 사이드바의 카테고리 모듈. 없앨려면, s_sidebar_element 안쪽을 주석으로 막아야 한다. -->
						<div id="category" class="widget">
							<h3><i class="fa fa-folder"></i>카테고리</h3>
							<ul class="tt_category">
	<li class="">
		<a class="link_tit" href="/category">
			분류 전체보기							<span class="c_cnt">(70)</span>
			
					</a>

				<ul class="category_list">
							<li class="">
					<a class="link_item" href="/category/프로필">
						프로필													<span class="c_cnt">(0)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/머신러닝">
						머신러닝													<span class="c_cnt">(3)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/머신러닝_김성훈교수님">
						머신러닝_김성훈교수님													<span class="c_cnt">(45)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/텐서플로우">
						텐서플로우													<span class="c_cnt">(12)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/이것저것">
						이것저것													<span class="c_cnt">(10)</span>
						
											</a>

					
				</li>
					</ul>
			</li>
</ul>

						</div>
					
						<div class="author alert alert-success">
							<img src="http://cfile4.uf.tistory.com/image/211AB7495706515D201F0D" alt="블로그 이미지" 
									 class="img-responsive img-circle text-center" width="50%">
							<p><span class="text label label-primary"></span></p>
							<p>얼떨결에 붙인 이름 파이썬_킴</p>
						</div>
					
				</div>
			</div>
		</div>
	</div>
</div>
<!--	
<div id="footer">
	<div class="container">
		<div class="row">
				<div class="copyright">
					<p class="text-center">Copyright 2016 파이썬_킴. All Rights Reserved.<br/>
				</div>
		</div>
	</div>
</div>
-->


<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
<!-- Include all compiled plugins (below), or include individual files as needed -->
<script src="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/bootstrap.min.js"></script>
<script>
$(window).scroll(function() {
  if ($(document).scrollTop() > 50) {
    $('nav').addClass('shrink');
  } else {
    $('nav').removeClass('shrink');
  }
});
</script>
<script id="DragSearchJs" type="text/javascript" src="http://s1.daumcdn.net/img.search/front/js/searchDragSelection.js?nil_ch=tistory" charset="euc-kr"></script>
<script>
$("body").bind('copy', function (e) {
    if (typeof window.getSelection == "undefined") {//IE8 or earlier...
        event.preventDefault();

        var pagelink = '\n\n 출처: ' + decodeURI(document.location.href),
            copytext =  window.getSelection() + pagelink;

        if (window.clipboardData) {
            window.clipboardData.setData('Text', copytext);
        }
        return;
    }
    var body_element = document.getElementsByTagName('body')[0];
    var selection = window.getSelection();

    //if the selection is short let's not annoy our users
    if (("" + selection).length < 30) return;

    //create a div outside of the visible area
    var newdiv = document.createElement('div');
    newdiv.style.position = 'absolute';
    newdiv.style.left = '-99999px';
    body_element.appendChild(newdiv);
    newdiv.appendChild(selection.getRangeAt(0).cloneContents());

    //we need a <pre> tag workaround
    //otherwise the text inside "pre" loses all the line breaks!
    if (selection.getRangeAt(0).commonAncestorContainer.nodeName == "PRE") {
        newdiv.innerHTML = "<pre>" + newdiv.innerHTML + "</pre>";
    }

    newdiv.innerHTML += "<br /><br />출처: <a href='"
        + document.location.href + "'>"
        + decodeURI(document.location.href) + "</a> [파이쿵]";

    selection.selectAllChildren(newdiv);
    window.setTimeout(function () { body_element.removeChild(newdiv); }, 200);
});
</script><script> if (!window.jQuery) document.write("<script src=\"http://t1.daumcdn.net/tistory_admin/lib/jquery-1.12.4.min.js\"><\/script>") </script>
	<script src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/lightbox/assets/js/lightbox.min.js"></script>
	<script>
	    lightbox.option({
			"fadeDuration": 200,
		    "resizeDuration": 200,
		    "wrapAround": false,
			"albumLabel": "%1 / %2",
			"fitImagesInViewport":true ,
			"stopEvent": false
	    })
	</script><script type="text/javascript">
var _tiq = 'undefined' !== typeof _tiq ? _tiq : []; // Global Variables
_tiq.push(["__setParam", "title", "파이쿵 :: 06. cost 함수를 파이썬만으로 직접 구현"]);
_tiq.push(["__setParam", "svcdomain", "user.tistory.com"]);
_tiq.push(["__setParam", "category", ""]);
_tiq.push(["__setParam", "articleno", "12"]);
_tiq.push(["__setParam", "plink", "http://pythonkim.tistory.com/12"]);
_tiq.push(["__setParam", "date", "2016-07-22 21:24:36"]);
_tiq.push(["__setParam", "author", "pythonkim"]);
_tiq.push(["__setParam", "length", "24034"]);
_tiq.push(["__setParam", "isauthor", "N"]);
_tiq.push(["__setParam", "ishidden", "1"]);
_tiq.push(["__setParam", "comments", "0"]);
_tiq.push(["__setParam", "param1", "0"]);
_tiq.push(["__setParam", "param2", "e"]);
_tiq.push(["__setParam", "param3", ""]);
_tiq.push(["__setParam", "like_ex", "{'serviceId': 'tistory', 'uniqueId': '2072317_12', 'serviceCategories': '404,blogId_2072317'}"]);
_tiq.push(["__trackPageview"]);
(function(d) {
	var se = d.createElement('script'); se.type = 'text/javascript'; se.async = true;
	se.src = location.protocol + '//m2.daumcdn.net/tiara/js/td.min.js';
	var s = d.getElementsByTagName('head')[0]; s.appendChild(se);
})(document);
</script>
<script type="text/javascript">
var __TiaraObj = __TiaraObj || {}; if ('undefined' === typeof __TiaraObj.startTime) { __TiaraObj.startTime = new Date(); }
var addEvent = function (evt, fn) { window.addEventListener ? window.addEventListener(evt, fn, false) : window.attachEvent('on' + evt, fn); };
var ua = navigator.userAgent.toLowerCase(); var isIOS = /iP[ao]d|iPhone/i.test(ua); var contentStat = function() {
_tiq.push(['__content', 't_content', {
"c_id":"2072317_12", 
"c_title":"파이쿵 :: 06. cost 함수를 파이썬만으로 직접 구현", 
"type":"article", 
"author":"사과쿵", 
"author_id":"1415031", 
"cp":"pythonkim", 
"cp_id":"2072317", 
"regdata":"2016-07-22 21:24:36", 
"plink":"http://pythonkim.tistory.com/12", 
"media":"pcweb", 
"comment_cnt":0, 
"duration": (new Date()).getTime() - __TiaraObj.startTime.getTime()
}]); };
addEvent(isIOS ? "pagehide" : "beforeunload", contentStat);
</script>
<script type="text/javascript">window.roosevelt_params_queue = window.roosevelt_params_queue || []; window.roosevelt_params_queue.push({channel_id: "dk", channel_label: "tistory"});</script>
<script type="text/javascript" src="//adimg.daumcdn.net/rt/dk_bt/roosevelt_dk_bt.js" async></script><script type="text/javascript">if(window.console!=undefined){setTimeout(console.log.bind(console,"%cTISTORY","font:8em Arial;color:#EC6521;font-weight:bold"),0);setTimeout(console.log.bind(console,"%c  나를 표현하는 블로그","font:2em sans-serif;color:#333;"),0);}</script>		<div id="tistorytoolbarid"
		     style="position:absolute;height:20px;top:4px;right:0px;background-color:transparent;background-image:none;z-index:11;">
			<div class="tistorytoolbar tt_menubar_login">
				<div
					class="tt_menubar_whiteBar">
					<div id="ttMenubarInnerWrap" class="tt_menubar_inner">
						<div class="tt_menubar_bg_toolbar"></div>
						<h2 style="display:none;">티스토리 툴바</h2>
						<div class="tt_menubar_mainmenu"><a
								class="tt_menubar_link_tit tt_menubar_link_tit_daum tt_menubar_link_tit_eng"
								href="http://www.daum.net/?nil_ref=tistory"
								target="_blank">Daum</a></div>
						<div class="tt_menubar_bg_bar"></div>
						<div class="tt_menubar_mainmenu"><a class="tt_menubar_link_tit tt_menubar_link_tit_eng"
						                                    href="http://www.tistory.com">Tistory</a>
						</div>
						<div class="tt_menubar_bg_bar"></div>
						<div class="tt_menubar_logout"><a class="tt_menubar_link_tit"
														  href="https://www.tistory.com/auth/login">로그인</a>
						</div>
					</div>
				</div>
			</div>
		</div>
		</body>
</html>
