<!doctype html>
<html lang="ko">

<head>

<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="alternate" type="application/rss+xml" title="파이쿵" href="http://pythonkim.tistory.com/rss" />
<link href="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
<link href="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/style.css?_T_=1470399111" rel="stylesheet">
<link rel="shortcut icon" href="/favicon.ico" />
<title>파이쿵 :: mnist 난수 종류에 따른 테스트</title>

<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
<!--[if lt IE 9]>
  <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
  <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
<![endif]-->
		
<!-- 구글 애널리틱스 -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-76456208-1', 'auto');
  ga('send', 'pageview');
</script>
	

<style type="text/css">
		#daumSearchBox {
			height: 21px;
			background-image : url(http://i1.daumcdn.net/imgsrc.search/search_all/show/tistory/plugin/bg_search2_2.gif);
			margin: 5px auto ;
			padding: 0;
		}
		#daumSearchBox input {
			background: none;
			margin : 0;
			padding : 0;
			border : 0;
		}
		#daumSearchBox #daumLogo {
			width: 34px;
			height: 21px;
			float: left;
			margin-right: 5px;
			background-image : url(http://i1.daumcdn.net/img-media/tistory/img/bg_search1_2_2010ci.gif);
		}
		#daumSearchBox #show_q {
			background-color: transparent;
			border: none;
			font: 12px Gulim, Sans-serif;
			color: #555;
			margin-top: 4px;
			margin-right: 15px;
			float: left;
		}

		#daumSearchBox #show_btn {
			background-image : url(http://i1.daumcdn.net/imgsrc.search/search_all/show/tistory/plugin/bt_search_2.gif);
			width: 37px;
			height: 21px;
			float: left;
			margin:0;
			cursor:pointer;
			text-indent:-1000em;
		}
	</style><link rel="stylesheet" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/lightbox/assets/css/lightbox.min.css" />
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/TistoryProfileLayer/style.css" />
<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/TistoryProfileLayer/profile.js"></script>
	<style type="text/css">
		.another_category { border: 1px solid #E5E5E5; padding: 10px 10px 5px; margin:10px 0; clear: both; }
		.another_category h4 { font-size: 12px !important; margin: 0 !important; border-bottom: 1px solid #E5E5E5 !important; padding: 2px 0 6px !important; }
		.another_category h4 a { font-weight: bold !important; }
		.another_category table { table-layout: fixed; border-collapse: collapse; width: 100% !important; margin-top: 10px !important; }
		* html .another_category table { width: auto !important; }
		*:first-child+html .another_category table { width: auto !important; }
		.another_category th, .another_category td { padding: 0 0 4px !important; }
		.another_category th { text-align: left; font-size: 12px !important; font-weight: normal;  word-break: break-all; overflow: hidden; line-height: 1.5; }
		.another_category td { text-align: right; width: 80px; font-size: 11px; }
		.another_category th a { font-weight: normal; text-decoration: none; border: none !important; }
		.another_category th a.current{ font-weight: bold; text-decoration: none !important; border-bottom: 1px solid !important; }
		.another_category th span { font-weight: normal; text-decoration: none; font: 10px Tahoma, Sans-serif; border: none !important; }

		.another_category_color_gray, .another_category_color_gray h4 { border-color: #E5E5E5 !important; }
		.another_category_color_gray * { color: #909090 !important; }
		.another_category_color_gray th a.current{border-color:#909090 !important;}
		.another_category_color_gray h4, .another_category_color_gray h4 a { color: #737373 !important; }


		.another_category_color_red, .another_category_color_red h4 { border-color: #F6D4D3 !important;  }
		.another_category_color_red * { color: #E86869 !important; }
		.another_category_color_red th a.current{border-color:#E86869 !important;}
		.another_category_color_red h4, .another_category_color_red h4 a { color: #ED0908 !important; }


		.another_category_color_green, .another_category_color_green h4 { border-color: #CCE7C8 !important; }
		.another_category_color_green * { color: #64C05B !important; }
		.another_category_color_green th a.current{border-color:#64C05B !important;}
		.another_category_color_green h4, .another_category_color_green h4 a { color: #3EA731 !important; }


		.another_category_color_blue, .another_category_color_blue h4 { border-color: #C8DAF2 !important; }
		.another_category_color_blue * { color: #477FD6 !important; }
		.another_category_color_blue th a.current{border-color:#477FD6 !important;}
		.another_category_color_blue h4, .another_category_color_blue h4 a { color: #1960CA !important; }


		.another_category_color_violet, .another_category_color_violet h4 { border-color: #E1CEEC !important;  }
		.another_category_color_violet * { color:#9D64C5 !important; }
		.another_category_color_violet th a.current{border-color:#9D64C5 !important;}
		.another_category_color_violet h4, .another_category_color_violet h4 a { color: #7E2CB5 !important; }
	</style>
<script type="text/javascript">
window.TistoryBlog = {
    url: "http://pythonkim.tistory.com",
	tistoryUrl: "http://pythonkim.tistory.com"
};
var servicePath = "";
var blogURL = "";
</script>
<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/script/_/base.js"></script>
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/style/dialog.css"/>
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/style/menubar.css"/><style type="text/css">.tt_article_useless_p_margin p {padding-top:0 !important;padding-bottom:0 !important;margin-top:0 !important;margin-bottom:0 !important;}</style><meta name="referrer" content="always"><link rel="shortcut icon" href="http://i1.daumcdn.net/cfs.tistory/static/top/favicon_0630.ico"/><meta name="description" content="텐서플로우에서 제공하는 난수에 주로 등장하는 것으로 3가지가 있습니다. random_normal, random_uniform, truncated_normal. 난수에 따른 성능 차이가 있는지 궁금해서 테스트 했습니다. 이들 함수에 대한 정리는 [텐서플로우 정리] 08. 초기값과 난수에서 확인할 수 있습니다. 여러 번 검사하기 전에 전체 데이터에 대해 15회 반복하면서 cost가 어떻게 떨어지는지 비교했습니다. random_normal과 truncated_normal 함수는 잘..">

<!-- BEGIN OPENGRAPH -->
<link rel="canonical" href="http://pythonkim.tistory.com/81" /><meta property="og:type" content="article"><meta property="og:url" content="http://pythonkim.tistory.com/81" ><meta property="og:site_name" content="파이쿵" ><meta property="og:title" content="mnist 난수 종류에 따른 테스트" ><meta name="by" content="사과쿵" ><meta property="og:description" content="텐서플로우에서 제공하는 난수에 주로 등장하는 것으로 3가지가 있습니다. random_normal, random_uniform, truncated_normal. 난수에 따른 성능 차이가 있는지 궁금해서 테스트 했습니다. 이들 함수에 대한 정리는 [텐서플로우 정리] 08. 초기값과 난수에서 확인할 수 있습니다. 여러 번 검사하기 전에 전체 데이터에 대해 15회 반복하면서 cost가 어떻게 떨어지는지 비교했습니다. random_normal과 truncated_normal 함수는 잘.." ><meta property="og:image" content="https://t1.daumcdn.net/cssjs/icon/557567EA016E200001" ><meta property="article:section" content="과학" >
<!-- END OPENGRAPH -->



<!-- BEGIN TWITTERCARD -->
<meta name="twitter:card" content="summary_large_image"><meta name="twitter:site" content="@TISTORY"><meta name="twitter:title" content="mnist 난수 종류에 따른 테스트" ><meta name="twitter:description" content="텐서플로우에서 제공하는 난수에 주로 등장하는 것으로 3가지가 있습니다. random_normal, random_uniform, truncated_normal. 난수에 따른 성능 차이가 있는지 궁금해서 테스트 했습니다. 이들 함수에 대한 정리는 [텐서플로우 정리] 08. 초기값과 난수에서 확인할 수 있습니다. 여러 번 검사하기 전에 전체 데이터에 대해 15회 반복하면서 cost가 어떻게 떨어지는지 비교했습니다. random_normal과 truncated_normal 함수는 잘.." ><meta property="twitter:image" content="https://t1.daumcdn.net/cssjs/icon/557567EA016E200001" >
<!-- END TWITTERCARD -->



<!-- BEGIN DAUMAPP -->
<meta property="dg:plink" content="http://pythonkim.tistory.com/81" ><meta name="plink" content="http://pythonkim.tistory.com/81" ><meta name="title" content="mnist 난수 종류에 따른 테스트" ><meta name="article:media_name" content="파이쿵" ><meta property="article:mobile_url" content="http://pythonkim.tistory.com/m/81" ><meta property="article:pc_url" content="http://pythonkim.tistory.com/81" ><meta property="article:mobile_view_url" content="http://pythonkim.tistory.com/m/81" ><meta property="article:pc_view_url" content="http://pythonkim.tistory.com/81" ><meta property="article:pc_service_home" content="http://www.tistory.com" ><meta property="article:mobile_service_home" content="http://www.tistory.com/m" ><meta property="article:txid" content="2072317_81" /><meta property="article:published_time" content="2017-02-28T09:36:59+09:00" ><meta property="og:regDate" content="20170228093659" ><meta property="article:modified_time" content="2017-02-28T09:36:59+09:00" >
<!-- END DAUMAPP -->



<!-- BEGIN STRUCTURED_DATA -->
<script type="application/ld+json">{"@context":"http://schema.org", "@type":"BlogPosting","mainEntityOfPage":{"@id": "http://pythonkim.tistory.com/81"},"url":"http://pythonkim.tistory.com/81","headline":"mnist 난수 종류에 따른 테스트","description":"텐서플로우에서 제공하는 난수에 주로 등장하는 것으로 3가지가 있습니다. random_normal, random_uniform, truncated_normal. 난수에 따른 성능 차이가 있는지 궁금해서 테스트 했습니다. 이들 함수에 대한 정리는 [텐서플로우 정리] 08. 초기값과 난수에서 확인할 수 있습니다. 여러 번 검사하기 전에 전체 데이터에 대해 15회 반복하면서 cost가 어떻게 떨어지는지 비교했습니다. random_normal과 truncated_normal 함수는 잘..","author":{"@type":"Person","name":"사과쿵"},"image":{"@type":"ImageObject","url":"https://t1.daumcdn.net/cssjs/icon/557567EA016E200001","width":"800px","height":"800px"},"datePublished":"20170228T09:36:59+09:00","dateModified":"20170228T09:36:59+09:00","publisher":{"@type":"Organization","name":"TISTORY","logo":{"@type":"ImageObject","url":"https://t1.daumcdn.net/cssjs/icon/557567EA016E200001","width":"800px","height":"800px"}}}</script>
<!-- END STRUCTURED_DATA -->

<link rel="apple-touch-icon" href="//i1.daumcdn.net/thumb/C180x180/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="76x76" href="//i1.daumcdn.net/thumb/C76x76/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="120x120" href="//i1.daumcdn.net/thumb/C120x120/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="152x152" href="//i1.daumcdn.net/thumb/C152x152/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D"></head>

<body>

<script type="text/javascript">
	T.config = {"TOP_SSL_URL":"https:\/\/www.tistory.com","PREVIEW":false,"ROLE":"guest","PREV_PAGE":"","NEXT_PAGE":"\/80","BLOG":{"isDormancy":false,"title":"\ud30c\uc774\ucff5"},"NEED_COMMENT_LOGIN":false,"COMMENT_LOGIN_CONFIRM_MESSAGE":"","LOGIN_URL":"https:\/\/www.tistory.com\/auth\/login\/?redirectUrl=http%3A%2F%2Fpythonkim.tistory.com%2F81","DEFAULT_URL":"http:\/\/pythonkim.tistory.com","USER":{"name":null,"homepage":null}};
</script>

<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/script/blog/common.js"></script>
<div style="margin:0; padding:0; border:none; background:none; float:none; clear:none; z-index:0"></div>


<div id="header">
	<div class="container-fluid">
		<div class="row">
			<div class="col-md-12">
				<!-- Wrapper for slides 가로세로 비율(4:1)-->
				<div id="carousel" class="carousel slide" data-ride="carousel">
					<div class="centered carousel-inner" role="listbox">
						<div class="item active">
							<img src="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/slider_01.png" width="100%" alt="Carousel 01">
							<div class="carousel-caption">
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- header close -->

<div id="content">					<!-- 슬라이드와 본문 사이의 여백 -->
	<div class="container">
		<div class="row">				<!-- 본문 수평 마진 결정 -->
			<div class="col-md-9">
				

				

				
					<div class="entry">
						<div class="titleWrap jumbotron">
							<!-- 현재 보여지는 글의 제목 -->
							<h2>mnist 난수 종류에 따른 테스트</h2>
							<!-- 현재 보여지는 글 제목의 아래에 있는 레이블 박스 2개 -->
							<!--<span class="category label label-primary">머신러닝</span> -->
							<!--<span class="date label label-info">2017.02.28 09:36</span> -->
						</div>
						
						<!-- 현재 보여지는 글의 본문과 본문 아래 글 목록까지 함께. _article_rep_desc_로 동시 처리 -->
						<div class="article">
							<p>텐서플로우에서 제공하는 난수에 주로 등장하는 것으로&nbsp;3가지가 있습니다.</p><p> &nbsp; <b>random_normal, random_uniform, truncated_normal.</b><br /></p><p>난수에 따른 성능 차이가 있는지 궁금해서 테스트 했습니다.<br />이들 함수에 대한 정리는 <span style="color: rgb(255, 94, 0);"><b><span style="color: rgb(255, 94, 0);"></span><a href="http://pythonkim.tistory.com/69" target="_blank" class="tx-link"><span style="color: rgb(255, 94, 0);">[텐서플로우 정리] 08. 초기값과 난수</span></a></b></span>에서 확인할 수 있습니다.</p><p>여러 번 검사하기 전에<br />전체 데이터에 대해 15회 반복하면서 cost가 어떻게 떨어지는지 비교했습니다.<br />random_normal과&nbsp;truncated_normal 함수는 잘 동작하지만, random_uniform 함수는 올바르게 동작하지 않습니다.<br />random_uniform 함수가 만들어 내는 난수는 전체 구간에 대해 균일하기 때문에 발생하는 현상일텐데..<br />처음에 24404라는 값에서 2.30으로 떨어지고 나서 계속 그 값을 유지합니다.<br />이것이 더 이상 조절할 수 없을 만큼으로 w가 변경되었다라고 보기는 어려운데..<br />결과만 놓고 보면 조절할 수 없는 것이 맞기는 합니다.<br />이 부분은 나중에 좀더 정리가 필요한 부분입니다. 어찌 됐든 random_uniform 함수는 적절하지 않습니다.</p><p><br /></p><pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><p><span style="color:#75715e;"># random_normal<br /></span><span style="color:#75715e;">#  1 : 60.478189058737286<br /></span><span style="color:#75715e;">#  2 : 11.734649042432965<br /></span><span style="color:#75715e;">#  3 : 7.067460532757375<br /></span><span style="color:#75715e;">#  4 : 4.989459909444504<br /></span><span style="color:#75715e;">#  5 : 3.778993105515836<br /></span><span style="color:#75715e;">#  6 : 2.991683001535285<br /></span><span style="color:#75715e;">#  7 : 2.480893753819504<br /></span><span style="color:#75715e;">#  8 : 2.027405534006062<br /></span><span style="color:#75715e;">#  9 : 1.7499642808224738<br /></span><span style="color:#75715e;"># 10 : 1.5208392191279025<br /></span><span style="color:#75715e;"># 11 : 1.333428899258666<br /></span><span style="color:#75715e;"># 12 : 1.1645081179615477<br /></span><span style="color:#75715e;"># 13 : 1.0243976788740985<br /></span><span style="color:#75715e;"># 14 : 0.9156795300565903<br /></span><span style="color:#75715e;"># 15 : 0.8343978138050405<br /></span><span style="color:#75715e;"># accuracy : 0.9163<br /></span><span style="color:#75715e;"><br /></span><span style="color:#75715e;"># random_uniform<br /></span><span style="color:#75715e;">#  1 : 24404.246204987452<br /></span><span style="color:#75715e;">#  2 : 2.3088482627001676<br /></span><span style="color:#75715e;">#  3 : 2.303867313645103<br /></span><span style="color:#75715e;">#  4 : 2.3021448772603823<br /></span><span style="color:#75715e;">#  5 : 2.3015500276738954<br /></span><span style="color:#75715e;">#  6 : 2.301343701102516<br /></span><span style="color:#75715e;">#  7 : 2.3012730004570745<br /></span><span style="color:#75715e;">#  8 : 2.301249224922875<br /></span><span style="color:#75715e;">#  9 : 2.3012397917834178<br /></span><span style="color:#75715e;"># 10 : 2.3012363381819294<br /></span><span style="color:#75715e;"># 11 : 2.301236299167981<br /></span><span style="color:#75715e;"># 12 : 2.3012347472797723<br /></span><span style="color:#75715e;"># 13 : 2.3012353801727308<br /></span><span style="color:#75715e;"># 14 : 2.301232471899553<br /></span><span style="color:#75715e;"># 15 : 2.3012359909577773<br /></span><span style="color:#75715e;"># accuracy : 0.1135<br /></span><span style="color:#75715e;"><br /></span><span style="color:#75715e;"># truncated_normal<br /></span><span style="color:#75715e;">#  1 : 42.671754805716574<br /></span><span style="color:#75715e;">#  2 : 9.975034481178634<br /></span><span style="color:#75715e;">#  3 : 6.153620355020877<br /></span><span style="color:#75715e;">#  4 : 4.410890528491953<br /></span><span style="color:#75715e;">#  5 : 3.343142766199837<br /></span><span style="color:#75715e;">#  6 : 2.629227198974904<br /></span><span style="color:#75715e;">#  7 : 2.118781123255989<br /></span><span style="color:#75715e;">#  8 : 1.751021036118762<br /></span><span style="color:#75715e;">#  9 : 1.4441868320022127<br /></span><span style="color:#75715e;"># 10 : 1.1963457991950714<br /></span><span style="color:#75715e;"># 11 : 1.0300166532051782<br /></span><span style="color:#75715e;"># 12 : 0.8463236458417003<br /></span><span style="color:#75715e;"># 13 : 0.7411801967909226<br /></span><span style="color:#75715e;"># 14 : 0.6237198447949415<br /></span><span style="color:#75715e;"># 15 : 0.5263266100296041<br /></span><span style="color:#75715e;"># accuracy : 0.9344</span><span style="color:#75715e;"><br /></span></p></pre><p><br /></p><p>3가지 함수에 대해 동일한 코드를 사용했고, w와 b를 생성할 때 해당 함수를 사용하는 것만 다릅니다. 3회 반복하면서 결과를 출력합니다.</p><pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color:#66d9ef;font-style:italic;">import </span>tensorflow <span style="color:#66d9ef;font-style:italic;">as </span>tf<br /><span style="color:#66d9ef;font-style:italic;">from </span>tensorflow.examples.tutorials.mnist <span style="color:#66d9ef;font-style:italic;">import </span>input_data<br /><br />mnist <span style="color:#f92672;">= </span>input_data.read_data_sets(<span style="color:#008080;">'mnist'</span><span style="color:#cc7832;">, </span><span style="color:#aa4926;">one_hot</span><span style="color:#f92672;">=</span><span style="color:#66d9ef;font-style:italic;">True</span>)<br /><br />learning_rate <span style="color:#f92672;">= </span><span style="color:#ae81ff;">0.01<br /></span>epoches <span style="color:#f92672;">= </span><span style="color:#ae81ff;">15<br /></span>batch_size <span style="color:#f92672;">= </span><span style="color:#ae81ff;">100<br /></span><span style="color:#ae81ff;"><br /></span>x <span style="color:#f92672;">= </span>tf.placeholder(tf.float32)<br />y <span style="color:#f92672;">= </span>tf.placeholder(tf.float32)<br /><br /><span style="color:#75715e;"># ----------------------------------------------- #<br /></span><span style="color:#75715e;"><br /></span><span style="color:#75715e;"># random_normal<br /></span>w1 <span style="color:#f92672;">= </span>tf.Variable(tf.random_normal([<span style="color:#ae81ff;">784</span><span style="color:#cc7832;">, </span><span style="color:#ae81ff;">256</span>]))<br />w2 <span style="color:#f92672;">= </span>tf.Variable(tf.random_normal([<span style="color:#ae81ff;">256</span><span style="color:#cc7832;">, </span><span style="color:#ae81ff;">256</span>]))<br />w3 <span style="color:#f92672;">= </span>tf.Variable(tf.random_normal([<span style="color:#ae81ff;">256</span><span style="color:#cc7832;">,  </span><span style="color:#ae81ff;">10</span>]))<br /><br />b1 <span style="color:#f92672;">= </span>tf.Variable(tf.random_normal([<span style="color:#ae81ff;">256</span>]))<br />b2 <span style="color:#f92672;">= </span>tf.Variable(tf.random_normal([<span style="color:#ae81ff;">256</span>]))<br />b3 <span style="color:#f92672;">= </span>tf.Variable(tf.random_normal([ <span style="color:#ae81ff;">10</span>]))<br /><br /><span style="color:#75715e;"># random_uniform<br /></span><span style="color:#75715e;"># w1 = tf.Variable(tf.random_uniform([784, 256]))<br /></span><span style="color:#75715e;"># w2 = tf.Variable(tf.random_uniform([256, 256]))<br /></span><span style="color:#75715e;"># w3 = tf.Variable(tf.random_uniform([256,  10]))<br /></span><span style="color:#75715e;">#<br /></span><span style="color:#75715e;"># b1 = tf.Variable(tf.random_uniform([256]))<br /></span><span style="color:#75715e;"># b2 = tf.Variable(tf.random_uniform([256]))<br /></span><span style="color:#75715e;"># b3 = tf.Variable(tf.random_uniform([ 10]))<br /></span><span style="color:#75715e;"><br /></span><span style="color:#75715e;"># truncated_normal<br /></span><span style="color:#75715e;"># w1 = tf.Variable(tf.truncated_normal([784, 256]))<br /></span><span style="color:#75715e;"># w2 = tf.Variable(tf.truncated_normal([256, 256]))<br /></span><span style="color:#75715e;"># w3 = tf.Variable(tf.truncated_normal([256,  10]))<br /></span><span style="color:#75715e;">#<br /></span><span style="color:#75715e;"># b1 = tf.Variable(tf.truncated_normal([256]))<br /></span><span style="color:#75715e;"># b2 = tf.Variable(tf.truncated_normal([256]))<br /></span><span style="color:#75715e;"># b3 = tf.Variable(tf.truncated_normal([ 10]))<br /></span><span style="color:#75715e;"><br /></span>a1 <span style="color:#f92672;">= </span>tf.add(tf.matmul(x<span style="color:#cc7832;">, </span>w1)<span style="color:#cc7832;">, </span>b1)<br />r1 <span style="color:#f92672;">= </span>tf.nn.relu(a1)<br />a2 <span style="color:#f92672;">= </span>tf.add(tf.matmul(r1<span style="color:#cc7832;">, </span>w2)<span style="color:#cc7832;">, </span>b2)<br />r2 <span style="color:#f92672;">= </span>tf.nn.relu(a2)<br />a3 <span style="color:#f92672;">= </span>tf.add(tf.matmul(r2<span style="color:#cc7832;">, </span>w3)<span style="color:#cc7832;">, </span>b3)<br /><br />activation <span style="color:#f92672;">= </span>a3<br />cost <span style="color:#f92672;">= </span>tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(<span style="color:#aa4926;">logits</span><span style="color:#f92672;">=</span>activation<span style="color:#cc7832;">, </span><span style="color:#aa4926;">labels</span><span style="color:#f92672;">=</span>y))<br /><br /><span style="color:#75715e;"># ----------------------------------------------- #<br /></span><span style="color:#75715e;"><br /></span>optimizer <span style="color:#f92672;">= </span>tf.train.GradientDescentOptimizer(learning_rate).minimize(cost)<br /><br />sess <span style="color:#f92672;">= </span>tf.Session()<br /><br /><span style="color:#66d9ef;font-style:italic;">for </span>_ <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(<span style="color:#ae81ff;">3</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span>sess.run(tf.global_variables_initializer())<br /><br />    <span style="color:#66d9ef;font-style:italic;">for </span>epoch <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(epoches)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span>avg_cost <span style="color:#f92672;">= </span><span style="color:#ae81ff;">0<br /></span><span style="color:#ae81ff;">        </span>total_batch <span style="color:#f92672;">= </span>mnist.train.num_examples <span style="color:#f92672;">// </span>batch_size    <span style="color:#75715e;"># 55,000 // 100 = 550<br /></span><span style="color:#75715e;"><br /></span><span style="color:#75715e;">        </span><span style="color:#66d9ef;font-style:italic;">for </span>i <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(total_batch)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">            </span>batch_xs<span style="color:#cc7832;">, </span>batch_ys <span style="color:#f92672;">= </span>mnist.train.next_batch(batch_size)<br /><br />            _<span style="color:#cc7832;">, </span>c <span style="color:#f92672;">= </span>sess.run([optimizer<span style="color:#cc7832;">, </span>cost]<span style="color:#cc7832;">,<br /></span><span style="color:#cc7832;">                            </span><span style="color:#aa4926;">feed_dict</span><span style="color:#f92672;">=</span>{x<span style="color:#f92672;">: </span>batch_xs<span style="color:#cc7832;">, </span>y<span style="color:#f92672;">: </span>batch_ys})<br /><br />            avg_cost <span style="color:#f92672;">+= </span>c <span style="color:#f92672;">/ </span>total_batch<br /><br />    <span style="color:#66d9ef;">print</span>(<span style="color:#008080;">'{:2} : {}'</span>.format(epoch<span style="color:#f92672;">+</span><span style="color:#ae81ff;">1</span><span style="color:#cc7832;">, </span>avg_cost))<br /><br />    <span style="color:#75715e;"># -------------------------------- #<br /></span><span style="color:#75715e;"><br /></span><span style="color:#75715e;">    </span>pred <span style="color:#f92672;">= </span>tf.equal(tf.argmax(activation<span style="color:#cc7832;">, </span><span style="color:#ae81ff;">1</span>)<span style="color:#cc7832;">, </span>tf.argmax(y<span style="color:#cc7832;">, </span><span style="color:#ae81ff;">1</span>))<br />    accuracy <span style="color:#f92672;">= </span>tf.reduce_mean(tf.cast(pred<span style="color:#cc7832;">, </span>tf.float32))<br /><br />    <span style="color:#66d9ef;">print</span>(<span style="color:#008080;">'accuracy :'</span><span style="color:#cc7832;">, </span>sess.run(accuracy<span style="color:#cc7832;">,<br /></span><span style="color:#cc7832;">                                 </span><span style="color:#aa4926;">feed_dict</span><span style="color:#f92672;">=</span>{x<span style="color:#f92672;">: </span>mnist.test.images<span style="color:#cc7832;">,<br /></span><span style="color:#cc7832;">                                            </span>y<span style="color:#f92672;">: </span>mnist.test.labels}))<br /><br />sess.close()<br /></pre><p><br /></p><p>마지막 15번째 반복과 정확도만 출력했습니다. random_uniform 함수를 사용할 수 없는 것은 여전히 당연한 사실이고, random_normal 보다는 truncated_normal 함수가 좀더 나은 성능을 보여줍니다. 설마 했는데.. 성능 좋은 난수가 있다는 것을 알게 되서.. 기분이 좋습니다. 다만 xavier 초기화 등의 난수를 현명하게 사용하는 방법이 있기 때문에 항상 그런 것은 아닐 수도 있습니다.</p><pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color:#75715e;"># random_normal<br /></span><span style="color:#75715e;"># 15 : 0.832641489035556<br /></span><span style="color:#75715e;"># accuracy : 0.9181<br /></span><span style="color:#75715e;"># 15 : 0.8100094339383366<br /></span><span style="color:#75715e;"># accuracy : 0.9207<br /></span><span style="color:#75715e;"># 15 : 0.7013166612056974<br /></span><span style="color:#75715e;"># accuracy : 0.9274<br /></span><span style="color:#75715e;"><br /></span><span style="color:#75715e;"># random_uniform<br /></span><span style="color:#75715e;"># 15 : 2.3012339136817213<br /></span><span style="color:#75715e;"># accuracy : 0.1135<br /></span><span style="color:#75715e;"># 15 : 2.3012344139272516<br /></span><span style="color:#75715e;"># accuracy : 0.1135<br /></span><span style="color:#75715e;"># 15 : 2.3012313426624655<br /></span><span style="color:#75715e;"># accuracy : 0.1135<br /></span><span style="color:#75715e;"><br /></span><span style="color:#75715e;"># truncated_normal<br /></span><span style="color:#75715e;"># 15 : 0.5887952694578703<br /></span><span style="color:#75715e;"># accuracy : 0.9247<br /></span><span style="color:#75715e;"># 15 : 0.5807194867451034<br /></span><span style="color:#75715e;"># accuracy : 0.9341<br /></span><span style="color:#75715e;"># 15 : 0.6066072065450834<br /></span><span style="color:#75715e;"># accuracy : 0.9277<br /></span></pre><p><br /></p><div class="daum_like_wrapper"><iframe class="daum_like_button" id="daum_like_button_81" frameborder="0" scrolling="no" allowTransparency="true" src="http://pythonkim.tistory.com/like/?uid=2072317_81&sc=404%2CblogId_2072317&url=http%3A%2F%2Fpythonkim.tistory.com%2F81&published=1488242219" style="width:100%;height:44px;margin:10px auto"></iframe></div><div style="width:100%;margin-top:30px;clear:both;height:30px">		<div class="entry-ccl" style="float:right;margin-top:0;height:0">
			<a href="http://creativecommons.org/licenses/by/4.0/deed.ko" target="_blank" style="text-decoration: none">
				<img id="ccl-icon-81-0" class="entry-ccl-by" src="//i1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/static/admin/editor/ccl_black01.png"
				     onmouseover="tistoryCcl.show(this, 3)"
				     onmouseout="tistoryCcl.hide()" alt="저작자 표시" style="width:15px;height:15px"/>
								<!--
	<rdf:RDF xmlns="http://web.resource.org/cc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
		<Work rdf:about="">
			<license rdf:resource="http://creativecommons.org/licenses/by-fr/2.0/kr/" />
		</Work>
		<License rdf:about="http://creativecommons.org/licenses/by-fr/">
			<permits rdf:resource="http://web.resource.org/cc/Reproduction"/>
			<permits rdf:resource="http://web.resource.org/cc/Distribution"/>
			<requires rdf:resource="http://web.resource.org/cc/Notice"/>
			<requires rdf:resource="http://web.resource.org/cc/Attribution"/>
			<permits rdf:resource="http://web.resource.org/cc/DerivativeWorks"/>
		</License>
	</rdf:RDF>
	-->
			</a>
		</div>
					<script type="text/javascript">
				if (/MSIE [0-6]\./.test(navigator.userAgent)) {
					for (var i = 0; i <1; i++) {
						var el = document.getElementById('ccl-icon-81-' + i);
						el.style.filter = 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src="' + el.src + '",sizingMethod="image")';
						el.src = '//i1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/static/admin/form/s.gif';
					}
				}
			</script>
			<div style="width:31px;float:left;"><a href="/toolbar/popup/abuseReport/?entryId=81" onclick="window.open(this.href, 'tistoryThisBlogPopup', 'width=550, height=510, toolbar=no, menubar=no, status=no, scrollbars=no'); return false;"><img style="border:0" src="//t1.daumcdn.net/tistory_admin/static/ico/ico_spam_report.png" alt="신고"></a></div></div><div class="another_category another_category_color_gray">
<h4>'<a href="/category/머신러닝">머신러닝</a>' 카테고리의 다른 글</h4>
<table>
<tr>
<th>
<a href="http://pythonkim.tistory.com/81"  class ="current" >mnist 난수 종류에 따른 테스트</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2017.02.28</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/80" >mnist 레이어 크기에 따른 테스트</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2017.02.27</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/79" >mnist 레이어 갯수 테스트</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2017.02.27</td>
</tr>
</table></div>
						</div>

						<!-- 글 목록 하단의 프로필. 이미지와 간략한 소개 나오는 곳 -->
						<!-- 프로필 아래에 "받은 트랙백이 없고, 댓글이 없습니다." <div class="actionTrail"> -->
						
					</div> 					<!-- end of entry -->
				

			<!-- 하단 목록 번호 1 2 3 .. 9 10 <s_paging> -->
			</div>
			
			<div class="col-md-3">
				<!-- 기본 사이드바 -->
				<div class="sidebar">
				
					<!-- 오른쪽 사이드바의 공지사항 모듈. 없앨려면, s_sidebar_element 안쪽을 주석으로 막아야 한다. b 태그 추가했다 -->
						
							<div id="notice" class="widget">
								<h3><i class="fa fa-bullhorn"></i>공지사항</h3>
								<ul class="fa-ul">
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/77"><b>파이썬 동영상</b></a> </li>
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/76"><b>머신러닝 동영상</b></a> </li>
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/25"><b>머신러닝 목차</b></a> </li>
									
								</ul>
							</div>
						
					
					<!-- 오른쪽 사이드바의 카테고리 모듈. 없앨려면, s_sidebar_element 안쪽을 주석으로 막아야 한다. -->
						<div id="category" class="widget">
							<h3><i class="fa fa-folder"></i>카테고리</h3>
							<ul class="tt_category">
	<li class="">
		<a class="link_tit" href="/category">
			분류 전체보기							<span class="c_cnt">(70)</span>
			
					</a>

				<ul class="category_list">
							<li class="">
					<a class="link_item" href="/category/프로필">
						프로필													<span class="c_cnt">(0)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/머신러닝">
						머신러닝													<span class="c_cnt">(3)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/머신러닝_김성훈교수님">
						머신러닝_김성훈교수님													<span class="c_cnt">(45)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/텐서플로우">
						텐서플로우													<span class="c_cnt">(12)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/이것저것">
						이것저것													<span class="c_cnt">(10)</span>
						
											</a>

					
				</li>
					</ul>
			</li>
</ul>

						</div>
					
						<div class="author alert alert-success">
							<img src="http://cfile4.uf.tistory.com/image/211AB7495706515D201F0D" alt="블로그 이미지" 
									 class="img-responsive img-circle text-center" width="50%">
							<p><span class="text label label-primary"></span></p>
							<p>얼떨결에 붙인 이름 파이썬_킴</p>
						</div>
					
				</div>
			</div>
		</div>
	</div>
</div>
<!--	
<div id="footer">
	<div class="container">
		<div class="row">
				<div class="copyright">
					<p class="text-center">Copyright 2016 파이썬_킴. All Rights Reserved.<br/>
				</div>
		</div>
	</div>
</div>
-->


<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
<!-- Include all compiled plugins (below), or include individual files as needed -->
<script src="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/bootstrap.min.js"></script>
<script>
$(window).scroll(function() {
  if ($(document).scrollTop() > 50) {
    $('nav').addClass('shrink');
  } else {
    $('nav').removeClass('shrink');
  }
});
</script>
<script id="DragSearchJs" type="text/javascript" src="http://s1.daumcdn.net/img.search/front/js/searchDragSelection.js?nil_ch=tistory" charset="euc-kr"></script>
<script>
$("body").bind('copy', function (e) {
    if (typeof window.getSelection == "undefined") {//IE8 or earlier...
        event.preventDefault();

        var pagelink = '\n\n 출처: ' + decodeURI(document.location.href),
            copytext =  window.getSelection() + pagelink;

        if (window.clipboardData) {
            window.clipboardData.setData('Text', copytext);
        }
        return;
    }
    var body_element = document.getElementsByTagName('body')[0];
    var selection = window.getSelection();

    //if the selection is short let's not annoy our users
    if (("" + selection).length < 30) return;

    //create a div outside of the visible area
    var newdiv = document.createElement('div');
    newdiv.style.position = 'absolute';
    newdiv.style.left = '-99999px';
    body_element.appendChild(newdiv);
    newdiv.appendChild(selection.getRangeAt(0).cloneContents());

    //we need a <pre> tag workaround
    //otherwise the text inside "pre" loses all the line breaks!
    if (selection.getRangeAt(0).commonAncestorContainer.nodeName == "PRE") {
        newdiv.innerHTML = "<pre>" + newdiv.innerHTML + "</pre>";
    }

    newdiv.innerHTML += "<br /><br />출처: <a href='"
        + document.location.href + "'>"
        + decodeURI(document.location.href) + "</a> [파이쿵]";

    selection.selectAllChildren(newdiv);
    window.setTimeout(function () { body_element.removeChild(newdiv); }, 200);
});
</script><script> if (!window.jQuery) document.write("<script src=\"http://t1.daumcdn.net/tistory_admin/lib/jquery-1.12.4.min.js\"><\/script>") </script>
	<script src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/lightbox/assets/js/lightbox.min.js"></script>
	<script>
	    lightbox.option({
			"fadeDuration": 200,
		    "resizeDuration": 200,
		    "wrapAround": false,
			"albumLabel": "%1 / %2",
			"fitImagesInViewport":true ,
			"stopEvent": false
	    })
	</script><script type="text/javascript">
var _tiq = 'undefined' !== typeof _tiq ? _tiq : []; // Global Variables
_tiq.push(["__setParam", "title", "파이쿵 :: mnist 난수 종류에 따른 테스트"]);
_tiq.push(["__setParam", "svcdomain", "user.tistory.com"]);
_tiq.push(["__setParam", "category", ""]);
_tiq.push(["__setParam", "articleno", "81"]);
_tiq.push(["__setParam", "plink", "http://pythonkim.tistory.com/81"]);
_tiq.push(["__setParam", "date", "2017-02-28 09:36:59"]);
_tiq.push(["__setParam", "author", "pythonkim"]);
_tiq.push(["__setParam", "length", "15705"]);
_tiq.push(["__setParam", "isauthor", "N"]);
_tiq.push(["__setParam", "ishidden", "1"]);
_tiq.push(["__setParam", "comments", "0"]);
_tiq.push(["__setParam", "param1", "0"]);
_tiq.push(["__setParam", "param2", "e"]);
_tiq.push(["__setParam", "param3", ""]);
_tiq.push(["__setParam", "like_ex", "{'serviceId': 'tistory', 'uniqueId': '2072317_81', 'serviceCategories': '404,blogId_2072317'}"]);
_tiq.push(["__trackPageview"]);
(function(d) {
	var se = d.createElement('script'); se.type = 'text/javascript'; se.async = true;
	se.src = location.protocol + '//m2.daumcdn.net/tiara/js/td.min.js';
	var s = d.getElementsByTagName('head')[0]; s.appendChild(se);
})(document);
</script>
<script type="text/javascript">
var __TiaraObj = __TiaraObj || {}; if ('undefined' === typeof __TiaraObj.startTime) { __TiaraObj.startTime = new Date(); }
var addEvent = function (evt, fn) { window.addEventListener ? window.addEventListener(evt, fn, false) : window.attachEvent('on' + evt, fn); };
var ua = navigator.userAgent.toLowerCase(); var isIOS = /iP[ao]d|iPhone/i.test(ua); var contentStat = function() {
_tiq.push(['__content', 't_content', {
"c_id":"2072317_81", 
"c_title":"파이쿵 :: mnist 난수 종류에 따른 테스트", 
"type":"article", 
"author":"사과쿵", 
"author_id":"1415031", 
"cp":"pythonkim", 
"cp_id":"2072317", 
"regdata":"2017-02-28 09:36:59", 
"plink":"http://pythonkim.tistory.com/81", 
"media":"pcweb", 
"comment_cnt":0, 
"duration": (new Date()).getTime() - __TiaraObj.startTime.getTime()
}]); };
addEvent(isIOS ? "pagehide" : "beforeunload", contentStat);
</script>
<script type="text/javascript">window.roosevelt_params_queue = window.roosevelt_params_queue || []; window.roosevelt_params_queue.push({channel_id: "dk", channel_label: "tistory"});</script>
<script type="text/javascript" src="//adimg.daumcdn.net/rt/dk_bt/roosevelt_dk_bt.js" async></script><script type="text/javascript">if(window.console!=undefined){setTimeout(console.log.bind(console,"%cTISTORY","font:8em Arial;color:#EC6521;font-weight:bold"),0);setTimeout(console.log.bind(console,"%c  나를 표현하는 블로그","font:2em sans-serif;color:#333;"),0);}</script>		<div id="tistorytoolbarid"
		     style="position:absolute;height:20px;top:4px;right:0px;background-color:transparent;background-image:none;z-index:11;">
			<div class="tistorytoolbar tt_menubar_login">
				<div
					class="tt_menubar_whiteBar">
					<div id="ttMenubarInnerWrap" class="tt_menubar_inner">
						<div class="tt_menubar_bg_toolbar"></div>
						<h2 style="display:none;">티스토리 툴바</h2>
						<div class="tt_menubar_mainmenu"><a
								class="tt_menubar_link_tit tt_menubar_link_tit_daum tt_menubar_link_tit_eng"
								href="http://www.daum.net/?nil_ref=tistory"
								target="_blank">Daum</a></div>
						<div class="tt_menubar_bg_bar"></div>
						<div class="tt_menubar_mainmenu"><a class="tt_menubar_link_tit tt_menubar_link_tit_eng"
						                                    href="http://www.tistory.com">Tistory</a>
						</div>
						<div class="tt_menubar_bg_bar"></div>
						<div class="tt_menubar_logout"><a class="tt_menubar_link_tit"
														  href="https://www.tistory.com/auth/login">로그인</a>
						</div>
					</div>
				</div>
			</div>
		</div>
		</body>
</html>
