<!doctype html>
<html lang="ko">

<head>

<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="alternate" type="application/rss+xml" title="파이쿵" href="http://pythonkim.tistory.com/rss" />
<link href="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
<link href="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/style.css?_T_=1470399111" rel="stylesheet">
<link rel="shortcut icon" href="/favicon.ico" />
<title>파이쿵 :: 29. Tensor Board로 딥네트웍 들여다보기 (lab 09-2)</title>

<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
<!--[if lt IE 9]>
  <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
  <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
<![endif]-->
		
<!-- 구글 애널리틱스 -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-76456208-1', 'auto');
  ga('send', 'pageview');
</script>
	

<style type="text/css">
		#daumSearchBox {
			height: 21px;
			background-image : url(http://i1.daumcdn.net/imgsrc.search/search_all/show/tistory/plugin/bg_search2_2.gif);
			margin: 5px auto ;
			padding: 0;
		}
		#daumSearchBox input {
			background: none;
			margin : 0;
			padding : 0;
			border : 0;
		}
		#daumSearchBox #daumLogo {
			width: 34px;
			height: 21px;
			float: left;
			margin-right: 5px;
			background-image : url(http://i1.daumcdn.net/img-media/tistory/img/bg_search1_2_2010ci.gif);
		}
		#daumSearchBox #show_q {
			background-color: transparent;
			border: none;
			font: 12px Gulim, Sans-serif;
			color: #555;
			margin-top: 4px;
			margin-right: 15px;
			float: left;
		}

		#daumSearchBox #show_btn {
			background-image : url(http://i1.daumcdn.net/imgsrc.search/search_all/show/tistory/plugin/bt_search_2.gif);
			width: 37px;
			height: 21px;
			float: left;
			margin:0;
			cursor:pointer;
			text-indent:-1000em;
		}
	</style><link rel="stylesheet" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/lightbox/assets/css/lightbox.min.css" />
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/TistoryProfileLayer/style.css" />
<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/TistoryProfileLayer/profile.js"></script>
	<style type="text/css">
		.another_category { border: 1px solid #E5E5E5; padding: 10px 10px 5px; margin:10px 0; clear: both; }
		.another_category h4 { font-size: 12px !important; margin: 0 !important; border-bottom: 1px solid #E5E5E5 !important; padding: 2px 0 6px !important; }
		.another_category h4 a { font-weight: bold !important; }
		.another_category table { table-layout: fixed; border-collapse: collapse; width: 100% !important; margin-top: 10px !important; }
		* html .another_category table { width: auto !important; }
		*:first-child+html .another_category table { width: auto !important; }
		.another_category th, .another_category td { padding: 0 0 4px !important; }
		.another_category th { text-align: left; font-size: 12px !important; font-weight: normal;  word-break: break-all; overflow: hidden; line-height: 1.5; }
		.another_category td { text-align: right; width: 80px; font-size: 11px; }
		.another_category th a { font-weight: normal; text-decoration: none; border: none !important; }
		.another_category th a.current{ font-weight: bold; text-decoration: none !important; border-bottom: 1px solid !important; }
		.another_category th span { font-weight: normal; text-decoration: none; font: 10px Tahoma, Sans-serif; border: none !important; }

		.another_category_color_gray, .another_category_color_gray h4 { border-color: #E5E5E5 !important; }
		.another_category_color_gray * { color: #909090 !important; }
		.another_category_color_gray th a.current{border-color:#909090 !important;}
		.another_category_color_gray h4, .another_category_color_gray h4 a { color: #737373 !important; }


		.another_category_color_red, .another_category_color_red h4 { border-color: #F6D4D3 !important;  }
		.another_category_color_red * { color: #E86869 !important; }
		.another_category_color_red th a.current{border-color:#E86869 !important;}
		.another_category_color_red h4, .another_category_color_red h4 a { color: #ED0908 !important; }


		.another_category_color_green, .another_category_color_green h4 { border-color: #CCE7C8 !important; }
		.another_category_color_green * { color: #64C05B !important; }
		.another_category_color_green th a.current{border-color:#64C05B !important;}
		.another_category_color_green h4, .another_category_color_green h4 a { color: #3EA731 !important; }


		.another_category_color_blue, .another_category_color_blue h4 { border-color: #C8DAF2 !important; }
		.another_category_color_blue * { color: #477FD6 !important; }
		.another_category_color_blue th a.current{border-color:#477FD6 !important;}
		.another_category_color_blue h4, .another_category_color_blue h4 a { color: #1960CA !important; }


		.another_category_color_violet, .another_category_color_violet h4 { border-color: #E1CEEC !important;  }
		.another_category_color_violet * { color:#9D64C5 !important; }
		.another_category_color_violet th a.current{border-color:#9D64C5 !important;}
		.another_category_color_violet h4, .another_category_color_violet h4 a { color: #7E2CB5 !important; }
	</style>
<script type="text/javascript">
window.TistoryBlog = {
    url: "http://pythonkim.tistory.com",
	tistoryUrl: "http://pythonkim.tistory.com"
};
var servicePath = "";
var blogURL = "";
</script>
<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/script/_/base.js"></script>
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/style/dialog.css"/>
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/style/menubar.css"/><style type="text/css">.tt_article_useless_p_margin p {padding-top:0 !important;padding-bottom:0 !important;margin-top:0 !important;margin-bottom:0 !important;}</style><meta name="referrer" content="always"><link rel="shortcut icon" href="http://i1.daumcdn.net/cfs.tistory/static/top/favicon_0630.ico"/><meta name="description" content="Tensorboard를 활용한 TensorFlow 시각화를 공부할 차례다. 어찌 된게 뭐 하나 쉬운게 없고.. 계속해서 벽에다 머리 들이박는 상상만 하고..  TensorBoard는 TensorFlow에서 발생한 로그를 표시하거나 디버깅(debugging)을 하기 위한 도구이다. 그래프를 그려서 통계를 시각화하는 것이 주요 기능이다.  예전에는 이렇게 텍스트로 출력을 해서 결과를 보았다. 여전히 그런 사람이 있다. TensorBoard를 사용하기 위해서는 분명..">

<!-- BEGIN OPENGRAPH -->
<link rel="canonical" href="http://pythonkim.tistory.com/38" /><meta property="og:type" content="article"><meta property="og:url" content="http://pythonkim.tistory.com/38" ><meta property="og:site_name" content="파이쿵" ><meta property="og:title" content="29. Tensor Board로 딥네트웍 들여다보기 (lab 09-2)" ><meta name="by" content="사과쿵" ><meta property="og:description" content="Tensorboard를 활용한 TensorFlow 시각화를 공부할 차례다. 어찌 된게 뭐 하나 쉬운게 없고.. 계속해서 벽에다 머리 들이박는 상상만 하고..  TensorBoard는 TensorFlow에서 발생한 로그를 표시하거나 디버깅(debugging)을 하기 위한 도구이다. 그래프를 그려서 통계를 시각화하는 것이 주요 기능이다.  예전에는 이렇게 텍스트로 출력을 해서 결과를 보았다. 여전히 그런 사람이 있다. TensorBoard를 사용하기 위해서는 분명.." ><meta property="og:image" content="http://cfile9.uf.tistory.com/image/232FE33E579F56FA0EE08C" ><meta property="article:section" content="과학" >
<!-- END OPENGRAPH -->



<!-- BEGIN TWITTERCARD -->
<meta name="twitter:card" content="summary_large_image"><meta name="twitter:site" content="@TISTORY"><meta name="twitter:title" content="29. Tensor Board로 딥네트웍 들여다보기 (lab 09-2)" ><meta name="twitter:description" content="Tensorboard를 활용한 TensorFlow 시각화를 공부할 차례다. 어찌 된게 뭐 하나 쉬운게 없고.. 계속해서 벽에다 머리 들이박는 상상만 하고..  TensorBoard는 TensorFlow에서 발생한 로그를 표시하거나 디버깅(debugging)을 하기 위한 도구이다. 그래프를 그려서 통계를 시각화하는 것이 주요 기능이다.  예전에는 이렇게 텍스트로 출력을 해서 결과를 보았다. 여전히 그런 사람이 있다. TensorBoard를 사용하기 위해서는 분명.." ><meta property="twitter:image" content="http://cfile9.uf.tistory.com/image/232FE33E579F56FA0EE08C" >
<!-- END TWITTERCARD -->



<!-- BEGIN DAUMAPP -->
<meta property="dg:plink" content="http://pythonkim.tistory.com/38" ><meta name="plink" content="http://pythonkim.tistory.com/38" ><meta name="title" content="29. Tensor Board로 딥네트웍 들여다보기 (lab 09-2)" ><meta name="article:media_name" content="파이쿵" ><meta property="article:mobile_url" content="http://pythonkim.tistory.com/m/38" ><meta property="article:pc_url" content="http://pythonkim.tistory.com/38" ><meta property="article:mobile_view_url" content="http://pythonkim.tistory.com/m/38" ><meta property="article:pc_view_url" content="http://pythonkim.tistory.com/38" ><meta property="article:pc_service_home" content="http://www.tistory.com" ><meta property="article:mobile_service_home" content="http://www.tistory.com/m" ><meta property="article:txid" content="2072317_38" /><meta property="article:published_time" content="2016-08-01T23:39:25+09:00" ><meta property="og:regDate" content="20160801233925" ><meta property="article:modified_time" content="2016-09-08T00:15:33+09:00" >
<!-- END DAUMAPP -->



<!-- BEGIN STRUCTURED_DATA -->
<script type="application/ld+json">{"@context":"http://schema.org", "@type":"BlogPosting","mainEntityOfPage":{"@id": "http://pythonkim.tistory.com/38"},"url":"http://pythonkim.tistory.com/38","headline":"29. Tensor Board로 딥네트웍 들여다보기 (lab 09-2)","description":"Tensorboard를 활용한 TensorFlow 시각화를 공부할 차례다. 어찌 된게 뭐 하나 쉬운게 없고.. 계속해서 벽에다 머리 들이박는 상상만 하고..  TensorBoard는 TensorFlow에서 발생한 로그를 표시하거나 디버깅(debugging)을 하기 위한 도구이다. 그래프를 그려서 통계를 시각화하는 것이 주요 기능이다.  예전에는 이렇게 텍스트로 출력을 해서 결과를 보았다. 여전히 그런 사람이 있다. TensorBoard를 사용하기 위해서는 분명..","author":{"@type":"Person","name":"사과쿵"},"image":{"@type":"ImageObject","url":"http://cfile9.uf.tistory.com/image/232FE33E579F56FA0EE08C","width":"800px","height":"800px"},"datePublished":"20160801T23:39:25+09:00","dateModified":"20160908T00:15:33+09:00","publisher":{"@type":"Organization","name":"TISTORY","logo":{"@type":"ImageObject","url":"https://t1.daumcdn.net/cssjs/icon/557567EA016E200001","width":"800px","height":"800px"}}}</script>
<!-- END STRUCTURED_DATA -->

<link rel="apple-touch-icon" href="//i1.daumcdn.net/thumb/C180x180/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="76x76" href="//i1.daumcdn.net/thumb/C76x76/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="120x120" href="//i1.daumcdn.net/thumb/C120x120/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="152x152" href="//i1.daumcdn.net/thumb/C152x152/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D"></head>

<body>

<script type="text/javascript">
	T.config = {"TOP_SSL_URL":"https:\/\/www.tistory.com","PREVIEW":false,"ROLE":"guest","PREV_PAGE":"\/39","NEXT_PAGE":"\/37","BLOG":{"isDormancy":false,"title":"\ud30c\uc774\ucff5"},"NEED_COMMENT_LOGIN":false,"COMMENT_LOGIN_CONFIRM_MESSAGE":"","LOGIN_URL":"https:\/\/www.tistory.com\/auth\/login\/?redirectUrl=http%3A%2F%2Fpythonkim.tistory.com%2F38","DEFAULT_URL":"http:\/\/pythonkim.tistory.com","USER":{"name":null,"homepage":null}};
</script>

<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/script/blog/common.js"></script>
<div style="margin:0; padding:0; border:none; background:none; float:none; clear:none; z-index:0"></div>


<div id="header">
	<div class="container-fluid">
		<div class="row">
			<div class="col-md-12">
				<!-- Wrapper for slides 가로세로 비율(4:1)-->
				<div id="carousel" class="carousel slide" data-ride="carousel">
					<div class="centered carousel-inner" role="listbox">
						<div class="item active">
							<img src="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/slider_01.png" width="100%" alt="Carousel 01">
							<div class="carousel-caption">
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- header close -->

<div id="content">					<!-- 슬라이드와 본문 사이의 여백 -->
	<div class="container">
		<div class="row">				<!-- 본문 수평 마진 결정 -->
			<div class="col-md-9">
				

				

				
					<div class="entry">
						<div class="titleWrap jumbotron">
							<!-- 현재 보여지는 글의 제목 -->
							<h2>29. Tensor Board로 딥네트웍 들여다보기 (lab 09-2)</h2>
							<!-- 현재 보여지는 글 제목의 아래에 있는 레이블 박스 2개 -->
							<!--<span class="category label label-primary">머신러닝_김성훈교수님</span> -->
							<!--<span class="date label label-info">2016.08.01 23:39</span> -->
						</div>
						
						<!-- 현재 보여지는 글의 본문과 본문 아래 글 목록까지 함께. _article_rep_desc_로 동시 처리 -->
						<div class="article">
							<p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:378px;;height:auto;max-width:100%"><img src="http://cfile9.uf.tistory.com/image/232FE33E579F56FA0EE08C" style="max-width:100%;height:auto" width="378" height="190" filename="lab_09_08.png" filemime="image/jpeg"/></span></p>
<p><br /></p>
<p>Tensorboard를 활용한 TensorFlow 시각화를 공부할 차례다. 어찌 된게 뭐 하나 쉬운게 없고.. 계속해서 벽에다 머리 들이박는 상상만 하고..</p>
<p><br /></p>
<p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:705px;;height:auto;max-width:100%"><img src="http://cfile8.uf.tistory.com/image/25131F3E579F56FB2D5EBC" style="max-width:100%;height:auto" width="705" height="260" filename="lab_09_09.png" filemime="image/jpeg"/></span></p>
<p>TensorBoard는 TensorFlow에서 발생한 로그를 표시하거나 디버깅(debugging)을 하기 위한 도구이다. 그래프를 그려서 통계를 시각화하는 것이 주요 기능이다.</p>
<p><br /></p>
<p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:648px;;height:auto;max-width:100%"><img src="http://cfile9.uf.tistory.com/image/260D733E579F56FC32DD8C" style="max-width:100%;height:auto" width="648" height="322" filename="lab_09_10.png" filemime="image/jpeg"/></span></p>
<p>예전에는 이렇게 텍스트로 출력을 해서 결과를 보았다. 여전히 그런 사람이 있다. TensorBoard를 사용하기 위해서는 분명 별도의 코드를 넣어야 하니까. 그래도 위와 같은 방식으로 100개 정도만 출력되도 데이터의 변화를 눈으로 추적하기는 어려워진다.</p>
<p><br /></p>
<p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:477px;;height:auto;max-width:100%"><img src="http://cfile23.uf.tistory.com/image/232FFE3E579F56FC0E8DC5" style="max-width:100%;height:auto" width="477" height="296" filename="lab_09_11.png" filemime="image/jpeg"/></span></p>
<p>이제는 그래프를 사용해서 결과를 보고 잘못된 부분을 찾아야 할 때이다. 그래프로 검증하는 새로운 방법인 TensorBoard를 사용해 보자.</p>
<p><br /></p>
<p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:703px;;height:auto;max-width:100%"><img src="http://cfile25.uf.tistory.com/image/2403443E579F56FE3A96FA" style="max-width:100%;height:auto" width="703" height="412" filename="lab_09_12.png" filemime="image/jpeg"/></span></p>
<p>교수님께서 말씀하셨다. 순서대로 5가지만 하면 된다. 주석(annotate, not comment)으로 처리하고 싶은 노드를 선택하고, 한 군데로 모아서, 특정 파일에 기록한다. 즉, 로그를 예약한다. run 함수로 구동한 결과를 add_summary로 추가하고, tensorboard 명령으로 결과를 확인한다.</p>
<p>쉬워보일 수 있지만, 생각보다 어렵다. 아마도 tensorflow 자체에 익숙하지 않기 때문인 것 같다. 텍스트로 결과 보기도 어려운데, 어떻게 시각화까지 할 수 있겠는가? 잘 보려면 그래프가 좋지만, 쉽게 보려면 텍스트가 낫다는 사실은 바뀌지 않는다. 앞에 언급했던 "여전히 그런 사람"에 나 또한 포함된다.</p>
<p>Create writer 항목에서 sess.graph_def는 sess.graph로 바뀌었다. Launch Tensorboard 항목에서 /tmp/mnist_logs는 루트(/) 폴더 밑의 tmp 폴더 밑의 mnist_logs 폴더를 가리킨다.</p>
<p><br /></p>
<p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:475px;;height:auto;max-width:100%"><img src="http://cfile22.uf.tistory.com/image/2328503E579F56FF1654F1" style="max-width:100%;height:auto" width="475" height="321" filename="lab_09_13.png" filemime="image/jpeg"/></span></p>
<p>tensorboard는 터미널(콘솔)에서 실행시킨다. 소스 코드가 있는 폴더로 이동해서 작업을 하면 더 쉽다. tmp 폴더는 리눅스나 맥에서 임시 데이터를 저장하는 폴더이다. 삭제해도 되는 데이터를 보관한다.</p>
<p>현재 폴더에 로그를 기록하려면 "./logs/mnist_logs"라고 한다. 현재 폴더(.) 밑의 logs 폴더 밑의 mnist_logs 폴더라는 뜻이다.</p>
<p>tensorboard를 실행한 후에 웹 브라우저를 열고 주소창에 "0.0.0.0:6006"이라고 입력한다. 마지막에 실행한 tensorboard 명령에 맞는 결과를 보여준다. 폴더를 잘못 지정하는 등의 오타가 있으면 결과가 표시되지 않는다. 이 부분에서 많이 실수했다. 잘못되면 문제가 발생해야 하는데, 내 생각에는 문제로 보이지 않아서 문제였다.</p>
<p><br /></p>
<p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:736px;;height:auto;max-width:100%"><img src="http://cfile6.uf.tistory.com/image/2713713E579F56FF2C05C4" style="max-width:100%;height:auto" width="736" height="408" filename="lab_09_14.png" filemime="image/jpeg"/></span></p>
<p>히스토그램을 보여주는 tensorboard. 다른 코드를 사용해서 돌려보니까, 이 모양이 나오지 않았다. 문제는 그 모양이 맞는지 틀리는지 모르는 상황. 그냥 저 그림을 봤을 때 올바르게 나왔다,라는 생각이 들까?</p>
<p><br /></p>
<p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:742px;;height:auto;max-width:100%"><img src="http://cfile7.uf.tistory.com/image/2562DE41579F570020FE70" style="max-width:100%;height:auto" width="742" height="334" filename="lab_09_15.png" filemime="image/jpeg"/></span></p>
<p>1개짜리 벡터인 스칼라를 추가한 그림이다. accuracy와 cost 두 가지를 보여준다. cost가 줄어드는 방식이 확실히 보인다.</p>
<p><br /></p>
<p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:800px;;height:auto;max-width:100%"><span data-url="http://cfile10.uf.tistory.com/attach/247FAB41579F5EA3264284" data-lightbox="lightbox"><img src="http://cfile10.uf.tistory.com/image/247FAB41579F5EA3264284" style="cursor: pointer;max-width:100%;height:auto" width="800" height="492" filename="lab_09_19.png" filemime="image/jpeg" /></span></span></p>
<p><br /></p>
<p><table cellspacing="5" cellpadding="0" border="0" align="center"><tbody><tr>
<td valign="top"><span class="imageblock" style="display:inline-block;width:400px;;height:auto;max-width:100%"><span data-url="http://cfile29.uf.tistory.com/attach/240B1C41579F5EA31CC90B" data-lightbox="lightbox"><img src="http://cfile29.uf.tistory.com/image/240B1C41579F5EA31CC90B" style="cursor: pointer;max-width:100%;height:auto" width="400" height="765" filename="lab_09_20.png" filemime="image/jpeg" /></span></span></td>
<td valign="top"><span class="imageblock" style="display:inline-block;width:400px;;height:auto;max-width:100%"><span data-url="http://cfile30.uf.tistory.com/attach/211FF141579F5EA408CAED" data-lightbox="lightbox"><img src="http://cfile30.uf.tistory.com/image/211FF141579F5EA408CAED" style="cursor: pointer;max-width:100%;height:auto" width="400" height="514" filename="lab_09_21.png" filemime="image/jpeg" /></span></span></td>
</tr></tbody></table>
</p>
<p>여기 있는 3장의 그림은 교수님께서 따로 배포하신 코드를 실행했을 때의 모습이다. 동영상에서 사용한 코드와는 조금 다르긴 하지만, 모양은 잘 나오는 것 같다. mnist를 구현한 코드이고, 정확도는 100회 반복에 98.64% 나왔다.</p>
<p><br /></p>
<pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color:#66d9ef;font-style:italic;">import </span>tensorflow <span style="color:#66d9ef;font-style:italic;">as </span>tf<br /><span style="color:#66d9ef;font-style:italic;">import </span>input_data<br /><br /><span style="color:#66d9ef;font-style:italic;">def </span><span style="color:#a6e22e;">init_weights</span>(<span style="color:#fd971f;font-style:italic;">shape</span>, <span style="color:#fd971f;font-style:italic;">name</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span><span style="color:#66d9ef;font-style:italic;">return </span>tf.Variable(tf.random_normal(<span style="color:#fd971f;font-style:italic;">shape</span>, <span style="color:#660099;">stddev</span><span style="color:#f92672;">=</span><span style="color:#ae81ff;">0.01</span>), <span style="color:#660099;">name</span><span style="color:#f92672;">=</span><span style="color:#fd971f;font-style:italic;">name</span>)<br /><br /><span style="color:#75715e;"># This network is the same as the previous one except with an extra hidden layer + dropout<br /></span><span style="color:#66d9ef;font-style:italic;">def </span><span style="color:#a6e22e;">model</span>(<span style="color:#fd971f;font-style:italic;">X</span>, <span style="color:#fd971f;font-style:italic;">w_h</span>, <span style="color:#fd971f;font-style:italic;">w_h2</span>, <span style="color:#fd971f;font-style:italic;">w_o</span>, <span style="color:#fd971f;font-style:italic;">p_keep_input</span>, <span style="color:#fd971f;font-style:italic;">p_keep_hidden</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span><span style="color:#75715e;"># Add layer name scopes for better graph visualization<br /></span><span style="color:#75715e;">    </span><span style="color:#66d9ef;font-style:italic;">with </span>tf.name_scope(<span style="color:#008080;font-weight:bold;">"layer1"</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span>X <span style="color:#f92672;">= </span>tf.nn.dropout(<span style="color:#fd971f;font-style:italic;">X</span>, <span style="color:#fd971f;font-style:italic;">p_keep_input</span>)<br />        h <span style="color:#f92672;">= </span>tf.nn.relu(tf.matmul(<span style="color:#fd971f;font-style:italic;">X</span>, <span style="color:#fd971f;font-style:italic;">w_h</span>))<br />    <span style="color:#66d9ef;font-style:italic;">with </span>tf.name_scope(<span style="color:#008080;font-weight:bold;">"layer2"</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span>h <span style="color:#f92672;">= </span>tf.nn.dropout(h, <span style="color:#fd971f;font-style:italic;">p_keep_hidden</span>)<br />        h2 <span style="color:#f92672;">= </span>tf.nn.relu(tf.matmul(h, <span style="color:#fd971f;font-style:italic;">w_h2</span>))<br />    <span style="color:#66d9ef;font-style:italic;">with </span>tf.name_scope(<span style="color:#008080;font-weight:bold;">"layer3"</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span>h2 <span style="color:#f92672;">= </span>tf.nn.dropout(h2, <span style="color:#fd971f;font-style:italic;">p_keep_hidden</span>)<br />        <span style="color:#66d9ef;font-style:italic;">return </span>tf.matmul(h2, <span style="color:#fd971f;font-style:italic;">w_o</span>)<br /><br />mnist <span style="color:#f92672;">= </span>input_data.read_data_sets(<span style="color:#008080;font-weight:bold;">"MNIST_data/"</span>, <span style="color:#660099;">one_hot</span><span style="color:#f92672;">=</span><span style="color:#66d9ef;font-style:italic;">True</span>)<br />trX, trY, teX, teY <span style="color:#f92672;">= </span>mnist.train.images, mnist.train.labels, mnist.test.images, mnist.test.labels<br /><br />X <span style="color:#f92672;">= </span>tf.placeholder(<span style="color:#008080;font-weight:bold;">"float"</span>, [<span style="color:#66d9ef;font-style:italic;">None</span>, <span style="color:#ae81ff;">784</span>], <span style="color:#660099;">name</span><span style="color:#f92672;">=</span><span style="color:#008080;font-weight:bold;">"X"</span>)<br />Y <span style="color:#f92672;">= </span>tf.placeholder(<span style="color:#008080;font-weight:bold;">"float"</span>, [<span style="color:#66d9ef;font-style:italic;">None</span>, <span style="color:#ae81ff;">10</span>], <span style="color:#660099;">name</span><span style="color:#f92672;">=</span><span style="color:#008080;font-weight:bold;">"Y"</span>)<br /><br />w_h <span style="color:#f92672;">= </span>init_weights([<span style="color:#ae81ff;">784</span>, <span style="color:#ae81ff;">625</span>], <span style="color:#008080;font-weight:bold;">"w_h"</span>)<br />w_h2 <span style="color:#f92672;">= </span>init_weights([<span style="color:#ae81ff;">625</span>, <span style="color:#ae81ff;">625</span>], <span style="color:#008080;font-weight:bold;">"w_h2"</span>)<br />w_o <span style="color:#f92672;">= </span>init_weights([<span style="color:#ae81ff;">625</span>, <span style="color:#ae81ff;">10</span>], <span style="color:#008080;font-weight:bold;">"w_o"</span>)<br /><br /><span style="color:#75715e;"># Add histogram summaries for weights<br /></span>tf.histogram_summary(<span style="color:#008080;font-weight:bold;">"w_h_summ"</span>, w_h)<br />tf.histogram_summary(<span style="color:#008080;font-weight:bold;">"w_h2_summ"</span>, w_h2)<br />tf.histogram_summary(<span style="color:#008080;font-weight:bold;">"w_o_summ"</span>, w_o)<br /><br />p_keep_input <span style="color:#f92672;">= </span>tf.placeholder(<span style="color:#008080;font-weight:bold;">"float"</span>, <span style="color:#660099;">name</span><span style="color:#f92672;">=</span><span style="color:#008080;font-weight:bold;">"p_keep_input"</span>)<br />p_keep_hidden <span style="color:#f92672;">= </span>tf.placeholder(<span style="color:#008080;font-weight:bold;">"float"</span>, <span style="color:#660099;">name</span><span style="color:#f92672;">=</span><span style="color:#008080;font-weight:bold;">"p_keep_hidden"</span>)<br />py_x <span style="color:#f92672;">= </span>model(X, w_h, w_h2, w_o, p_keep_input, p_keep_hidden)<br /><br /><span style="color:#66d9ef;font-style:italic;">with </span>tf.name_scope(<span style="color:#008080;font-weight:bold;">"cost"</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span>cost <span style="color:#f92672;">= </span>tf.reduce_mean(tf.nn.softmax_cross_entropy_with_logits(py_x, Y))<br />    train_op <span style="color:#f92672;">= </span>tf.train.RMSPropOptimizer(<span style="color:#ae81ff;">0.001</span>, <span style="color:#ae81ff;">0.9</span>).minimize(cost)<br />    <span style="color:#75715e;"># Add scalar summary for cost<br /></span><span style="color:#75715e;">    </span>tf.scalar_summary(<span style="color:#008080;font-weight:bold;">"cost"</span>, cost)<br /><br /><span style="color:#66d9ef;font-style:italic;">with </span>tf.name_scope(<span style="color:#008080;font-weight:bold;">"accuracy"</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span>correct_pred <span style="color:#f92672;">= </span>tf.equal(tf.argmax(Y, <span style="color:#ae81ff;">1</span>), tf.argmax(py_x, <span style="color:#ae81ff;">1</span>)) <span style="color:#75715e;"># Count correct predictions<br /></span><span style="color:#75715e;">    </span>acc_op <span style="color:#f92672;">= </span>tf.reduce_mean(tf.cast(correct_pred, <span style="color:#008080;font-weight:bold;">"float"</span>)) <span style="color:#75715e;"># Cast boolean to float to average<br /></span><span style="color:#75715e;">    # Add scalar summary for accuracy<br /></span><span style="color:#75715e;">    </span>tf.scalar_summary(<span style="color:#008080;font-weight:bold;">"accuracy"</span>, acc_op)<br /><br /><span style="color:#66d9ef;font-style:italic;">with </span>tf.Session() <span style="color:#66d9ef;font-style:italic;">as </span>sess<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span><span style="color:#75715e;"># create a log writer. run 'tensorboard --logdir=./logs/nn_logs'<br /></span><span style="color:#75715e;">    </span>writer <span style="color:#f92672;">= </span>tf.train.SummaryWriter(<span style="color:#008080;font-weight:bold;">"./logs/nn_logs"</span>, sess.graph) <span style="color:#75715e;"># for 0.8<br /></span><span style="color:#75715e;">    </span>merged <span style="color:#f92672;">= </span>tf.merge_all_summaries()<br /><br />    <span style="color:#75715e;"># you need to initialize all variables<br /></span><span style="color:#75715e;">    </span>tf.initialize_all_variables().run()<br /><br />    <span style="color:#66d9ef;font-style:italic;">for </span>i <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(<span style="color:#ae81ff;">100</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span><span style="color:#66d9ef;font-style:italic;">for </span>start, end <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">zip</span>(<span style="color:#66d9ef;">range</span>(<span style="color:#ae81ff;">0</span>, <span style="color:#66d9ef;">len</span>(trX), <span style="color:#ae81ff;">128</span>), <span style="color:#66d9ef;">range</span>(<span style="color:#ae81ff;">128</span>, <span style="color:#66d9ef;">len</span>(trX), <span style="color:#ae81ff;">128</span>))<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">            </span>sess.run(train_op, <span style="color:#660099;">feed_dict</span><span style="color:#f92672;">=</span>{X<span style="color:#f92672;">: </span>trX[start<span style="color:#f92672;">:</span>end], Y<span style="color:#f92672;">: </span>trY[start<span style="color:#f92672;">:</span>end],<br />                                          p_keep_input<span style="color:#f92672;">: </span><span style="color:#ae81ff;">0.8</span>, p_keep_hidden<span style="color:#f92672;">: </span><span style="color:#ae81ff;">0.5</span>})<br />        summary, acc <span style="color:#f92672;">= </span>sess.run([merged, acc_op], <span style="color:#660099;">feed_dict</span><span style="color:#f92672;">=</span>{X<span style="color:#f92672;">: </span>teX, Y<span style="color:#f92672;">: </span>teY,<br />                                          p_keep_input<span style="color:#f92672;">: </span><span style="color:#ae81ff;">1.0</span>, p_keep_hidden<span style="color:#f92672;">: </span><span style="color:#ae81ff;">1.0</span>})<br />        writer.add_summary(summary, i)  <span style="color:#75715e;"># Write summary<br /></span><span style="color:#75715e;">        </span><span style="color:#66d9ef;">print</span>(i, acc)                   <span style="color:#75715e;"># Report the accuracy<br /></span></pre>
<p>이 코드를 돌리기 위해서는 input_data.py 파일이 필요하다. 구글에서 배포한 파일로 처음 배포하신 코드에 포함되어 있다. 아니면 텐서플로우 샘플 폴더에서도 찾을 수 있다.</p>
<p>여기서는 tensorboard에 결과를 보여주는 것이 목표이므로, 설명은 생략한다. 이 코드에는 drop out, relu 등의 다양한 기법들을 사용하고 있기 때문에 분석하면 많은 도움이 될 것이다.</p><div class="daum_like_wrapper"><iframe class="daum_like_button" id="daum_like_button_38" frameborder="0" scrolling="no" allowTransparency="true" src="http://pythonkim.tistory.com/like/?uid=2072317_38&sc=404%2CblogId_2072317&url=http%3A%2F%2Fpythonkim.tistory.com%2F38&published=1470062365" style="width:100%;height:44px;margin:10px auto"></iframe></div><div style="width:100%;margin-top:30px;clear:both;height:30px">		<div class="entry-ccl" style="float:right;margin-top:0;height:0">
			<a href="http://creativecommons.org/licenses/by/4.0/deed.ko" target="_blank" style="text-decoration: none">
				<img id="ccl-icon-38-0" class="entry-ccl-by" src="//i1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/static/admin/editor/ccl_black01.png"
				     onmouseover="tistoryCcl.show(this, 3)"
				     onmouseout="tistoryCcl.hide()" alt="저작자 표시" style="width:15px;height:15px"/>
								<!--
	<rdf:RDF xmlns="http://web.resource.org/cc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
		<Work rdf:about="">
			<license rdf:resource="http://creativecommons.org/licenses/by-fr/2.0/kr/" />
		</Work>
		<License rdf:about="http://creativecommons.org/licenses/by-fr/">
			<permits rdf:resource="http://web.resource.org/cc/Reproduction"/>
			<permits rdf:resource="http://web.resource.org/cc/Distribution"/>
			<requires rdf:resource="http://web.resource.org/cc/Notice"/>
			<requires rdf:resource="http://web.resource.org/cc/Attribution"/>
			<permits rdf:resource="http://web.resource.org/cc/DerivativeWorks"/>
		</License>
	</rdf:RDF>
	-->
			</a>
		</div>
					<script type="text/javascript">
				if (/MSIE [0-6]\./.test(navigator.userAgent)) {
					for (var i = 0; i <1; i++) {
						var el = document.getElementById('ccl-icon-38-' + i);
						el.style.filter = 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src="' + el.src + '",sizingMethod="image")';
						el.src = '//i1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/static/admin/form/s.gif';
					}
				}
			</script>
			<div style="width:31px;float:left;"><a href="/toolbar/popup/abuseReport/?entryId=38" onclick="window.open(this.href, 'tistoryThisBlogPopup', 'width=550, height=510, toolbar=no, menubar=no, status=no, scrollbars=no'); return false;"><img style="border:0" src="//t1.daumcdn.net/tistory_admin/static/ico/ico_spam_report.png" alt="신고"></a></div></div><div class="another_category another_category_color_gray">
<h4>'<a href="/category/머신러닝_김성훈교수님">머신러닝_김성훈교수님</a>' 카테고리의 다른 글</h4>
<table>
<tr>
<th>
<a href="http://pythonkim.tistory.com/41" >31. Weight 초기화 잘해보자 (lec 10-2)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.08.02</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/40" >30. Sigmoid 보다 ReLU가 더 좋아 (lec 10-1)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.08.02</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/38"  class ="current" >29. Tensor Board로 딥네트웍 들여다보기 (lab 09-2)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.08.01</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/37" >28. XOR을 위한 텐서플로우 딥네트웍 (lab 09-1)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.08.01</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/36" >27. 딥넷트웍 학습 시키기 (backpropagation) (lec 09-3)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.08.01</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/35" >26. 특별편- 10분안에 미분 정리하기 (lec 09-2)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.08.01</td>
</tr>
</table></div>
						</div>

						<!-- 글 목록 하단의 프로필. 이미지와 간략한 소개 나오는 곳 -->
						<!-- 프로필 아래에 "받은 트랙백이 없고, 댓글이 없습니다." <div class="actionTrail"> -->
						
					</div> 					<!-- end of entry -->
				

			<!-- 하단 목록 번호 1 2 3 .. 9 10 <s_paging> -->
			</div>
			
			<div class="col-md-3">
				<!-- 기본 사이드바 -->
				<div class="sidebar">
				
					<!-- 오른쪽 사이드바의 공지사항 모듈. 없앨려면, s_sidebar_element 안쪽을 주석으로 막아야 한다. b 태그 추가했다 -->
						
							<div id="notice" class="widget">
								<h3><i class="fa fa-bullhorn"></i>공지사항</h3>
								<ul class="fa-ul">
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/77"><b>파이썬 동영상</b></a> </li>
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/76"><b>머신러닝 동영상</b></a> </li>
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/25"><b>머신러닝 목차</b></a> </li>
									
								</ul>
							</div>
						
					
					<!-- 오른쪽 사이드바의 카테고리 모듈. 없앨려면, s_sidebar_element 안쪽을 주석으로 막아야 한다. -->
						<div id="category" class="widget">
							<h3><i class="fa fa-folder"></i>카테고리</h3>
							<ul class="tt_category">
	<li class="">
		<a class="link_tit" href="/category">
			분류 전체보기							<span class="c_cnt">(70)</span>
			
					</a>

				<ul class="category_list">
							<li class="">
					<a class="link_item" href="/category/프로필">
						프로필													<span class="c_cnt">(0)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/머신러닝">
						머신러닝													<span class="c_cnt">(3)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/머신러닝_김성훈교수님">
						머신러닝_김성훈교수님													<span class="c_cnt">(45)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/텐서플로우">
						텐서플로우													<span class="c_cnt">(12)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/이것저것">
						이것저것													<span class="c_cnt">(10)</span>
						
											</a>

					
				</li>
					</ul>
			</li>
</ul>

						</div>
					
						<div class="author alert alert-success">
							<img src="http://cfile4.uf.tistory.com/image/211AB7495706515D201F0D" alt="블로그 이미지" 
									 class="img-responsive img-circle text-center" width="50%">
							<p><span class="text label label-primary"></span></p>
							<p>얼떨결에 붙인 이름 파이썬_킴</p>
						</div>
					
				</div>
			</div>
		</div>
	</div>
</div>
<!--	
<div id="footer">
	<div class="container">
		<div class="row">
				<div class="copyright">
					<p class="text-center">Copyright 2016 파이썬_킴. All Rights Reserved.<br/>
				</div>
		</div>
	</div>
</div>
-->


<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
<!-- Include all compiled plugins (below), or include individual files as needed -->
<script src="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/bootstrap.min.js"></script>
<script>
$(window).scroll(function() {
  if ($(document).scrollTop() > 50) {
    $('nav').addClass('shrink');
  } else {
    $('nav').removeClass('shrink');
  }
});
</script>
<script id="DragSearchJs" type="text/javascript" src="http://s1.daumcdn.net/img.search/front/js/searchDragSelection.js?nil_ch=tistory" charset="euc-kr"></script>
<script>
$("body").bind('copy', function (e) {
    if (typeof window.getSelection == "undefined") {//IE8 or earlier...
        event.preventDefault();

        var pagelink = '\n\n 출처: ' + decodeURI(document.location.href),
            copytext =  window.getSelection() + pagelink;

        if (window.clipboardData) {
            window.clipboardData.setData('Text', copytext);
        }
        return;
    }
    var body_element = document.getElementsByTagName('body')[0];
    var selection = window.getSelection();

    //if the selection is short let's not annoy our users
    if (("" + selection).length < 30) return;

    //create a div outside of the visible area
    var newdiv = document.createElement('div');
    newdiv.style.position = 'absolute';
    newdiv.style.left = '-99999px';
    body_element.appendChild(newdiv);
    newdiv.appendChild(selection.getRangeAt(0).cloneContents());

    //we need a <pre> tag workaround
    //otherwise the text inside "pre" loses all the line breaks!
    if (selection.getRangeAt(0).commonAncestorContainer.nodeName == "PRE") {
        newdiv.innerHTML = "<pre>" + newdiv.innerHTML + "</pre>";
    }

    newdiv.innerHTML += "<br /><br />출처: <a href='"
        + document.location.href + "'>"
        + decodeURI(document.location.href) + "</a> [파이쿵]";

    selection.selectAllChildren(newdiv);
    window.setTimeout(function () { body_element.removeChild(newdiv); }, 200);
});
</script><script> if (!window.jQuery) document.write("<script src=\"http://t1.daumcdn.net/tistory_admin/lib/jquery-1.12.4.min.js\"><\/script>") </script>
	<script src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/lightbox/assets/js/lightbox.min.js"></script>
	<script>
	    lightbox.option({
			"fadeDuration": 200,
		    "resizeDuration": 200,
		    "wrapAround": false,
			"albumLabel": "%1 / %2",
			"fitImagesInViewport":true ,
			"stopEvent": false
	    })
	</script><script type="text/javascript">
var _tiq = 'undefined' !== typeof _tiq ? _tiq : []; // Global Variables
_tiq.push(["__setParam", "title", "파이쿵 :: 29. Tensor Board로 딥네트웍 들여다보기 (lab 09-2)"]);
_tiq.push(["__setParam", "svcdomain", "user.tistory.com"]);
_tiq.push(["__setParam", "category", ""]);
_tiq.push(["__setParam", "articleno", "38"]);
_tiq.push(["__setParam", "plink", "http://pythonkim.tistory.com/38"]);
_tiq.push(["__setParam", "date", "2016-08-01 23:39:25"]);
_tiq.push(["__setParam", "author", "pythonkim"]);
_tiq.push(["__setParam", "length", "17130"]);
_tiq.push(["__setParam", "isauthor", "N"]);
_tiq.push(["__setParam", "ishidden", "1"]);
_tiq.push(["__setParam", "comments", "0"]);
_tiq.push(["__setParam", "param1", "0"]);
_tiq.push(["__setParam", "param2", "e"]);
_tiq.push(["__setParam", "param3", ""]);
_tiq.push(["__setParam", "like_ex", "{'serviceId': 'tistory', 'uniqueId': '2072317_38', 'serviceCategories': '404,blogId_2072317'}"]);
_tiq.push(["__trackPageview"]);
(function(d) {
	var se = d.createElement('script'); se.type = 'text/javascript'; se.async = true;
	se.src = location.protocol + '//m2.daumcdn.net/tiara/js/td.min.js';
	var s = d.getElementsByTagName('head')[0]; s.appendChild(se);
})(document);
</script>
<script type="text/javascript">
var __TiaraObj = __TiaraObj || {}; if ('undefined' === typeof __TiaraObj.startTime) { __TiaraObj.startTime = new Date(); }
var addEvent = function (evt, fn) { window.addEventListener ? window.addEventListener(evt, fn, false) : window.attachEvent('on' + evt, fn); };
var ua = navigator.userAgent.toLowerCase(); var isIOS = /iP[ao]d|iPhone/i.test(ua); var contentStat = function() {
_tiq.push(['__content', 't_content', {
"c_id":"2072317_38", 
"c_title":"파이쿵 :: 29. Tensor Board로 딥네트웍 들여다보기 (lab 09-2)", 
"type":"article", 
"author":"사과쿵", 
"author_id":"1415031", 
"cp":"pythonkim", 
"cp_id":"2072317", 
"regdata":"2016-08-01 23:39:25", 
"plink":"http://pythonkim.tistory.com/38", 
"media":"pcweb", 
"comment_cnt":0, 
"duration": (new Date()).getTime() - __TiaraObj.startTime.getTime()
}]); };
addEvent(isIOS ? "pagehide" : "beforeunload", contentStat);
</script>
<script type="text/javascript">window.roosevelt_params_queue = window.roosevelt_params_queue || []; window.roosevelt_params_queue.push({channel_id: "dk", channel_label: "tistory"});</script>
<script type="text/javascript" src="//adimg.daumcdn.net/rt/dk_bt/roosevelt_dk_bt.js" async></script><script type="text/javascript">if(window.console!=undefined){setTimeout(console.log.bind(console,"%cTISTORY","font:8em Arial;color:#EC6521;font-weight:bold"),0);setTimeout(console.log.bind(console,"%c  나를 표현하는 블로그","font:2em sans-serif;color:#333;"),0);}</script>		<div id="tistorytoolbarid"
		     style="position:absolute;height:20px;top:4px;right:0px;background-color:transparent;background-image:none;z-index:11;">
			<div class="tistorytoolbar tt_menubar_login">
				<div
					class="tt_menubar_whiteBar">
					<div id="ttMenubarInnerWrap" class="tt_menubar_inner">
						<div class="tt_menubar_bg_toolbar"></div>
						<h2 style="display:none;">티스토리 툴바</h2>
						<div class="tt_menubar_mainmenu"><a
								class="tt_menubar_link_tit tt_menubar_link_tit_daum tt_menubar_link_tit_eng"
								href="http://www.daum.net/?nil_ref=tistory"
								target="_blank">Daum</a></div>
						<div class="tt_menubar_bg_bar"></div>
						<div class="tt_menubar_mainmenu"><a class="tt_menubar_link_tit tt_menubar_link_tit_eng"
						                                    href="http://www.tistory.com">Tistory</a>
						</div>
						<div class="tt_menubar_bg_bar"></div>
						<div class="tt_menubar_logout"><a class="tt_menubar_link_tit"
														  href="https://www.tistory.com/auth/login">로그인</a>
						</div>
					</div>
				</div>
			</div>
		</div>
		</body>
</html>
