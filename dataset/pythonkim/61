<!doctype html>
<html lang="ko">

<head>

<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="alternate" type="application/rss+xml" title="파이쿵" href="http://pythonkim.tistory.com/rss" />
<link href="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
<link href="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/style.css?_T_=1470399111" rel="stylesheet">
<link rel="shortcut icon" href="/favicon.ico" />
<title>파이쿵 :: 43. TensorFlow에서 RNN 구현하기 (lab 12) 소스코드</title>

<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
<!--[if lt IE 9]>
  <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
  <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
<![endif]-->
		
<!-- 구글 애널리틱스 -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-76456208-1', 'auto');
  ga('send', 'pageview');
</script>
	

<style type="text/css">
		#daumSearchBox {
			height: 21px;
			background-image : url(http://i1.daumcdn.net/imgsrc.search/search_all/show/tistory/plugin/bg_search2_2.gif);
			margin: 5px auto ;
			padding: 0;
		}
		#daumSearchBox input {
			background: none;
			margin : 0;
			padding : 0;
			border : 0;
		}
		#daumSearchBox #daumLogo {
			width: 34px;
			height: 21px;
			float: left;
			margin-right: 5px;
			background-image : url(http://i1.daumcdn.net/img-media/tistory/img/bg_search1_2_2010ci.gif);
		}
		#daumSearchBox #show_q {
			background-color: transparent;
			border: none;
			font: 12px Gulim, Sans-serif;
			color: #555;
			margin-top: 4px;
			margin-right: 15px;
			float: left;
		}

		#daumSearchBox #show_btn {
			background-image : url(http://i1.daumcdn.net/imgsrc.search/search_all/show/tistory/plugin/bt_search_2.gif);
			width: 37px;
			height: 21px;
			float: left;
			margin:0;
			cursor:pointer;
			text-indent:-1000em;
		}
	</style><link rel="stylesheet" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/lightbox/assets/css/lightbox.min.css" />
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/TistoryProfileLayer/style.css" />
<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/TistoryProfileLayer/profile.js"></script>
	<style type="text/css">
		.another_category { border: 1px solid #E5E5E5; padding: 10px 10px 5px; margin:10px 0; clear: both; }
		.another_category h4 { font-size: 12px !important; margin: 0 !important; border-bottom: 1px solid #E5E5E5 !important; padding: 2px 0 6px !important; }
		.another_category h4 a { font-weight: bold !important; }
		.another_category table { table-layout: fixed; border-collapse: collapse; width: 100% !important; margin-top: 10px !important; }
		* html .another_category table { width: auto !important; }
		*:first-child+html .another_category table { width: auto !important; }
		.another_category th, .another_category td { padding: 0 0 4px !important; }
		.another_category th { text-align: left; font-size: 12px !important; font-weight: normal;  word-break: break-all; overflow: hidden; line-height: 1.5; }
		.another_category td { text-align: right; width: 80px; font-size: 11px; }
		.another_category th a { font-weight: normal; text-decoration: none; border: none !important; }
		.another_category th a.current{ font-weight: bold; text-decoration: none !important; border-bottom: 1px solid !important; }
		.another_category th span { font-weight: normal; text-decoration: none; font: 10px Tahoma, Sans-serif; border: none !important; }

		.another_category_color_gray, .another_category_color_gray h4 { border-color: #E5E5E5 !important; }
		.another_category_color_gray * { color: #909090 !important; }
		.another_category_color_gray th a.current{border-color:#909090 !important;}
		.another_category_color_gray h4, .another_category_color_gray h4 a { color: #737373 !important; }


		.another_category_color_red, .another_category_color_red h4 { border-color: #F6D4D3 !important;  }
		.another_category_color_red * { color: #E86869 !important; }
		.another_category_color_red th a.current{border-color:#E86869 !important;}
		.another_category_color_red h4, .another_category_color_red h4 a { color: #ED0908 !important; }


		.another_category_color_green, .another_category_color_green h4 { border-color: #CCE7C8 !important; }
		.another_category_color_green * { color: #64C05B !important; }
		.another_category_color_green th a.current{border-color:#64C05B !important;}
		.another_category_color_green h4, .another_category_color_green h4 a { color: #3EA731 !important; }


		.another_category_color_blue, .another_category_color_blue h4 { border-color: #C8DAF2 !important; }
		.another_category_color_blue * { color: #477FD6 !important; }
		.another_category_color_blue th a.current{border-color:#477FD6 !important;}
		.another_category_color_blue h4, .another_category_color_blue h4 a { color: #1960CA !important; }


		.another_category_color_violet, .another_category_color_violet h4 { border-color: #E1CEEC !important;  }
		.another_category_color_violet * { color:#9D64C5 !important; }
		.another_category_color_violet th a.current{border-color:#9D64C5 !important;}
		.another_category_color_violet h4, .another_category_color_violet h4 a { color: #7E2CB5 !important; }
	</style>
<script type="text/javascript">
window.TistoryBlog = {
    url: "http://pythonkim.tistory.com",
	tistoryUrl: "http://pythonkim.tistory.com"
};
var servicePath = "";
var blogURL = "";
</script>
<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/script/_/base.js"></script>
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/style/dialog.css"/>
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/style/menubar.css"/><style type="text/css">.tt_article_useless_p_margin p {padding-top:0 !important;padding-bottom:0 !important;margin-top:0 !important;margin-bottom:0 !important;}</style><meta name="referrer" content="always"><link rel="shortcut icon" href="http://i1.daumcdn.net/cfs.tistory/static/top/favicon_0630.ico"/><meta name="description" content="lab 12 동영상의 내용이 너무 길어서 소스코드를 이곳에 별도로 정리했다. 먼저 동영상에 나온 코드를 있는 그대로 작성한 코드이다. 교수님께서 알려주신 사이트에 있는 코드는 동영상과 많이 달라서 싣지 않았다. 이번 코드는 이전 글에서 부분적으로 충분히 설명했기 때문에 설명은 생략한다. import tensorflow as tf import numpy as np char_rdic = ['h', 'e', 'l', 'o'] # id -&gt; char char_dic = {w : i for i, w in enum..">

<!-- BEGIN OPENGRAPH -->
<link rel="canonical" href="http://pythonkim.tistory.com/61" /><meta property="og:type" content="article"><meta property="og:url" content="http://pythonkim.tistory.com/61" ><meta property="og:site_name" content="파이쿵" ><meta property="og:title" content="43. TensorFlow에서 RNN 구현하기 (lab 12) 소스코드" ><meta name="by" content="사과쿵" ><meta property="og:description" content="lab 12 동영상의 내용이 너무 길어서 소스코드를 이곳에 별도로 정리했다. 먼저 동영상에 나온 코드를 있는 그대로 작성한 코드이다. 교수님께서 알려주신 사이트에 있는 코드는 동영상과 많이 달라서 싣지 않았다. 이번 코드는 이전 글에서 부분적으로 충분히 설명했기 때문에 설명은 생략한다. import tensorflow as tf import numpy as np char_rdic = ['h', 'e', 'l', 'o'] # id -&gt; char char_dic = {w : i for i, w in enum.." ><meta property="og:image" content="https://t1.daumcdn.net/cssjs/icon/557567EA016E200001" ><meta property="article:section" content="과학" >
<!-- END OPENGRAPH -->



<!-- BEGIN TWITTERCARD -->
<meta name="twitter:card" content="summary_large_image"><meta name="twitter:site" content="@TISTORY"><meta name="twitter:title" content="43. TensorFlow에서 RNN 구현하기 (lab 12) 소스코드" ><meta name="twitter:description" content="lab 12 동영상의 내용이 너무 길어서 소스코드를 이곳에 별도로 정리했다. 먼저 동영상에 나온 코드를 있는 그대로 작성한 코드이다. 교수님께서 알려주신 사이트에 있는 코드는 동영상과 많이 달라서 싣지 않았다. 이번 코드는 이전 글에서 부분적으로 충분히 설명했기 때문에 설명은 생략한다. import tensorflow as tf import numpy as np char_rdic = ['h', 'e', 'l', 'o'] # id -&gt; char char_dic = {w : i for i, w in enum.." ><meta property="twitter:image" content="https://t1.daumcdn.net/cssjs/icon/557567EA016E200001" >
<!-- END TWITTERCARD -->



<!-- BEGIN DAUMAPP -->
<meta property="dg:plink" content="http://pythonkim.tistory.com/61" ><meta name="plink" content="http://pythonkim.tistory.com/61" ><meta name="title" content="43. TensorFlow에서 RNN 구현하기 (lab 12) 소스코드" ><meta name="article:media_name" content="파이쿵" ><meta property="article:mobile_url" content="http://pythonkim.tistory.com/m/61" ><meta property="article:pc_url" content="http://pythonkim.tistory.com/61" ><meta property="article:mobile_view_url" content="http://pythonkim.tistory.com/m/61" ><meta property="article:pc_view_url" content="http://pythonkim.tistory.com/61" ><meta property="article:pc_service_home" content="http://www.tistory.com" ><meta property="article:mobile_service_home" content="http://www.tistory.com/m" ><meta property="article:txid" content="2072317_61" /><meta property="article:published_time" content="2016-08-13T02:07:47+09:00" ><meta property="og:regDate" content="20160813020747" ><meta property="article:modified_time" content="2016-09-08T20:53:03+09:00" >
<!-- END DAUMAPP -->



<!-- BEGIN STRUCTURED_DATA -->
<script type="application/ld+json">{"@context":"http://schema.org", "@type":"BlogPosting","mainEntityOfPage":{"@id": "http://pythonkim.tistory.com/61"},"url":"http://pythonkim.tistory.com/61","headline":"43. TensorFlow에서 RNN 구현하기 (lab 12) 소스코드","description":"lab 12 동영상의 내용이 너무 길어서 소스코드를 이곳에 별도로 정리했다. 먼저 동영상에 나온 코드를 있는 그대로 작성한 코드이다. 교수님께서 알려주신 사이트에 있는 코드는 동영상과 많이 달라서 싣지 않았다. 이번 코드는 이전 글에서 부분적으로 충분히 설명했기 때문에 설명은 생략한다. import tensorflow as tf import numpy as np char_rdic = ['h', 'e', 'l', 'o'] # id -&gt; char char_dic = {w : i for i, w in enum..","author":{"@type":"Person","name":"사과쿵"},"image":{"@type":"ImageObject","url":"https://t1.daumcdn.net/cssjs/icon/557567EA016E200001","width":"800px","height":"800px"},"datePublished":"20160813T02:07:47+09:00","dateModified":"20160908T20:53:03+09:00","publisher":{"@type":"Organization","name":"TISTORY","logo":{"@type":"ImageObject","url":"https://t1.daumcdn.net/cssjs/icon/557567EA016E200001","width":"800px","height":"800px"}}}</script>
<!-- END STRUCTURED_DATA -->

<link rel="apple-touch-icon" href="//i1.daumcdn.net/thumb/C180x180/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="76x76" href="//i1.daumcdn.net/thumb/C76x76/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="120x120" href="//i1.daumcdn.net/thumb/C120x120/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="152x152" href="//i1.daumcdn.net/thumb/C152x152/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D"></head>

<body>

<script type="text/javascript">
	T.config = {"TOP_SSL_URL":"https:\/\/www.tistory.com","PREVIEW":false,"ROLE":"guest","PREV_PAGE":"\/59","NEXT_PAGE":"\/58","BLOG":{"isDormancy":false,"title":"\ud30c\uc774\ucff5"},"NEED_COMMENT_LOGIN":false,"COMMENT_LOGIN_CONFIRM_MESSAGE":"","LOGIN_URL":"https:\/\/www.tistory.com\/auth\/login\/?redirectUrl=http%3A%2F%2Fpythonkim.tistory.com%2F61","DEFAULT_URL":"http:\/\/pythonkim.tistory.com","USER":{"name":null,"homepage":null}};
</script>

<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/script/blog/common.js"></script>
<div style="margin:0; padding:0; border:none; background:none; float:none; clear:none; z-index:0"></div>


<div id="header">
	<div class="container-fluid">
		<div class="row">
			<div class="col-md-12">
				<!-- Wrapper for slides 가로세로 비율(4:1)-->
				<div id="carousel" class="carousel slide" data-ride="carousel">
					<div class="centered carousel-inner" role="listbox">
						<div class="item active">
							<img src="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/slider_01.png" width="100%" alt="Carousel 01">
							<div class="carousel-caption">
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- header close -->

<div id="content">					<!-- 슬라이드와 본문 사이의 여백 -->
	<div class="container">
		<div class="row">				<!-- 본문 수평 마진 결정 -->
			<div class="col-md-9">
				

				

				
					<div class="entry">
						<div class="titleWrap jumbotron">
							<!-- 현재 보여지는 글의 제목 -->
							<h2>43. TensorFlow에서 RNN 구현하기 (lab 12) 소스코드</h2>
							<!-- 현재 보여지는 글 제목의 아래에 있는 레이블 박스 2개 -->
							<!--<span class="category label label-primary">머신러닝_김성훈교수님</span> -->
							<!--<span class="date label label-info">2016.08.13 02:07</span> -->
						</div>
						
						<!-- 현재 보여지는 글의 본문과 본문 아래 글 목록까지 함께. _article_rep_desc_로 동시 처리 -->
						<div class="article">
							<p>lab 12 동영상의 내용이 너무 길어서 소스코드를 이곳에 별도로 정리했다.</p>
<p>먼저 동영상에 나온 코드를 있는 그대로 작성한 코드이다. 교수님께서 알려주신 사이트에 있는 코드는 동영상과 많이 달라서 싣지 않았다. 이번 코드는 이전 글에서 부분적으로 충분히 설명했기 때문에 설명은 생략한다.</p>
<p><br /></p>
<pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color:#66d9ef;font-style:italic;">import </span>tensorflow <span style="color:#66d9ef;font-style:italic;">as </span>tf<br /><span style="color:#66d9ef;font-style:italic;">import </span>numpy <span style="color:#66d9ef;font-style:italic;">as </span>np<br /> <br />char_rdic <span style="color:#f92672;">= </span>[<span style="color:#008080;font-weight:bold;">'h'</span>, <span style="color:#008080;font-weight:bold;">'e'</span>, <span style="color:#008080;font-weight:bold;">'l'</span>, <span style="color:#008080;font-weight:bold;">'o'</span>] <span style="color:#75715e;"># id -&gt; char<br /></span>char_dic <span style="color:#f92672;">= </span>{w <span style="color:#f92672;">: </span>i <span style="color:#66d9ef;font-style:italic;">for </span>i, w <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">enumerate</span>(char_rdic)} <span style="color:#75715e;"># char -&gt; id<br /></span><span style="color:#75715e;"> <br /></span>sample <span style="color:#f92672;">= </span>[char_dic[c] <span style="color:#66d9ef;font-style:italic;">for </span>c <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#008080;font-weight:bold;">'hello'</span>]<br /> <br />x_data <span style="color:#f92672;">= </span>np.array([[<span style="color:#ae81ff;">1</span>,<span style="color:#ae81ff;">0</span>,<span style="color:#ae81ff;">0</span>,<span style="color:#ae81ff;">0</span>],  <span style="color:#75715e;"># h<br /></span><span style="color:#75715e;">                   </span>[<span style="color:#ae81ff;">0</span>,<span style="color:#ae81ff;">1</span>,<span style="color:#ae81ff;">0</span>,<span style="color:#ae81ff;">0</span>],  <span style="color:#75715e;"># e<br /></span><span style="color:#75715e;">                   </span>[<span style="color:#ae81ff;">0</span>,<span style="color:#ae81ff;">0</span>,<span style="color:#ae81ff;">1</span>,<span style="color:#ae81ff;">0</span>],  <span style="color:#75715e;"># l<br /></span><span style="color:#75715e;">                   </span>[<span style="color:#ae81ff;">0</span>,<span style="color:#ae81ff;">0</span>,<span style="color:#ae81ff;">1</span>,<span style="color:#ae81ff;">0</span>]], <span style="color:#75715e;"># l<br /></span><span style="color:#75715e;">                 </span><span style="color:#660099;">dtype </span><span style="color:#f92672;">= </span><span style="color:#008080;font-weight:bold;">'f'</span>)<br /> <br /><span style="color:#75715e;"># Configuration<br /></span>char_vocab_size <span style="color:#f92672;">= </span><span style="color:#66d9ef;">len</span>(char_dic)<br />rnn_size <span style="color:#f92672;">= </span>char_vocab_size  <span style="color:#75715e;"># 1 hot coding (one of 4)<br /></span>time_step_size <span style="color:#f92672;">= </span><span style="color:#ae81ff;">4          </span><span style="color:#75715e;"># 'hell' -&gt; predict 'ello'<br /></span>batch_size <span style="color:#f92672;">= </span><span style="color:#ae81ff;">1              </span><span style="color:#75715e;"># one sample<br /></span><span style="color:#75715e;"> <br /></span><span style="color:#75715e;"># RNN Model<br /></span>rnn_cell <span style="color:#f92672;">= </span>tf.nn.rnn_cell.BasicRNNCell(rnn_size)<br />state <span style="color:#f92672;">= </span>tf.zeros([batch_size, rnn_cell.state_size])<br />X_split <span style="color:#f92672;">= </span>tf.split(<span style="color:#ae81ff;">0</span>, time_step_size, x_data)<br /> <br />outputs, state <span style="color:#f92672;">= </span>tf.nn.rnn(rnn_cell, X_split, state)<br /> <br />logits <span style="color:#f92672;">= </span>tf.reshape(tf.concat(<span style="color:#ae81ff;">1</span>, outputs), [<span style="color:#f92672;">-</span><span style="color:#ae81ff;">1</span>, rnn_size])<br />targets <span style="color:#f92672;">= </span>tf.reshape(sample[<span style="color:#ae81ff;">1</span><span style="color:#f92672;">:</span>], [<span style="color:#f92672;">-</span><span style="color:#ae81ff;">1</span>])<br />weights <span style="color:#f92672;">= </span>tf.ones([<span style="color:#66d9ef;">len</span>(char_dic) <span style="color:#f92672;">* </span>batch_size])<br /> <br />loss <span style="color:#f92672;">= </span>tf.nn.seq2seq.sequence_loss_by_example([logits], [targets], [weights])<br />cost <span style="color:#f92672;">= </span>tf.reduce_sum(loss) <span style="color:#f92672;">/ </span>batch_size<br />train_op <span style="color:#f92672;">= </span>tf.train.RMSPropOptimizer(<span style="color:#ae81ff;">0.01</span>, <span style="color:#ae81ff;">0.9</span>).minimize(cost)<br /> <br /><span style="color:#75715e;"># Launch the graph in a session<br /></span><span style="color:#66d9ef;font-style:italic;">with </span>tf.Session() <span style="color:#66d9ef;font-style:italic;">as </span>sess<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span>tf.initialize_all_variables().run()<br />    <span style="color:#66d9ef;font-style:italic;">for </span>i <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(<span style="color:#ae81ff;">100</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span>sess.run(train_op)<br />        result <span style="color:#f92672;">= </span>sess.run(tf.argmax(logits, <span style="color:#ae81ff;">1</span>))<br />        <span style="color:#66d9ef;">print</span>(result, [char_rdic[t] <span style="color:#66d9ef;font-style:italic;">for </span>t <span style="color:#66d9ef;font-style:italic;">in </span>result])<br /></pre>
<p><br /></p>
<p>두 번째는 생각보다 복잡한 구석이 많아서 변수를 상수로 대체해서 다시 작성해 봤다. 이름까지 정리하고 나니까 코드를 읽기가 많이 편해져서 소개한다.</p>
<pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color:#66d9ef;font-style:italic;">import </span>tensorflow <span style="color:#66d9ef;font-style:italic;">as </span>tf<br /><span style="color:#66d9ef;font-style:italic;">import </span>numpy <span style="color:#66d9ef;font-style:italic;">as </span>np<br /><br />unique <span style="color:#f92672;">= </span><span style="color:#008080;font-weight:bold;">'helo'<br /></span>y_data <span style="color:#f92672;">= </span>[<span style="color:#ae81ff;">1</span>, <span style="color:#ae81ff;">2</span>, <span style="color:#ae81ff;">2</span>, <span style="color:#ae81ff;">3</span>]   <span style="color:#75715e;"># 'ello'. index from 'helo'<br /></span>x_data <span style="color:#f92672;">= </span>np.array([[<span style="color:#ae81ff;">1</span>,<span style="color:#ae81ff;">0</span>,<span style="color:#ae81ff;">0</span>,<span style="color:#ae81ff;">0</span>], [<span style="color:#ae81ff;">0</span>,<span style="color:#ae81ff;">1</span>,<span style="color:#ae81ff;">0</span>,<span style="color:#ae81ff;">0</span>], [<span style="color:#ae81ff;">0</span>,<span style="color:#ae81ff;">0</span>,<span style="color:#ae81ff;">1</span>,<span style="color:#ae81ff;">0</span>], [<span style="color:#ae81ff;">0</span>,<span style="color:#ae81ff;">0</span>,<span style="color:#ae81ff;">1</span>,<span style="color:#ae81ff;">0</span>]], <span style="color:#660099;">dtype</span><span style="color:#f92672;">=</span><span style="color:#008080;font-weight:bold;">'f'</span>)  <span style="color:#75715e;"># 'hell'<br /></span><span style="color:#75715e;"><br /></span>cells  <span style="color:#f92672;">= </span>tf.nn.rnn_cell.BasicRNNCell(<span style="color:#ae81ff;">4</span>)  <span style="color:#75715e;"># 출력 결과(4가지 중에서 선택)<br /></span>state  <span style="color:#f92672;">= </span>tf.zeros([<span style="color:#ae81ff;">1</span>, cells.state_size]) <span style="color:#75715e;"># shape(1, 4), [[0, 0, 0, 0]]<br /></span>x_data <span style="color:#f92672;">= </span>tf.split(<span style="color:#ae81ff;">0</span>, <span style="color:#ae81ff;">4</span>, x_data)          <span style="color:#75715e;"># layer에 포함될 cell 갯수(4). time_step_size<br /></span><span style="color:#75715e;"><br /></span><span style="color:#75715e;"># outputs = [shape(1, 4), shape(1, 4), shape(1, 4), shape(1, 4)]<br /></span><span style="color:#75715e;"># state = shape(1, 4)<br /></span>outputs, state <span style="color:#f92672;">= </span>tf.nn.rnn(cells, x_data, state)<br /><br /><span style="color:#75715e;"># tf.reshape(tensor, shape, name=None)<br /></span><span style="color:#75715e;"># tf.concat(1, outputs) --&gt; shape(1, 16)<br /></span>logits  <span style="color:#f92672;">= </span>tf.reshape(tf.concat(<span style="color:#ae81ff;">1</span>, outputs), [<span style="color:#f92672;">-</span><span style="color:#ae81ff;">1</span>, <span style="color:#ae81ff;">4</span>]) <span style="color:#75715e;"># shape(4, 4)<br /></span>targets <span style="color:#f92672;">= </span>tf.reshape(y_data, [<span style="color:#f92672;">-</span><span style="color:#ae81ff;">1</span>])                   <span style="color:#75715e;"># shape(4), [1, 2, 2, 3]<br /></span>weights <span style="color:#f92672;">= </span>tf.ones([<span style="color:#ae81ff;">4</span>])                               <span style="color:#75715e;"># shape(4), [1, 1, 1, 1]<br /></span><span style="color:#75715e;"><br /></span>loss <span style="color:#f92672;">= </span>tf.nn.seq2seq.sequence_loss_by_example([logits], [targets], [weights])<br />cost <span style="color:#f92672;">= </span>tf.reduce_sum(loss)<br />train_op <span style="color:#f92672;">= </span>tf.train.RMSPropOptimizer(<span style="color:#ae81ff;">0.01</span>, <span style="color:#ae81ff;">0.9</span>).minimize(cost)<br /><br /><span style="color:#66d9ef;font-style:italic;">with </span>tf.Session() <span style="color:#66d9ef;font-style:italic;">as </span>sess<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span>tf.initialize_all_variables().run()<br />    <span style="color:#66d9ef;font-style:italic;">for </span>i <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(<span style="color:#ae81ff;">100</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span>sess.run(train_op)<br />        r0, r1, r2, r3 <span style="color:#f92672;">= </span>sess.run(tf.argmax(logits, <span style="color:#ae81ff;">1</span>))<br />        <span style="color:#66d9ef;">print</span>(r0, r1, r2, r3, <span style="color:#008080;font-weight:bold;">':'</span>, unique[r0], unique[r1], unique[r2], unique[r3])<br /></pre>
<p>코드를 볼 때, 중간에 생성되는 데이터가 어떤 형태인지 아는 것이 매우 중요하다. shape(4)는 1차원 배열로 4개의 요소를 갖고 있고, shape(4, 3)은 2차원 배열로 4개의 행과 3개의 열을 요소로 갖고 있다. [1, 2, 3]은 1차원 배열이고, [[1, 2, 3]]은 2차원 해열로 1x3의 크기를 갖는다.</p>
<p>'hello'를 다룬다고 했는데, 실제로는 마지막 글자를 제외한 'hell'만 사용된다. language model은 다음에 올 글자나 단어를 예측하는 모델이어서, 마지막 글자가 입력으로 들어와도 예측할 수가 없다. 정답에 해당하는 label이 없기 때문에 전달하지 않는 것이 맞다.</p>
<p>tf.split 함수는 데이터를 지정한 갯수로 나눈 다음, 나누어진 요소를 Tensor 객체로 만들어 리스트에 넣어서 반환한다. x_data 변수는 Tensor가 4개 들어간 리스트라는 뜻이다. 처음 만들 때는 np.array로 만들었다가 Tensor 리스트로 변환했다. 첫 번째 매개변수인 0은 행에 대해 나누라는 뜻이다. 1을 전달하면 열을 기준으로 나눈다.</p>
<p>tf.concat 함수는 입력을 연결해서 새로운 Tensor를 만든다. 0을 전달하면 행 기준, 1을 전달하면 열 기준이 된다. 1을 전달했으므로 0번째부터 3번째까지 순서대로 사용해서 1x16 크기의 Tensor를 만든다. 매개변수로 넘어온 outputs는 4개짜리 리스트인데, 3차원으로 해석한다면 4x1x4로 볼 수 있다. reshape 함수를 사용해서 4x4 크기의 Tensor 객체로 바꾸고 있다.</p>
<p>reshape 함수에 [-1]이라고 전달하면 1차원으로 만들겠다는 뜻이고, [-1, 4]로 전달하면 2차원으로 만드는데, 행은 4로 나눈 값을 쓰겠다는 뜻이 된다. 1차원에서는 나눌 값이 없기 때문에 전체를 1차원으로 늘어 놓는 형태가 된다. flat이라고 한다.</p>
<p>tf.argmax 함수는 one-hot encoding을 처리해 주고, 이 값을 run 함수에 전달해 결과를 계산했다. 이번 모델은 입력도 4개, 출력도 4개였다. run 함수의 결과를 리스트 1개로 받을 수도 있지만, 변수 4개로 받았다. r0, r1, r2, r3은 예측한 값의 인덱스로, 순서대로 h, e, l, l 다음에 오는 예측 값을 가리킨다. 원본 문자열은 unique 변수에 넣었고, unique로부터 인덱스 번째의 문자를 출력하면 그것이 예측한 문자가 된다.</p>
<div class="daum_like_wrapper"><iframe class="daum_like_button" id="daum_like_button_61" frameborder="0" scrolling="no" allowTransparency="true" src="http://pythonkim.tistory.com/like/?uid=2072317_61&sc=404%2CblogId_2072317&url=http%3A%2F%2Fpythonkim.tistory.com%2F61&published=1471021667" style="width:100%;height:44px;margin:10px auto"></iframe></div><div style="width:100%;margin-top:30px;clear:both;height:30px">		<div class="entry-ccl" style="float:right;margin-top:0;height:0">
			<a href="http://creativecommons.org/licenses/by/4.0/deed.ko" target="_blank" style="text-decoration: none">
				<img id="ccl-icon-61-0" class="entry-ccl-by" src="//i1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/static/admin/editor/ccl_black01.png"
				     onmouseover="tistoryCcl.show(this, 3)"
				     onmouseout="tistoryCcl.hide()" alt="저작자 표시" style="width:15px;height:15px"/>
								<!--
	<rdf:RDF xmlns="http://web.resource.org/cc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
		<Work rdf:about="">
			<license rdf:resource="http://creativecommons.org/licenses/by-fr/2.0/kr/" />
		</Work>
		<License rdf:about="http://creativecommons.org/licenses/by-fr/">
			<permits rdf:resource="http://web.resource.org/cc/Reproduction"/>
			<permits rdf:resource="http://web.resource.org/cc/Distribution"/>
			<requires rdf:resource="http://web.resource.org/cc/Notice"/>
			<requires rdf:resource="http://web.resource.org/cc/Attribution"/>
			<permits rdf:resource="http://web.resource.org/cc/DerivativeWorks"/>
		</License>
	</rdf:RDF>
	-->
			</a>
		</div>
					<script type="text/javascript">
				if (/MSIE [0-6]\./.test(navigator.userAgent)) {
					for (var i = 0; i <1; i++) {
						var el = document.getElementById('ccl-icon-61-' + i);
						el.style.filter = 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src="' + el.src + '",sizingMethod="image")';
						el.src = '//i1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/static/admin/form/s.gif';
					}
				}
			</script>
			<div style="width:31px;float:left;"><a href="/toolbar/popup/abuseReport/?entryId=61" onclick="window.open(this.href, 'tistoryThisBlogPopup', 'width=550, height=510, toolbar=no, menubar=no, status=no, scrollbars=no'); return false;"><img style="border:0" src="//t1.daumcdn.net/tistory_admin/static/ico/ico_spam_report.png" alt="신고"></a></div></div><div class="another_category another_category_color_gray">
<h4>'<a href="/category/머신러닝_김성훈교수님">머신러닝_김성훈교수님</a>' 카테고리의 다른 글</h4>
<table>
<tr>
<th>
<a href="http://pythonkim.tistory.com/60" >45. 마지막 정리, 새로운 시작 (종강)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.08.13</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/59" >44. 4주차 스터디 정리</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.08.13</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/61"  class ="current" >43. TensorFlow에서 RNN 구현하기 (lab 12) 소스코드</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.08.13</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/58" >42. TensorFlow에서 RNN 구현하기 (lab 12)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.08.12</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/57" >41. NN의 꽃 RNN 이야기 (lec 12)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.08.11</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/56" >40. ConvNet을 TensorFlow로 구현하자 (MNIST 99%) (lab 11)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.08.11</td>
</tr>
</table></div>
						</div>

						<!-- 글 목록 하단의 프로필. 이미지와 간략한 소개 나오는 곳 -->
						<!-- 프로필 아래에 "받은 트랙백이 없고, 댓글이 없습니다." <div class="actionTrail"> -->
						
					</div> 					<!-- end of entry -->
				

			<!-- 하단 목록 번호 1 2 3 .. 9 10 <s_paging> -->
			</div>
			
			<div class="col-md-3">
				<!-- 기본 사이드바 -->
				<div class="sidebar">
				
					<!-- 오른쪽 사이드바의 공지사항 모듈. 없앨려면, s_sidebar_element 안쪽을 주석으로 막아야 한다. b 태그 추가했다 -->
						
							<div id="notice" class="widget">
								<h3><i class="fa fa-bullhorn"></i>공지사항</h3>
								<ul class="fa-ul">
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/77"><b>파이썬 동영상</b></a> </li>
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/76"><b>머신러닝 동영상</b></a> </li>
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/25"><b>머신러닝 목차</b></a> </li>
									
								</ul>
							</div>
						
					
					<!-- 오른쪽 사이드바의 카테고리 모듈. 없앨려면, s_sidebar_element 안쪽을 주석으로 막아야 한다. -->
						<div id="category" class="widget">
							<h3><i class="fa fa-folder"></i>카테고리</h3>
							<ul class="tt_category">
	<li class="">
		<a class="link_tit" href="/category">
			분류 전체보기							<span class="c_cnt">(70)</span>
			
					</a>

				<ul class="category_list">
							<li class="">
					<a class="link_item" href="/category/프로필">
						프로필													<span class="c_cnt">(0)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/머신러닝">
						머신러닝													<span class="c_cnt">(3)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/머신러닝_김성훈교수님">
						머신러닝_김성훈교수님													<span class="c_cnt">(45)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/텐서플로우">
						텐서플로우													<span class="c_cnt">(12)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/이것저것">
						이것저것													<span class="c_cnt">(10)</span>
						
											</a>

					
				</li>
					</ul>
			</li>
</ul>

						</div>
					
						<div class="author alert alert-success">
							<img src="http://cfile4.uf.tistory.com/image/211AB7495706515D201F0D" alt="블로그 이미지" 
									 class="img-responsive img-circle text-center" width="50%">
							<p><span class="text label label-primary"></span></p>
							<p>얼떨결에 붙인 이름 파이썬_킴</p>
						</div>
					
				</div>
			</div>
		</div>
	</div>
</div>
<!--	
<div id="footer">
	<div class="container">
		<div class="row">
				<div class="copyright">
					<p class="text-center">Copyright 2016 파이썬_킴. All Rights Reserved.<br/>
				</div>
		</div>
	</div>
</div>
-->


<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
<!-- Include all compiled plugins (below), or include individual files as needed -->
<script src="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/bootstrap.min.js"></script>
<script>
$(window).scroll(function() {
  if ($(document).scrollTop() > 50) {
    $('nav').addClass('shrink');
  } else {
    $('nav').removeClass('shrink');
  }
});
</script>
<script id="DragSearchJs" type="text/javascript" src="http://s1.daumcdn.net/img.search/front/js/searchDragSelection.js?nil_ch=tistory" charset="euc-kr"></script>
<script>
$("body").bind('copy', function (e) {
    if (typeof window.getSelection == "undefined") {//IE8 or earlier...
        event.preventDefault();

        var pagelink = '\n\n 출처: ' + decodeURI(document.location.href),
            copytext =  window.getSelection() + pagelink;

        if (window.clipboardData) {
            window.clipboardData.setData('Text', copytext);
        }
        return;
    }
    var body_element = document.getElementsByTagName('body')[0];
    var selection = window.getSelection();

    //if the selection is short let's not annoy our users
    if (("" + selection).length < 30) return;

    //create a div outside of the visible area
    var newdiv = document.createElement('div');
    newdiv.style.position = 'absolute';
    newdiv.style.left = '-99999px';
    body_element.appendChild(newdiv);
    newdiv.appendChild(selection.getRangeAt(0).cloneContents());

    //we need a <pre> tag workaround
    //otherwise the text inside "pre" loses all the line breaks!
    if (selection.getRangeAt(0).commonAncestorContainer.nodeName == "PRE") {
        newdiv.innerHTML = "<pre>" + newdiv.innerHTML + "</pre>";
    }

    newdiv.innerHTML += "<br /><br />출처: <a href='"
        + document.location.href + "'>"
        + decodeURI(document.location.href) + "</a> [파이쿵]";

    selection.selectAllChildren(newdiv);
    window.setTimeout(function () { body_element.removeChild(newdiv); }, 200);
});
</script><script> if (!window.jQuery) document.write("<script src=\"http://t1.daumcdn.net/tistory_admin/lib/jquery-1.12.4.min.js\"><\/script>") </script>
	<script src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/lightbox/assets/js/lightbox.min.js"></script>
	<script>
	    lightbox.option({
			"fadeDuration": 200,
		    "resizeDuration": 200,
		    "wrapAround": false,
			"albumLabel": "%1 / %2",
			"fitImagesInViewport":true ,
			"stopEvent": false
	    })
	</script><script type="text/javascript">
var _tiq = 'undefined' !== typeof _tiq ? _tiq : []; // Global Variables
_tiq.push(["__setParam", "title", "파이쿵 :: 43. TensorFlow에서 RNN 구현하기 (lab 12) 소스코드"]);
_tiq.push(["__setParam", "svcdomain", "user.tistory.com"]);
_tiq.push(["__setParam", "category", ""]);
_tiq.push(["__setParam", "articleno", "61"]);
_tiq.push(["__setParam", "plink", "http://pythonkim.tistory.com/61"]);
_tiq.push(["__setParam", "date", "2016-08-13 02:07:47"]);
_tiq.push(["__setParam", "author", "pythonkim"]);
_tiq.push(["__setParam", "length", "13538"]);
_tiq.push(["__setParam", "isauthor", "N"]);
_tiq.push(["__setParam", "ishidden", "1"]);
_tiq.push(["__setParam", "comments", "0"]);
_tiq.push(["__setParam", "param1", "0"]);
_tiq.push(["__setParam", "param2", "e"]);
_tiq.push(["__setParam", "param3", ""]);
_tiq.push(["__setParam", "like_ex", "{'serviceId': 'tistory', 'uniqueId': '2072317_61', 'serviceCategories': '404,blogId_2072317'}"]);
_tiq.push(["__trackPageview"]);
(function(d) {
	var se = d.createElement('script'); se.type = 'text/javascript'; se.async = true;
	se.src = location.protocol + '//m2.daumcdn.net/tiara/js/td.min.js';
	var s = d.getElementsByTagName('head')[0]; s.appendChild(se);
})(document);
</script>
<script type="text/javascript">
var __TiaraObj = __TiaraObj || {}; if ('undefined' === typeof __TiaraObj.startTime) { __TiaraObj.startTime = new Date(); }
var addEvent = function (evt, fn) { window.addEventListener ? window.addEventListener(evt, fn, false) : window.attachEvent('on' + evt, fn); };
var ua = navigator.userAgent.toLowerCase(); var isIOS = /iP[ao]d|iPhone/i.test(ua); var contentStat = function() {
_tiq.push(['__content', 't_content', {
"c_id":"2072317_61", 
"c_title":"파이쿵 :: 43. TensorFlow에서 RNN 구현하기 (lab 12) 소스코드", 
"type":"article", 
"author":"사과쿵", 
"author_id":"1415031", 
"cp":"pythonkim", 
"cp_id":"2072317", 
"regdata":"2016-08-13 02:07:47", 
"plink":"http://pythonkim.tistory.com/61", 
"media":"pcweb", 
"comment_cnt":0, 
"duration": (new Date()).getTime() - __TiaraObj.startTime.getTime()
}]); };
addEvent(isIOS ? "pagehide" : "beforeunload", contentStat);
</script>
<script type="text/javascript">window.roosevelt_params_queue = window.roosevelt_params_queue || []; window.roosevelt_params_queue.push({channel_id: "dk", channel_label: "tistory"});</script>
<script type="text/javascript" src="//adimg.daumcdn.net/rt/dk_bt/roosevelt_dk_bt.js" async></script><script type="text/javascript">if(window.console!=undefined){setTimeout(console.log.bind(console,"%cTISTORY","font:8em Arial;color:#EC6521;font-weight:bold"),0);setTimeout(console.log.bind(console,"%c  나를 표현하는 블로그","font:2em sans-serif;color:#333;"),0);}</script>		<div id="tistorytoolbarid"
		     style="position:absolute;height:20px;top:4px;right:0px;background-color:transparent;background-image:none;z-index:11;">
			<div class="tistorytoolbar tt_menubar_login">
				<div
					class="tt_menubar_whiteBar">
					<div id="ttMenubarInnerWrap" class="tt_menubar_inner">
						<div class="tt_menubar_bg_toolbar"></div>
						<h2 style="display:none;">티스토리 툴바</h2>
						<div class="tt_menubar_mainmenu"><a
								class="tt_menubar_link_tit tt_menubar_link_tit_daum tt_menubar_link_tit_eng"
								href="http://www.daum.net/?nil_ref=tistory"
								target="_blank">Daum</a></div>
						<div class="tt_menubar_bg_bar"></div>
						<div class="tt_menubar_mainmenu"><a class="tt_menubar_link_tit tt_menubar_link_tit_eng"
						                                    href="http://www.tistory.com">Tistory</a>
						</div>
						<div class="tt_menubar_bg_bar"></div>
						<div class="tt_menubar_logout"><a class="tt_menubar_link_tit"
														  href="https://www.tistory.com/auth/login">로그인</a>
						</div>
					</div>
				</div>
			</div>
		</div>
		</body>
</html>
