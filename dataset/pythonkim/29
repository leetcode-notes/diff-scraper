<!doctype html>
<html lang="ko">

<head>

<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="alternate" type="application/rss+xml" title="파이쿵" href="http://pythonkim.tistory.com/rss" />
<link href="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
<link href="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/style.css?_T_=1470399111" rel="stylesheet">
<link rel="shortcut icon" href="/favicon.ico" />
<title>파이쿵 :: 윈도우에서 텐서플로우 사용하기</title>

<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
<!--[if lt IE 9]>
  <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
  <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
<![endif]-->
		
<!-- 구글 애널리틱스 -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-76456208-1', 'auto');
  ga('send', 'pageview');
</script>
	

<style type="text/css">
		#daumSearchBox {
			height: 21px;
			background-image : url(http://i1.daumcdn.net/imgsrc.search/search_all/show/tistory/plugin/bg_search2_2.gif);
			margin: 5px auto ;
			padding: 0;
		}
		#daumSearchBox input {
			background: none;
			margin : 0;
			padding : 0;
			border : 0;
		}
		#daumSearchBox #daumLogo {
			width: 34px;
			height: 21px;
			float: left;
			margin-right: 5px;
			background-image : url(http://i1.daumcdn.net/img-media/tistory/img/bg_search1_2_2010ci.gif);
		}
		#daumSearchBox #show_q {
			background-color: transparent;
			border: none;
			font: 12px Gulim, Sans-serif;
			color: #555;
			margin-top: 4px;
			margin-right: 15px;
			float: left;
		}

		#daumSearchBox #show_btn {
			background-image : url(http://i1.daumcdn.net/imgsrc.search/search_all/show/tistory/plugin/bt_search_2.gif);
			width: 37px;
			height: 21px;
			float: left;
			margin:0;
			cursor:pointer;
			text-indent:-1000em;
		}
	</style><link rel="stylesheet" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/lightbox/assets/css/lightbox.min.css" />
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/TistoryProfileLayer/style.css" />
<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/TistoryProfileLayer/profile.js"></script>
	<style type="text/css">
		.another_category { border: 1px solid #E5E5E5; padding: 10px 10px 5px; margin:10px 0; clear: both; }
		.another_category h4 { font-size: 12px !important; margin: 0 !important; border-bottom: 1px solid #E5E5E5 !important; padding: 2px 0 6px !important; }
		.another_category h4 a { font-weight: bold !important; }
		.another_category table { table-layout: fixed; border-collapse: collapse; width: 100% !important; margin-top: 10px !important; }
		* html .another_category table { width: auto !important; }
		*:first-child+html .another_category table { width: auto !important; }
		.another_category th, .another_category td { padding: 0 0 4px !important; }
		.another_category th { text-align: left; font-size: 12px !important; font-weight: normal;  word-break: break-all; overflow: hidden; line-height: 1.5; }
		.another_category td { text-align: right; width: 80px; font-size: 11px; }
		.another_category th a { font-weight: normal; text-decoration: none; border: none !important; }
		.another_category th a.current{ font-weight: bold; text-decoration: none !important; border-bottom: 1px solid !important; }
		.another_category th span { font-weight: normal; text-decoration: none; font: 10px Tahoma, Sans-serif; border: none !important; }

		.another_category_color_gray, .another_category_color_gray h4 { border-color: #E5E5E5 !important; }
		.another_category_color_gray * { color: #909090 !important; }
		.another_category_color_gray th a.current{border-color:#909090 !important;}
		.another_category_color_gray h4, .another_category_color_gray h4 a { color: #737373 !important; }


		.another_category_color_red, .another_category_color_red h4 { border-color: #F6D4D3 !important;  }
		.another_category_color_red * { color: #E86869 !important; }
		.another_category_color_red th a.current{border-color:#E86869 !important;}
		.another_category_color_red h4, .another_category_color_red h4 a { color: #ED0908 !important; }


		.another_category_color_green, .another_category_color_green h4 { border-color: #CCE7C8 !important; }
		.another_category_color_green * { color: #64C05B !important; }
		.another_category_color_green th a.current{border-color:#64C05B !important;}
		.another_category_color_green h4, .another_category_color_green h4 a { color: #3EA731 !important; }


		.another_category_color_blue, .another_category_color_blue h4 { border-color: #C8DAF2 !important; }
		.another_category_color_blue * { color: #477FD6 !important; }
		.another_category_color_blue th a.current{border-color:#477FD6 !important;}
		.another_category_color_blue h4, .another_category_color_blue h4 a { color: #1960CA !important; }


		.another_category_color_violet, .another_category_color_violet h4 { border-color: #E1CEEC !important;  }
		.another_category_color_violet * { color:#9D64C5 !important; }
		.another_category_color_violet th a.current{border-color:#9D64C5 !important;}
		.another_category_color_violet h4, .another_category_color_violet h4 a { color: #7E2CB5 !important; }
	</style>
<script type="text/javascript">
window.TistoryBlog = {
    url: "http://pythonkim.tistory.com",
	tistoryUrl: "http://pythonkim.tistory.com"
};
var servicePath = "";
var blogURL = "";
</script>
<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/script/_/base.js"></script>
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/style/dialog.css"/>
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/style/menubar.css"/><style type="text/css">.tt_article_useless_p_margin p {padding-top:0 !important;padding-bottom:0 !important;margin-top:0 !important;margin-bottom:0 !important;}</style><meta name="referrer" content="always"><link rel="shortcut icon" href="http://i1.daumcdn.net/cfs.tistory/static/top/favicon_0630.ico"/><meta name="description" content="며칠 동안 설치라는 미명하에 눈을 빨갛게 하고 애들한테 화를 내며 알아낸 것을 적어보려 한다. 일이 안 되면 애들한테 굉장히 예민해지는 직업병이 있다. 텐서플로우는 리눅스와 매킨토시에서만 동작한다. 마이크로소프트도 자신만의 머신러닝 도구를 갖고 있고 오픈까지 했기 때문일까? 사용자가 가장 많은 프로그래머가 아닌 사람들에게까지 저변을 확대하고 있는 시점에서 윈도우를 지원하지 않는다는 것은 정말 이상한 일..">

<!-- BEGIN OPENGRAPH -->
<link rel="canonical" href="http://pythonkim.tistory.com/29" /><meta property="og:type" content="article"><meta property="og:url" content="http://pythonkim.tistory.com/29" ><meta property="og:site_name" content="파이쿵" ><meta property="og:title" content="윈도우에서 텐서플로우 사용하기" ><meta name="by" content="사과쿵" ><meta property="og:description" content="며칠 동안 설치라는 미명하에 눈을 빨갛게 하고 애들한테 화를 내며 알아낸 것을 적어보려 한다. 일이 안 되면 애들한테 굉장히 예민해지는 직업병이 있다. 텐서플로우는 리눅스와 매킨토시에서만 동작한다. 마이크로소프트도 자신만의 머신러닝 도구를 갖고 있고 오픈까지 했기 때문일까? 사용자가 가장 많은 프로그래머가 아닌 사람들에게까지 저변을 확대하고 있는 시점에서 윈도우를 지원하지 않는다는 것은 정말 이상한 일.." ><meta property="og:image" content="http://cfile25.uf.tistory.com/image/271C1445579C2C7A0859A1" ><meta property="article:section" content="과학" >
<!-- END OPENGRAPH -->



<!-- BEGIN TWITTERCARD -->
<meta name="twitter:card" content="summary_large_image"><meta name="twitter:site" content="@TISTORY"><meta name="twitter:title" content="윈도우에서 텐서플로우 사용하기" ><meta name="twitter:description" content="며칠 동안 설치라는 미명하에 눈을 빨갛게 하고 애들한테 화를 내며 알아낸 것을 적어보려 한다. 일이 안 되면 애들한테 굉장히 예민해지는 직업병이 있다. 텐서플로우는 리눅스와 매킨토시에서만 동작한다. 마이크로소프트도 자신만의 머신러닝 도구를 갖고 있고 오픈까지 했기 때문일까? 사용자가 가장 많은 프로그래머가 아닌 사람들에게까지 저변을 확대하고 있는 시점에서 윈도우를 지원하지 않는다는 것은 정말 이상한 일.." ><meta property="twitter:image" content="http://cfile25.uf.tistory.com/image/271C1445579C2C7A0859A1" >
<!-- END TWITTERCARD -->



<!-- BEGIN DAUMAPP -->
<meta property="dg:plink" content="http://pythonkim.tistory.com/29" ><meta name="plink" content="http://pythonkim.tistory.com/29" ><meta name="title" content="윈도우에서 텐서플로우 사용하기" ><meta name="article:media_name" content="파이쿵" ><meta property="article:mobile_url" content="http://pythonkim.tistory.com/m/29" ><meta property="article:pc_url" content="http://pythonkim.tistory.com/29" ><meta property="article:mobile_view_url" content="http://pythonkim.tistory.com/m/29" ><meta property="article:pc_view_url" content="http://pythonkim.tistory.com/29" ><meta property="article:pc_service_home" content="http://www.tistory.com" ><meta property="article:mobile_service_home" content="http://www.tistory.com/m" ><meta property="article:txid" content="2072317_29" /><meta property="article:published_time" content="2016-07-30T14:40:33+09:00" ><meta property="og:regDate" content="20160730144033" ><meta property="article:modified_time" content="2016-08-16T01:02:51+09:00" >
<!-- END DAUMAPP -->



<!-- BEGIN STRUCTURED_DATA -->
<script type="application/ld+json">{"@context":"http://schema.org", "@type":"BlogPosting","mainEntityOfPage":{"@id": "http://pythonkim.tistory.com/29"},"url":"http://pythonkim.tistory.com/29","headline":"윈도우에서 텐서플로우 사용하기","description":"며칠 동안 설치라는 미명하에 눈을 빨갛게 하고 애들한테 화를 내며 알아낸 것을 적어보려 한다. 일이 안 되면 애들한테 굉장히 예민해지는 직업병이 있다. 텐서플로우는 리눅스와 매킨토시에서만 동작한다. 마이크로소프트도 자신만의 머신러닝 도구를 갖고 있고 오픈까지 했기 때문일까? 사용자가 가장 많은 프로그래머가 아닌 사람들에게까지 저변을 확대하고 있는 시점에서 윈도우를 지원하지 않는다는 것은 정말 이상한 일..","author":{"@type":"Person","name":"사과쿵"},"image":{"@type":"ImageObject","url":"http://cfile25.uf.tistory.com/image/271C1445579C2C7A0859A1","width":"800px","height":"800px"},"datePublished":"20160730T14:40:33+09:00","dateModified":"20160816T01:02:51+09:00","publisher":{"@type":"Organization","name":"TISTORY","logo":{"@type":"ImageObject","url":"https://t1.daumcdn.net/cssjs/icon/557567EA016E200001","width":"800px","height":"800px"}}}</script>
<!-- END STRUCTURED_DATA -->

<link rel="apple-touch-icon" href="//i1.daumcdn.net/thumb/C180x180/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="76x76" href="//i1.daumcdn.net/thumb/C76x76/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="120x120" href="//i1.daumcdn.net/thumb/C120x120/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="152x152" href="//i1.daumcdn.net/thumb/C152x152/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D"></head>

<body>

<script type="text/javascript">
	T.config = {"TOP_SSL_URL":"https:\/\/www.tistory.com","PREVIEW":false,"ROLE":"guest","PREV_PAGE":"\/30","NEXT_PAGE":"\/28","BLOG":{"isDormancy":false,"title":"\ud30c\uc774\ucff5"},"NEED_COMMENT_LOGIN":false,"COMMENT_LOGIN_CONFIRM_MESSAGE":"","LOGIN_URL":"https:\/\/www.tistory.com\/auth\/login\/?redirectUrl=http%3A%2F%2Fpythonkim.tistory.com%2F29","DEFAULT_URL":"http:\/\/pythonkim.tistory.com","USER":{"name":null,"homepage":null}};
</script>

<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/script/blog/common.js"></script>
<div style="margin:0; padding:0; border:none; background:none; float:none; clear:none; z-index:0"></div>


<div id="header">
	<div class="container-fluid">
		<div class="row">
			<div class="col-md-12">
				<!-- Wrapper for slides 가로세로 비율(4:1)-->
				<div id="carousel" class="carousel slide" data-ride="carousel">
					<div class="centered carousel-inner" role="listbox">
						<div class="item active">
							<img src="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/slider_01.png" width="100%" alt="Carousel 01">
							<div class="carousel-caption">
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- header close -->

<div id="content">					<!-- 슬라이드와 본문 사이의 여백 -->
	<div class="container">
		<div class="row">				<!-- 본문 수평 마진 결정 -->
			<div class="col-md-9">
				

				

				
					<div class="entry">
						<div class="titleWrap jumbotron">
							<!-- 현재 보여지는 글의 제목 -->
							<h2>윈도우에서 텐서플로우 사용하기</h2>
							<!-- 현재 보여지는 글 제목의 아래에 있는 레이블 박스 2개 -->
							<!--<span class="category label label-primary">텐서플로우</span> -->
							<!--<span class="date label label-info">2016.07.30 14:40</span> -->
						</div>
						
						<!-- 현재 보여지는 글의 본문과 본문 아래 글 목록까지 함께. _article_rep_desc_로 동시 처리 -->
						<div class="article">
							<p>며칠 동안 설치라는 미명하에<br />눈을 빨갛게 하고 애들한테 화를 내며 알아낸 것을 적어보려 한다.<br />일이 안 되면 애들한테 굉장히 예민해지는 직업병이 있다.<br /><br />텐서플로우는 리눅스와 매킨토시에서만 동작한다.<br />마이크로소프트도 자신만의 머신러닝 도구를 갖고 있고 오픈까지 했기 때문일까?<br />사용자가 가장 많은<br />프로그래머가 아닌 사람들에게까지 저변을 확대하고 있는 시점에서<br />윈도우를 지원하지 않는다는 것은 정말 이상한 일이다.<br />다만 도커(docker)를 사용해 보니 <br />어느 정도는 이것 때문에 윈도우 버전을 제공하지 않았구나, 라는 느낌을 받을 수 있었다.<br /><br /></p><p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:800px;;height:auto;max-width:100%"><span data-url="http://cfile26.uf.tistory.com/attach/266C014C579C4A0E2060AE" data-lightbox="lightbox"><img src="http://cfile26.uf.tistory.com/image/266C014C579C4A0E2060AE" style="cursor: pointer;max-width:100%;height:auto" width="800" height="566" filename="tensor_03.png" filemime="image/png" /></span></span></p><p><br />도커는 리눅스 운영체제를 윈도우나 맥에서 사용할 수 있게 해주는 프로그램이라고 생각하면 된다.<br />다시 말해, 텐서플로우가 동작하는 리눅스 운영체제를<br />가상 머신(virtual machine)처럼 윈도우 위에서 대신 동작시켜 주는 엔진으로,<br />윈도우에서 직접 텐서플로우를 다룰 수는 없다.<br />일반적으로 가상 머신은 느리고, 도커는 엄청 빠르다고 한다.&nbsp;<br />이번에 처음 써본 느낌은 "최고 중의 최고"라고 생각한다. 사용법도 무지 쉽다.<br /><br />순서대로 따라가 보자.&nbsp;<br />화면을 일일이 캡쳐하는 식의 이미지는 넣지 않겠다. 그리 어렵지 않으니까.<br /><br /><b>1. 도커 설치</b><br />가장 먼저 할 일은 도커를 설치하는 것이다.&nbsp;<br />개인적으로는 이게 제일 어려웠는데, 두 가지 방법이 있다.<br />도커 툴박스(Docker Toolbox)와 도커포윈도우(Docker for Windows).<br /><br />구글링을 하면 도커 툴박스를 설치하는 것으로 시작하는 문서가 대부분이다.<br />그러나, 도커 툴박스는 윈도우 10 이전의 버전에서만 사용하는 것이 좋다.<br />도커 홈페이지의 글을 읽어보면<br />2016년 7월 현재, 무료로 설치할 수 있는 버전인 윈도우 10 Pro같은 최신 버전은<br />도커포윈도우를 설치하면 성능에 유리하다고 한다. 네이티브(native) 코드를 직접 사용하기 때문에.<br />참, 운영체제는 반드시 64비트여야 한다.<br />
<br />
&nbsp; 도커 툴박스&nbsp;<a href="https://www.docker.com/products/docker-toolbox" target="_blank" style="text-decoration:none"><span style="color: rgb(255, 94, 0);">https://www.docker.com/products/docker-toolbox</span></a><br />
&nbsp; 도커포윈도우&nbsp;<a href="https://docs.docker.com/docker-for-windows" target="_blank" style="text-decoration:none"><span style="color: rgb(255, 94, 0);">https://docs.docker.com/docker-for-windows</span></a><br />
<br />
주의할 점이 또 있다.<br />도커 툴박스는 오라클에서 배포하는 VirtualBox라는 가상 머신 프로그램을 설치하는데,<br />도커포윈도우는 최신 버전의 Hyper-V 프로그램을 사용하고, 당연히 Hyper-V가 더 낫다.<br />도커 제작사에서 그렇게 얘기하니까.&nbsp;<br />그런데, 구글링을 하면 VirtualBox에 대한 얘기를 많이 하기 때문에<br />도커 설치 후 잘 동작하지 않으면 VirtualBox 설치를 안 했기 때문으로 착각할 수 있다.<br /><br />두 가지 모두, 설치는 기본 옵션만 사용한다.<br />그 어떤 것도 바꾸지 말고 계속해서 엔터키만 눌러서 진행한다.<br />나는 두 대의 컴퓨터에 각각 설치해 봤다. <br />그런데, 두 개 모두 설치하니까 VirtualBox와 Hyper-V 충돌이 발생했다.&nbsp;한 가지만 사용하자.<br /><br />사용법은 두 가지가 같다.<br />도커 툴박스는&nbsp;Docker Quickstart Terminal이라는 전용 콘솔을 사용하고,<br />도커포윈도우는 윈도우에 기본 제공되는 콘솔을 사용한다.<br />콘솔의 모양이 살짝 다르지만, 이후 진행 과정에서 입력하는 내용은 완전히 똑같다.<br />입력 문구나 에러가 발생했을 때의 메시지까지 모두 똑같다.<br /><br /><b>2. 콘솔 창 열기</b><br />도커 툴박스를 설치했다면, 새로 설치된 프로그램에서 Docker 그룹을 찾는다.<br />그 안에 보면&nbsp;Docker Quickstart Terminal 메뉴가 있다. 이걸 클릭하면 된다.<br /><br />도커 툴박스를 사용하는 설치 방법을 보여주는 문서를 참고할 수도 있다.<br />
<a href="http://www.netinstructions.com/how-to-install-and-run-tensorflow-on-a-windows-pc/" target="_blank" style="text-decoration:none"><span style="color: rgb(255, 94, 0);">http://www.netinstructions.com/how-to-install-and-run-tensorflow-on-a-windows-pc/</span></a><br />
<br />
도커포윈도우라면, 윈도우 기본 콘솔을 열어야 한다.<br />화면 왼쪽 아래 있는&nbsp;창문처럼 생긴 윈도우 버튼을 누른다.<br />'명령 프롬프트' 메뉴가 있으면 누르고 없으면 검색 버튼을 누르고 입력 창에 cmd라고 입력한다.<br /><br /></p><p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:584px;;height:auto;max-width:100%"><img src="http://cfile28.uf.tistory.com/image/25373F46579C48980B2515" style="max-width:100%;height:auto" width="584" height="144" filename="tensor_01.jpg" filemime="image/jpeg"/></span></p><p style="text-align: left; clear: none; float: none;">윈도우 10 화면이다. 이 부분에 cmd라고 입력한다.<br /><br /></p><p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:659px;;height:auto;max-width:100%"><img src="http://cfile2.uf.tistory.com/image/262CEE46579C489913B3E4" style="max-width:100%;height:auto" width="659" height="220" filename="tensor_02.jpg" filemime="image/jpeg"/></span></p><p>아무 것도 없는 검정 화면이 콘솔이다. 왼쪽에 있는 &gt;를 프롬프트(prompt)라고 부른다.<br />자기 컴퓨터 이름으로 나타나기 때문에 서로 다를 수 있다.<br /><br />보통 도커 사용법을 검색하면<br />이 시점에서 가상으로 뭔가를 만들라고 하는데, 전혀 그럴 필요 없다.<br />도커를 사용하는 목적이 가상 파일 배포에 있는 것이 아니라&nbsp;<br />다른 사람들이 만들어 놓은 가상 파일을 가져다 이용하는 데 있기 때문에<br />이 시점에선 할 게 없다. 뒤에서 명령어 복사해서 붙여넣을 거니까.<br /><br /><b>3. 텐서플로우 공식 설치 페이지로 이동</b><br />구글에서 제공하는 공식 페이지가 있다.<br />
<a href="https://www.tensorflow.org/versions/master/get_started/os_setup.html" target="_blank" style="text-decoration:none"><span style="color: rgb(255, 94, 0);">https://www.tensorflow.org/versions/master/get_started/os_setup.html</span></a><br />
<br /></p><p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:800px;;height:auto;max-width:100%"><span data-url="http://cfile28.uf.tistory.com/attach/22048A4C579C4A0F0FBB0A" data-lightbox="lightbox"><img src="http://cfile28.uf.tistory.com/image/22048A4C579C4A0F0FBB0A" style="cursor: pointer;max-width:100%;height:auto" width="800" height="296" filename="tensor_04.png" filemime="image/png" /></span></span></p><p>&nbsp;<br />구글링해서 들어가면 예전 문서가 많아서 0.9 버전같은 이전 버전으로 연결될 수도 있다.<br />이럴 경우 왼쪽에 보면 버전을 선택할 수 있도록 되어 있는데,<br />여기서 master를 선택하면 언제나 최신 버전이 된다. 현재 버전은0.10.<br /><br /><b>4. Docker install로 이동</b><br />Pip, Virtualenv, Anaconda, Docker, From sources와 같은 방법으로 설치할 수 있다.<br />우리는 이 중에서 도커를 사용해서 설치하려 하고 있다.<br /><br />페이지 중간쯤에 보면&nbsp;Docker installation 항목이 나온다.<br />대충 읽어보면, 구글에서는 도커 이미지를&nbsp;4가지 종류로 제공한다고 말하고 있다.<br />cpu binary, cpu binary + source, gpu binary, gpu binary + source.<br /><br /></p><p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:711px;;height:auto;max-width:100%"><img src="http://cfile25.uf.tistory.com/image/271C1445579C2C7A0859A1" style="max-width:100%;height:auto" width="711" height="225" filename="tensor_05.png" filemime="image/jpeg"/></span></p><p>여기 있는 4가지 중의 하나를 고른다.&nbsp;<br />나는 노트북에서 돌릴 거라서 첫 번째에 있는 cpy binary 버전을 사용했다.<br /><br /><b><span style="font-size: 10pt; color: rgb(255, 94, 0);">&nbsp;&nbsp;</span><span style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 10pt; color: rgb(255, 94, 0); background-color: rgb(250, 250, 250);">docker run -it -p 8888:8888 gcr.io/tensorflow/tensorflow</span><br /></b><span style="font-size: 10pt; color: rgb(255, 94, 0);">&nbsp;&nbsp;</span><span style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 10pt; color: rgb(255, 94, 0); background-color: rgb(250, 250, 250);">nvidia-docker run -it -p 8888:8888 gcr.io/tensorflow/tensorflow:latest-gpu</span></p><span style="font-size: 10pt;"><span style="color: rgb(255, 94, 0);">
</span></span><p>위의 그림 바로 아래에 위와 같은 도커 명령이 있다.<br />명령 오른쪽 끝에 있는 것이 이미지 이름이다. 다른 버전을 고르고 싶다면, 해당 이미지 이름을 사용하면 된다.<br />이들 버전은 모두 IPython Notebook이라는 웹 기반의 파이썬 인터페이스와 연동되어 있다.<br />그래서, 명령 중간에 -p 8888:8888처럼 웹 브라우져에서 접근할 수 있는 포트 번호를 쓰게 되어 있다.<br />앞뒤가 똑같은 포트번호~~. 번호는 아무 거나 줘도 되지만, 같은 것을 주는 것이 좋다.<br />8888과 6006을 가장 많이 사용한다&nbsp;아래 명령어는 gpu 버전에 사용한다.<br />
<br /><b>5. 도커 명령 입력<br /></b>도커 툴박스 전용 콘솔 혹은 기본 콘솔 창에 위의 내용을 붙여 넣고 엔터를 누른다.<br />첫 번째 나오는 메시지에 "뭐가 없어서 할 수 없다"처럼 뜨는데, 무시하면 된다.<br />컴퓨터에 없기 때문에 서버로부터 가져오겠다, 정도의 문구다.<br />
다운로드 받고, 압축도 풀고 하면서 많은 것을 한다.<br />시간은 10분 정도 걸리는 것 같다.<br /><br />설치가 끝나면, 자동으로 해당 이미지 환경으로 들어간다.<br />정확하게 설명하면, 설치한 리눅스 환경으로 들어간다.<br />커서 왼쪽에 있는 프롬프트 모양이 $나 #으로 바뀌었고, 이제부터 리눅스 명령어를 사용해야 한다.<br />리눅스 운영체제를 도커의 도움으로 돌리고 있으니까.<br /><br />그런데, 여기서 IPython Notebook으로 자동 진입하기 때문에<br />실제로는 몇몇 색상이 나타나긴 하지만, 커서 같은 것은 없다.<br />출력된 도움말을 보면 ctrl+c를 누르면 종료한다고 되어 있다.<br />종료하면 리눅스를 탈출해서 이전의 콘솔 환경으로 돌아간다. 그 전에 웹 브라우저를 띄워보자.<br />그리고, localhost:8888이라고 주소창에 입력하자. 그러면, 아래와 같은 그림을 볼 수 있다.<br />IPython Notebook이 동작 중이라서 프롬프트는 보이지 않는다.</p><p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:800px;;height:auto;max-width:100%"><span data-url="http://cfile22.uf.tistory.com/attach/23284046579C48991740C4" data-lightbox="lightbox"><img src="http://cfile22.uf.tistory.com/image/23284046579C48991740C4" style="cursor: pointer;max-width:100%;height:auto" width="800" height="320" filename="tensor_06.jpg" filemime="image/jpeg" /></span></span><br /><br /></p><p>
<b>6. 리눅스 서버 재진입</b><br />ctrl+c를 누르고 빠져 나오자.<br />IPython Notebook은 따로 공부가 필요하다. 구글링해서 필요한 만큼만 공부하도록 하자.&nbsp;<br /><br /><span style="font-size: 10pt; font-family: &quot;맑은 고딕&quot;, sans-serif;">&nbsp;&nbsp;</span><b><span style="color: rgb(255, 94, 0); font-size: 10pt; font-family: &quot;맑은 고딕&quot;, sans-serif;">docker run -it gcr.io/tensorflow/tensorflow bash</span></b><br /><br />포트 번호 없이 입력하면 리눅스 bash 환경으로 들어갈 수 있다. <br />오른쪽 끝에 있는 bash를 쉘(shell)이라고 부른다.&nbsp;윈도우 콘솔과 같은 개념이다.<br /><br />파이썬을 모르면 할 수 있는게 없다. python 또는 python3이라고 입력하고 엔터를 누른다.<br />놀랍게도 우리가 설치한 리눅스 서버는 버전2와 3을 모두 설치해 놓았다.<br />아쉬운 점은 텐서플로우는 버전 2에만 연결되어 있고, 버전 3에서는 사용할 수 없다.<br /><br /><b>7. 텐서플로우 예제 테스트</b><br />bash 환경에서 python이라고 입력했다고 가정하자. python3에서는 동작하지 않으니까.<br />python을 입력했다면 &gt;&gt;&gt;가 나와 있는 파이썬 인터프리터로 진입한 상태이다.<br />여기서 입력하는 모든 것을 파이썬이 해석한다.<br />빠져나올 때는 exit()라고 둥근 괄호까지 입력해야 한다.<br /><br />Run a TensorFlow demo model 항목에 보면 코드가 한 줄 나와 있다. 아래 코드를 복사해서 붙여 넣자.<br /><span style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; background-color: rgb(250, 250, 250);"><br />&nbsp;$ python -c 'import os; import inspect; import tensorflow;&nbsp;<br /></span><span style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; background-color: rgb(250, 250, 250);">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; print(os.path.dirname(inspect.getfile(tensorflow)))'<br /></span><br />나는 두 줄로 썼지만, 타이핑하지 말고 꼭 복사해서 붙여 넣자.<br />텐서플로우가 설치된 경로를 화면에 출력한다.<br />Run a TensorFlow demo model 항목에 나와 있는 것처럼 경로가 표시된다.<br /><br /><span style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; background-color: rgb(250, 250, 250);">&nbsp;/usr/local/lib/python2.7/dist-packages/tensorflow<br />&nbsp;</span><span style="font-family: &quot;Source Code Pro&quot;, monospace; font-size: 14px; background-color: rgb(250, 250, 250);">/usr/local/lib/python2.7/site-packages/tensorflow<br /></span><br /><b>8. mnist 모델 구동</b><br />구글에서 코딩해 놓은 mnist 모델이 있다. 이걸 돌려보자.<br />명령어는 아래와 같은 데, 같은 곳에 숨어 있어서 잘 보이지 않는다.<br />일단 python 콘솔에서 빠져 나온다. 이 명령은 파이썬 외부에서 파이썬 코드를 실행시킨다.<br /><br /><font face="Source Code Pro, monospace"><span style="font-size: 14px; background-color: rgb(250, 250, 250);"><b><span style="font-family: &quot;맑은 고딕&quot;, sans-serif; font-size: 10pt;">&nbsp;&nbsp;</span><span style="color: rgb(255, 94, 0); font-family: &quot;맑은 고딕&quot;, sans-serif; font-size: 10pt;">python -m tensorflow.models.image.mnist.convolutional</span><br /></b><br /></span></font>2대의 데스크탑에서 돌려봤는데, 한 번은 55분, 한 번은 1시간 30분 걸렸다.<br />python이라고 했으니까, 버전 2를 사용하고 있음을 알겠다.<br /><br />8,500회 반복하고, 100번에 한 번씩 결과를 출력한다.<br />최종 성능은 99를 넘는 훌륭한 모델이다. 입력 명령에 있는 것처럼 convolutional 모델을 사용하고 있다.<br />김성훈 교수님께서 말씀하시던 99%가 이걸 보고 말씀하신 것 같다.<br /><br /><b>
9. mnist 실행 결과</b><br />두 번의 실행 결과에서 cpu가 좋지 않은 컴퓨터의 성능이 더 좋았다.<br />컴퓨터에 설치된 지저분한 것들이 좋은 컴퓨터에 많았던 것은 사실이다.<br />두 번째로는 성능 좋은 쪽에서는 도커 툴박스에서 실행했다.<br />느낌이 뭐라 그럴까.., 얘가 동작하고 있나.. 하는 느낌이 들 정도로 기분이 묘했다.<br />일단은 구글에서 얘기한 것처럼 도커포윈도우가 좋은 성능을 낸다고 보는 게 맞는 것 같다.<br /><br />하나 더.<br />도커 허브에서 우분투 이미지를 가져다가 파이썬3과 텐서플로우까지 직접 설치했다.<br />성능 안 좋은 컴퓨터 얘기다.<br />그런데, 여기서 돌렸던 mnist 모델은 성능이 40% 가량 좋게 나왔다.<br />이게 뭐야? 구글이 텐서플로우 이미지에다 무슨 짓을 한건가?<br />다시 테스트를 해보겠지만, 정말 정말 놀라운 결과였다.<br /><br /><b>64비트 Windows 10 Pro. 인텔 코어 i5-2500 3.3Ghz. 메모리 8G</b><br /><b>1시 32분에 실행해서 2시 57분에 종료(1시간 25분 소요)</b><br /><b>최종 에러율 0.8%(정확도 99.2%)</b><br /><br />Step 0 (epoch 0.00), 6.5 ms<br />Minibatch loss: 12.053, learning rate: 0.010000<br />Minibatch error: 90.6%<br />Validation error: 84.6%<br />Step 100 (epoch 0.12), 584.6 ms<br />Minibatch loss: 3.283, learning rate: 0.010000<br />Minibatch error: 6.2%<br />Validation error: 6.8%<br />... 중략<br />Step 8400 (epoch 9.77), 585.5 ms<br />Minibatch loss: 1.600, learning rate: 0.006302<br />Minibatch error: 0.0%<br />Validation error: 0.7%<br />Step 8500 (epoch 9.89), 586.3 ms<br />Minibatch loss: 1.594, learning rate: 0.006302<br />Minibatch error: 0.0%<br />Validation error: 0.8%<br />Test error: 0.8%<br /><br /><b>64비트 Windows 10 Pro. 인텔 코어 i3-2112 3.3Ghz. 메모리 8G<br />11시 27분에 실행해서 12시 22분에 종료(55분 소요)<br />최종 에러율 0.8%(정확도 99.2%)<br /></b><br />Step 0 (epoch 0.00), 7.5 ms<br />Minibatch loss: 12.054, learning rate: 0.010000<br />Minibatch error: 90.6%<br />Validation error: 84.6%<br />Step 100 (epoch 0.12), 369.5 ms<br />Minibatch loss: 3.289, learning rate: 0.010000<br />Minibatch error: 6.2%<br />Validation error: 7.0%<br />... 중략<br />Step 8400 (epoch 9.77), 371.0 ms<br />Minibatch loss: 1.595, learning rate: 0.006302<br />Minibatch error: 0.0%<br />Validation error: 0.8%<br />Step 8500 (epoch 9.89), 370.5 ms<br />Minibatch loss: 1.617, learning rate: 0.006302<br />Minibatch error: 1.6%<br />Validation error: 0.8%<br />Test error: 0.8%<br /><br /><b>64비트 Windows 10 Pro. 인텔 코어 i5-6500 3.2Ghz. 메모리 8G<br />8시 54분에 실행해서 9시 37분에 종료(43분 소요)<br />최종 에러율 0.8%(정확도 99.2%)<br /></b><br />Step 8500 (epoch 9.89), 285.4 ms<br />Minibatch loss: 1.617, learning rate: 0.006302<br />Minibatch error: 1.6%<br />Validation error: 0.8%<br />Test error: 0.8%<br /><br />머신러닝 제대로 돌려보려고 구매한 조립 컴퓨터.<br />GPU 버전을 설치해야 하지만, 막 조립을 끝내고 mnist만 돌려봄.<br />CPU가 많이 차이나는데, 시간은 그에 비해 차이가 나지 않는 것 같다는 생각이 듬.<br /><br /></p><div class="daum_like_wrapper"><iframe class="daum_like_button" id="daum_like_button_29" frameborder="0" scrolling="no" allowTransparency="true" src="http://pythonkim.tistory.com/like/?uid=2072317_29&sc=404%2CblogId_2072317&url=http%3A%2F%2Fpythonkim.tistory.com%2F29&published=1469857233" style="width:100%;height:44px;margin:10px auto"></iframe></div><div style="width:100%;margin-top:30px;clear:both;height:30px">		<div class="entry-ccl" style="float:right;margin-top:0;height:0">
			<a href="http://creativecommons.org/licenses/by/4.0/deed.ko" target="_blank" style="text-decoration: none">
				<img id="ccl-icon-29-0" class="entry-ccl-by" src="//i1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/static/admin/editor/ccl_black01.png"
				     onmouseover="tistoryCcl.show(this, 3)"
				     onmouseout="tistoryCcl.hide()" alt="저작자 표시" style="width:15px;height:15px"/>
								<!--
	<rdf:RDF xmlns="http://web.resource.org/cc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
		<Work rdf:about="">
			<license rdf:resource="http://creativecommons.org/licenses/by-fr/2.0/kr/" />
		</Work>
		<License rdf:about="http://creativecommons.org/licenses/by-fr/">
			<permits rdf:resource="http://web.resource.org/cc/Reproduction"/>
			<permits rdf:resource="http://web.resource.org/cc/Distribution"/>
			<requires rdf:resource="http://web.resource.org/cc/Notice"/>
			<requires rdf:resource="http://web.resource.org/cc/Attribution"/>
			<permits rdf:resource="http://web.resource.org/cc/DerivativeWorks"/>
		</License>
	</rdf:RDF>
	-->
			</a>
		</div>
					<script type="text/javascript">
				if (/MSIE [0-6]\./.test(navigator.userAgent)) {
					for (var i = 0; i <1; i++) {
						var el = document.getElementById('ccl-icon-29-' + i);
						el.style.filter = 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src="' + el.src + '",sizingMethod="image")';
						el.src = '//i1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/static/admin/form/s.gif';
					}
				}
			</script>
			<div style="width:31px;float:left;"><a href="/toolbar/popup/abuseReport/?entryId=29" onclick="window.open(this.href, 'tistoryThisBlogPopup', 'width=550, height=510, toolbar=no, menubar=no, status=no, scrollbars=no'); return false;"><img style="border:0" src="//t1.daumcdn.net/tistory_admin/static/ico/ico_spam_report.png" alt="신고"></a></div></div><div class="another_category another_category_color_gray">
<h4>'<a href="/category/텐서플로우">텐서플로우</a>' 카테고리의 다른 글</h4>
<table>
<tr>
<th>
<a href="http://pythonkim.tistory.com/65" >[텐서플로우 정리] 04. Slicing &amp; Joining</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.08.15</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/64" >[텐서플로우 정리] 03. 관계 연산, 논리 연산</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.08.15</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/63" >[텐서플로우 정리] 02. 산술 연산</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.08.15</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/62" >[텐서플로우 정리] 01. 텐서플로우 화면 출력 함수</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.08.15</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/39" >텐서보드 사용법</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.08.02</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/29"  class ="current" >윈도우에서 텐서플로우 사용하기</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.30</td>
</tr>
</table></div>
						</div>

						<!-- 글 목록 하단의 프로필. 이미지와 간략한 소개 나오는 곳 -->
						<!-- 프로필 아래에 "받은 트랙백이 없고, 댓글이 없습니다." <div class="actionTrail"> -->
						
					</div> 					<!-- end of entry -->
				

			<!-- 하단 목록 번호 1 2 3 .. 9 10 <s_paging> -->
			</div>
			
			<div class="col-md-3">
				<!-- 기본 사이드바 -->
				<div class="sidebar">
				
					<!-- 오른쪽 사이드바의 공지사항 모듈. 없앨려면, s_sidebar_element 안쪽을 주석으로 막아야 한다. b 태그 추가했다 -->
						
							<div id="notice" class="widget">
								<h3><i class="fa fa-bullhorn"></i>공지사항</h3>
								<ul class="fa-ul">
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/77"><b>파이썬 동영상</b></a> </li>
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/76"><b>머신러닝 동영상</b></a> </li>
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/25"><b>머신러닝 목차</b></a> </li>
									
								</ul>
							</div>
						
					
					<!-- 오른쪽 사이드바의 카테고리 모듈. 없앨려면, s_sidebar_element 안쪽을 주석으로 막아야 한다. -->
						<div id="category" class="widget">
							<h3><i class="fa fa-folder"></i>카테고리</h3>
							<ul class="tt_category">
	<li class="">
		<a class="link_tit" href="/category">
			분류 전체보기							<span class="c_cnt">(70)</span>
			
					</a>

				<ul class="category_list">
							<li class="">
					<a class="link_item" href="/category/프로필">
						프로필													<span class="c_cnt">(0)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/머신러닝">
						머신러닝													<span class="c_cnt">(3)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/머신러닝_김성훈교수님">
						머신러닝_김성훈교수님													<span class="c_cnt">(45)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/텐서플로우">
						텐서플로우													<span class="c_cnt">(12)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/이것저것">
						이것저것													<span class="c_cnt">(10)</span>
						
											</a>

					
				</li>
					</ul>
			</li>
</ul>

						</div>
					
						<div class="author alert alert-success">
							<img src="http://cfile4.uf.tistory.com/image/211AB7495706515D201F0D" alt="블로그 이미지" 
									 class="img-responsive img-circle text-center" width="50%">
							<p><span class="text label label-primary"></span></p>
							<p>얼떨결에 붙인 이름 파이썬_킴</p>
						</div>
					
				</div>
			</div>
		</div>
	</div>
</div>
<!--	
<div id="footer">
	<div class="container">
		<div class="row">
				<div class="copyright">
					<p class="text-center">Copyright 2016 파이썬_킴. All Rights Reserved.<br/>
				</div>
		</div>
	</div>
</div>
-->


<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
<!-- Include all compiled plugins (below), or include individual files as needed -->
<script src="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/bootstrap.min.js"></script>
<script>
$(window).scroll(function() {
  if ($(document).scrollTop() > 50) {
    $('nav').addClass('shrink');
  } else {
    $('nav').removeClass('shrink');
  }
});
</script>
<script id="DragSearchJs" type="text/javascript" src="http://s1.daumcdn.net/img.search/front/js/searchDragSelection.js?nil_ch=tistory" charset="euc-kr"></script>
<script>
$("body").bind('copy', function (e) {
    if (typeof window.getSelection == "undefined") {//IE8 or earlier...
        event.preventDefault();

        var pagelink = '\n\n 출처: ' + decodeURI(document.location.href),
            copytext =  window.getSelection() + pagelink;

        if (window.clipboardData) {
            window.clipboardData.setData('Text', copytext);
        }
        return;
    }
    var body_element = document.getElementsByTagName('body')[0];
    var selection = window.getSelection();

    //if the selection is short let's not annoy our users
    if (("" + selection).length < 30) return;

    //create a div outside of the visible area
    var newdiv = document.createElement('div');
    newdiv.style.position = 'absolute';
    newdiv.style.left = '-99999px';
    body_element.appendChild(newdiv);
    newdiv.appendChild(selection.getRangeAt(0).cloneContents());

    //we need a <pre> tag workaround
    //otherwise the text inside "pre" loses all the line breaks!
    if (selection.getRangeAt(0).commonAncestorContainer.nodeName == "PRE") {
        newdiv.innerHTML = "<pre>" + newdiv.innerHTML + "</pre>";
    }

    newdiv.innerHTML += "<br /><br />출처: <a href='"
        + document.location.href + "'>"
        + decodeURI(document.location.href) + "</a> [파이쿵]";

    selection.selectAllChildren(newdiv);
    window.setTimeout(function () { body_element.removeChild(newdiv); }, 200);
});
</script><script> if (!window.jQuery) document.write("<script src=\"http://t1.daumcdn.net/tistory_admin/lib/jquery-1.12.4.min.js\"><\/script>") </script>
	<script src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/lightbox/assets/js/lightbox.min.js"></script>
	<script>
	    lightbox.option({
			"fadeDuration": 200,
		    "resizeDuration": 200,
		    "wrapAround": false,
			"albumLabel": "%1 / %2",
			"fitImagesInViewport":true ,
			"stopEvent": false
	    })
	</script><script type="text/javascript">
var _tiq = 'undefined' !== typeof _tiq ? _tiq : []; // Global Variables
_tiq.push(["__setParam", "title", "파이쿵 :: 윈도우에서 텐서플로우 사용하기"]);
_tiq.push(["__setParam", "svcdomain", "user.tistory.com"]);
_tiq.push(["__setParam", "category", ""]);
_tiq.push(["__setParam", "articleno", "29"]);
_tiq.push(["__setParam", "plink", "http://pythonkim.tistory.com/29"]);
_tiq.push(["__setParam", "date", "2016-07-30 14:40:33"]);
_tiq.push(["__setParam", "author", "pythonkim"]);
_tiq.push(["__setParam", "length", "18537"]);
_tiq.push(["__setParam", "isauthor", "N"]);
_tiq.push(["__setParam", "ishidden", "1"]);
_tiq.push(["__setParam", "comments", "0"]);
_tiq.push(["__setParam", "param1", "0"]);
_tiq.push(["__setParam", "param2", "e"]);
_tiq.push(["__setParam", "param3", ""]);
_tiq.push(["__setParam", "like_ex", "{'serviceId': 'tistory', 'uniqueId': '2072317_29', 'serviceCategories': '404,blogId_2072317'}"]);
_tiq.push(["__trackPageview"]);
(function(d) {
	var se = d.createElement('script'); se.type = 'text/javascript'; se.async = true;
	se.src = location.protocol + '//m2.daumcdn.net/tiara/js/td.min.js';
	var s = d.getElementsByTagName('head')[0]; s.appendChild(se);
})(document);
</script>
<script type="text/javascript">
var __TiaraObj = __TiaraObj || {}; if ('undefined' === typeof __TiaraObj.startTime) { __TiaraObj.startTime = new Date(); }
var addEvent = function (evt, fn) { window.addEventListener ? window.addEventListener(evt, fn, false) : window.attachEvent('on' + evt, fn); };
var ua = navigator.userAgent.toLowerCase(); var isIOS = /iP[ao]d|iPhone/i.test(ua); var contentStat = function() {
_tiq.push(['__content', 't_content', {
"c_id":"2072317_29", 
"c_title":"파이쿵 :: 윈도우에서 텐서플로우 사용하기", 
"type":"article", 
"author":"사과쿵", 
"author_id":"1415031", 
"cp":"pythonkim", 
"cp_id":"2072317", 
"regdata":"2016-07-30 14:40:33", 
"plink":"http://pythonkim.tistory.com/29", 
"media":"pcweb", 
"comment_cnt":0, 
"duration": (new Date()).getTime() - __TiaraObj.startTime.getTime()
}]); };
addEvent(isIOS ? "pagehide" : "beforeunload", contentStat);
</script>
<script type="text/javascript">window.roosevelt_params_queue = window.roosevelt_params_queue || []; window.roosevelt_params_queue.push({channel_id: "dk", channel_label: "tistory"});</script>
<script type="text/javascript" src="//adimg.daumcdn.net/rt/dk_bt/roosevelt_dk_bt.js" async></script><script type="text/javascript">if(window.console!=undefined){setTimeout(console.log.bind(console,"%cTISTORY","font:8em Arial;color:#EC6521;font-weight:bold"),0);setTimeout(console.log.bind(console,"%c  나를 표현하는 블로그","font:2em sans-serif;color:#333;"),0);}</script>		<div id="tistorytoolbarid"
		     style="position:absolute;height:20px;top:4px;right:0px;background-color:transparent;background-image:none;z-index:11;">
			<div class="tistorytoolbar tt_menubar_login">
				<div
					class="tt_menubar_whiteBar">
					<div id="ttMenubarInnerWrap" class="tt_menubar_inner">
						<div class="tt_menubar_bg_toolbar"></div>
						<h2 style="display:none;">티스토리 툴바</h2>
						<div class="tt_menubar_mainmenu"><a
								class="tt_menubar_link_tit tt_menubar_link_tit_daum tt_menubar_link_tit_eng"
								href="http://www.daum.net/?nil_ref=tistory"
								target="_blank">Daum</a></div>
						<div class="tt_menubar_bg_bar"></div>
						<div class="tt_menubar_mainmenu"><a class="tt_menubar_link_tit tt_menubar_link_tit_eng"
						                                    href="http://www.tistory.com">Tistory</a>
						</div>
						<div class="tt_menubar_bg_bar"></div>
						<div class="tt_menubar_logout"><a class="tt_menubar_link_tit"
														  href="https://www.tistory.com/auth/login">로그인</a>
						</div>
					</div>
				</div>
			</div>
		</div>
		</body>
</html>
