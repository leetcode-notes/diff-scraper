<!doctype html>
<html lang="ko">

<head>

<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
<link rel="alternate" type="application/rss+xml" title="파이쿵" href="http://pythonkim.tistory.com/rss" />
<link href="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css">
<link href="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/style.css?_T_=1470399111" rel="stylesheet">
<link rel="shortcut icon" href="/favicon.ico" />
<title>파이쿵 :: 16. TensorFlow로 Softmax Classification의 구현하기 (lab 06)</title>

<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
<!--[if lt IE 9]>
  <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
  <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
<![endif]-->
		
<!-- 구글 애널리틱스 -->
<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-76456208-1', 'auto');
  ga('send', 'pageview');
</script>
	

<style type="text/css">
		#daumSearchBox {
			height: 21px;
			background-image : url(http://i1.daumcdn.net/imgsrc.search/search_all/show/tistory/plugin/bg_search2_2.gif);
			margin: 5px auto ;
			padding: 0;
		}
		#daumSearchBox input {
			background: none;
			margin : 0;
			padding : 0;
			border : 0;
		}
		#daumSearchBox #daumLogo {
			width: 34px;
			height: 21px;
			float: left;
			margin-right: 5px;
			background-image : url(http://i1.daumcdn.net/img-media/tistory/img/bg_search1_2_2010ci.gif);
		}
		#daumSearchBox #show_q {
			background-color: transparent;
			border: none;
			font: 12px Gulim, Sans-serif;
			color: #555;
			margin-top: 4px;
			margin-right: 15px;
			float: left;
		}

		#daumSearchBox #show_btn {
			background-image : url(http://i1.daumcdn.net/imgsrc.search/search_all/show/tistory/plugin/bt_search_2.gif);
			width: 37px;
			height: 21px;
			float: left;
			margin:0;
			cursor:pointer;
			text-indent:-1000em;
		}
	</style><link rel="stylesheet" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/lightbox/assets/css/lightbox.min.css" />
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/TistoryProfileLayer/style.css" />
<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/TistoryProfileLayer/profile.js"></script>
	<style type="text/css">
		.another_category { border: 1px solid #E5E5E5; padding: 10px 10px 5px; margin:10px 0; clear: both; }
		.another_category h4 { font-size: 12px !important; margin: 0 !important; border-bottom: 1px solid #E5E5E5 !important; padding: 2px 0 6px !important; }
		.another_category h4 a { font-weight: bold !important; }
		.another_category table { table-layout: fixed; border-collapse: collapse; width: 100% !important; margin-top: 10px !important; }
		* html .another_category table { width: auto !important; }
		*:first-child+html .another_category table { width: auto !important; }
		.another_category th, .another_category td { padding: 0 0 4px !important; }
		.another_category th { text-align: left; font-size: 12px !important; font-weight: normal;  word-break: break-all; overflow: hidden; line-height: 1.5; }
		.another_category td { text-align: right; width: 80px; font-size: 11px; }
		.another_category th a { font-weight: normal; text-decoration: none; border: none !important; }
		.another_category th a.current{ font-weight: bold; text-decoration: none !important; border-bottom: 1px solid !important; }
		.another_category th span { font-weight: normal; text-decoration: none; font: 10px Tahoma, Sans-serif; border: none !important; }

		.another_category_color_gray, .another_category_color_gray h4 { border-color: #E5E5E5 !important; }
		.another_category_color_gray * { color: #909090 !important; }
		.another_category_color_gray th a.current{border-color:#909090 !important;}
		.another_category_color_gray h4, .another_category_color_gray h4 a { color: #737373 !important; }


		.another_category_color_red, .another_category_color_red h4 { border-color: #F6D4D3 !important;  }
		.another_category_color_red * { color: #E86869 !important; }
		.another_category_color_red th a.current{border-color:#E86869 !important;}
		.another_category_color_red h4, .another_category_color_red h4 a { color: #ED0908 !important; }


		.another_category_color_green, .another_category_color_green h4 { border-color: #CCE7C8 !important; }
		.another_category_color_green * { color: #64C05B !important; }
		.another_category_color_green th a.current{border-color:#64C05B !important;}
		.another_category_color_green h4, .another_category_color_green h4 a { color: #3EA731 !important; }


		.another_category_color_blue, .another_category_color_blue h4 { border-color: #C8DAF2 !important; }
		.another_category_color_blue * { color: #477FD6 !important; }
		.another_category_color_blue th a.current{border-color:#477FD6 !important;}
		.another_category_color_blue h4, .another_category_color_blue h4 a { color: #1960CA !important; }


		.another_category_color_violet, .another_category_color_violet h4 { border-color: #E1CEEC !important;  }
		.another_category_color_violet * { color:#9D64C5 !important; }
		.another_category_color_violet th a.current{border-color:#9D64C5 !important;}
		.another_category_color_violet h4, .another_category_color_violet h4 a { color: #7E2CB5 !important; }
	</style>
<script type="text/javascript">
window.TistoryBlog = {
    url: "http://pythonkim.tistory.com",
	tistoryUrl: "http://pythonkim.tistory.com"
};
var servicePath = "";
var blogURL = "";
</script>
<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/script/_/base.js"></script>
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/style/dialog.css"/>
<link rel="stylesheet" type="text/css" href="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/style/menubar.css"/><style type="text/css">.tt_article_useless_p_margin p {padding-top:0 !important;padding-bottom:0 !important;margin-top:0 !important;margin-bottom:0 !important;}</style><meta name="referrer" content="always"><link rel="shortcut icon" href="http://i1.daumcdn.net/cfs.tistory/static/top/favicon_0630.ico"/><meta name="description" content="이번 글에서는 텐서플로우에서 제공하는 softmax 알고리듬과 이를 적용한 결과를 살펴본다. 아래는 동영상에서 나온 코드에 주석을 붙인 전체 소스코드이다.  import tensorflow as tf import numpy as np # softmax이기 때문에 y를 표현할 때, 벡터로 표현한다. # 1개의 값으로 표현한다고 할 때, 뭐라고 쓸지도 사실 애매하다. # 05train.txt # #x0 x1 x2 y[A B C] # 1 2 1 0 0 1 # C # 1 3 2 0 0 1 # 1 3 4 0 0 1 # 1 5 5 0..">

<!-- BEGIN OPENGRAPH -->
<link rel="canonical" href="http://pythonkim.tistory.com/21" /><meta property="og:type" content="article"><meta property="og:url" content="http://pythonkim.tistory.com/21" ><meta property="og:site_name" content="파이쿵" ><meta property="og:title" content="16. TensorFlow로 Softmax Classification의 구현하기 (lab 06)" ><meta name="by" content="사과쿵" ><meta property="og:description" content="이번 글에서는 텐서플로우에서 제공하는 softmax 알고리듬과 이를 적용한 결과를 살펴본다. 아래는 동영상에서 나온 코드에 주석을 붙인 전체 소스코드이다.  import tensorflow as tf import numpy as np # softmax이기 때문에 y를 표현할 때, 벡터로 표현한다. # 1개의 값으로 표현한다고 할 때, 뭐라고 쓸지도 사실 애매하다. # 05train.txt # #x0 x1 x2 y[A B C] # 1 2 1 0 0 1 # C # 1 3 2 0 0 1 # 1 3 4 0 0 1 # 1 5 5 0.." ><meta property="og:image" content="http://cfile25.uf.tistory.com/image/236567375798199F328910" ><meta property="article:section" content="과학" >
<!-- END OPENGRAPH -->



<!-- BEGIN TWITTERCARD -->
<meta name="twitter:card" content="summary_large_image"><meta name="twitter:site" content="@TISTORY"><meta name="twitter:title" content="16. TensorFlow로 Softmax Classification의 구현하기 (lab 06)" ><meta name="twitter:description" content="이번 글에서는 텐서플로우에서 제공하는 softmax 알고리듬과 이를 적용한 결과를 살펴본다. 아래는 동영상에서 나온 코드에 주석을 붙인 전체 소스코드이다.  import tensorflow as tf import numpy as np # softmax이기 때문에 y를 표현할 때, 벡터로 표현한다. # 1개의 값으로 표현한다고 할 때, 뭐라고 쓸지도 사실 애매하다. # 05train.txt # #x0 x1 x2 y[A B C] # 1 2 1 0 0 1 # C # 1 3 2 0 0 1 # 1 3 4 0 0 1 # 1 5 5 0.." ><meta property="twitter:image" content="http://cfile25.uf.tistory.com/image/236567375798199F328910" >
<!-- END TWITTERCARD -->



<!-- BEGIN DAUMAPP -->
<meta property="dg:plink" content="http://pythonkim.tistory.com/21" ><meta name="plink" content="http://pythonkim.tistory.com/21" ><meta name="title" content="16. TensorFlow로 Softmax Classification의 구현하기 (lab 06)" ><meta name="article:media_name" content="파이쿵" ><meta property="article:mobile_url" content="http://pythonkim.tistory.com/m/21" ><meta property="article:pc_url" content="http://pythonkim.tistory.com/21" ><meta property="article:mobile_view_url" content="http://pythonkim.tistory.com/m/21" ><meta property="article:pc_view_url" content="http://pythonkim.tistory.com/21" ><meta property="article:pc_service_home" content="http://www.tistory.com" ><meta property="article:mobile_service_home" content="http://www.tistory.com/m" ><meta property="article:txid" content="2072317_21" /><meta property="article:published_time" content="2016-07-27T11:48:15+09:00" ><meta property="og:regDate" content="20160727105037" ><meta property="article:modified_time" content="2017-01-18T00:36:29+09:00" >
<!-- END DAUMAPP -->



<!-- BEGIN STRUCTURED_DATA -->
<script type="application/ld+json">{"@context":"http://schema.org", "@type":"BlogPosting","mainEntityOfPage":{"@id": "http://pythonkim.tistory.com/21"},"url":"http://pythonkim.tistory.com/21","headline":"16. TensorFlow로 Softmax Classification의 구현하기 (lab 06)","description":"이번 글에서는 텐서플로우에서 제공하는 softmax 알고리듬과 이를 적용한 결과를 살펴본다. 아래는 동영상에서 나온 코드에 주석을 붙인 전체 소스코드이다.  import tensorflow as tf import numpy as np # softmax이기 때문에 y를 표현할 때, 벡터로 표현한다. # 1개의 값으로 표현한다고 할 때, 뭐라고 쓸지도 사실 애매하다. # 05train.txt # #x0 x1 x2 y[A B C] # 1 2 1 0 0 1 # C # 1 3 2 0 0 1 # 1 3 4 0 0 1 # 1 5 5 0..","author":{"@type":"Person","name":"사과쿵"},"image":{"@type":"ImageObject","url":"http://cfile25.uf.tistory.com/image/236567375798199F328910","width":"800px","height":"800px"},"datePublished":"20160727T11:48:15+09:00","dateModified":"20170118T00:36:29+09:00","publisher":{"@type":"Organization","name":"TISTORY","logo":{"@type":"ImageObject","url":"https://t1.daumcdn.net/cssjs/icon/557567EA016E200001","width":"800px","height":"800px"}}}</script>
<!-- END STRUCTURED_DATA -->

<link rel="apple-touch-icon" href="//i1.daumcdn.net/thumb/C180x180/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="76x76" href="//i1.daumcdn.net/thumb/C76x76/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="120x120" href="//i1.daumcdn.net/thumb/C120x120/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D">
<link rel="apple-touch-icon" sizes="152x152" href="//i1.daumcdn.net/thumb/C152x152/?fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F211AB7495706515D201F0D"></head>

<body>

<script type="text/javascript">
	T.config = {"TOP_SSL_URL":"https:\/\/www.tistory.com","PREVIEW":false,"ROLE":"guest","PREV_PAGE":"\/23","NEXT_PAGE":"\/20","BLOG":{"isDormancy":false,"title":"\ud30c\uc774\ucff5"},"NEED_COMMENT_LOGIN":false,"COMMENT_LOGIN_CONFIRM_MESSAGE":"","LOGIN_URL":"https:\/\/www.tistory.com\/auth\/login\/?redirectUrl=http%3A%2F%2Fpythonkim.tistory.com%2F21","DEFAULT_URL":"http:\/\/pythonkim.tistory.com","USER":{"name":null,"homepage":null}};
</script>

<script type="text/javascript" src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/script/blog/common.js"></script>
<div style="margin:0; padding:0; border:none; background:none; float:none; clear:none; z-index:0"></div>


<div id="header">
	<div class="container-fluid">
		<div class="row">
			<div class="col-md-12">
				<!-- Wrapper for slides 가로세로 비율(4:1)-->
				<div id="carousel" class="carousel slide" data-ride="carousel">
					<div class="centered carousel-inner" role="listbox">
						<div class="item active">
							<img src="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/slider_01.png" width="100%" alt="Carousel 01">
							<div class="carousel-caption">
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<!-- header close -->

<div id="content">					<!-- 슬라이드와 본문 사이의 여백 -->
	<div class="container">
		<div class="row">				<!-- 본문 수평 마진 결정 -->
			<div class="col-md-9">
				

				

				
					<div class="entry">
						<div class="titleWrap jumbotron">
							<!-- 현재 보여지는 글의 제목 -->
							<h2>16. TensorFlow로 Softmax Classification의 구현하기 (lab 06)</h2>
							<!-- 현재 보여지는 글 제목의 아래에 있는 레이블 박스 2개 -->
							<!--<span class="category label label-primary">머신러닝_김성훈교수님</span> -->
							<!--<span class="date label label-info">2016.07.27 11:48</span> -->
						</div>
						
						<!-- 현재 보여지는 글의 본문과 본문 아래 글 목록까지 함께. _article_rep_desc_로 동시 처리 -->
						<div class="article">
							<p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:593px;;height:auto;max-width:100%"><img src="http://cfile8.uf.tistory.com/image/253AAA3C579E33181C3741" style="max-width:100%;height:auto" width="593" height="274" filename="lab_06_00.png" filemime="image/jpeg"/></span></p>
<p>이번 글에서는 텐서플로우에서 제공하는 softmax 알고리듬과 이를 적용한 결과를 살펴본다.</p>
<p><br /></p>
<p>아래는 동영상에서 나온 코드에 주석을 붙인 전체 소스코드이다. <span class="imageblock" style="display:inline-block;;height:auto;max-width:100%"><a href="http://pythonkim.tistory.com/attachment/cfile10.uf@216CE93A57CE4C5413827A.txt"><img src="//i1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/image/extension/txt.gif" alt="" style="vertical-align: middle;" /> 05train.txt</a></span></p>
<pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color:#66d9ef;font-style:italic;">import </span>tensorflow <span style="color:#66d9ef;font-style:italic;">as </span>tf<br /><span style="color:#66d9ef;font-style:italic;">import </span>numpy <span style="color:#66d9ef;font-style:italic;">as </span>np<br /><br /><span style="color:#75715e;"># softmax이기 때문에 y를 표현할 때, 벡터로 표현한다.<br /></span><span style="color:#75715e;"># 1개의 값으로 표현한다고 할 때, 뭐라고 쓸지도 사실 애매하다.<br /></span><span style="color:#75715e;"><br /></span><span style="color:#75715e;"># 05train.txt<br /></span><span style="color:#75715e;"># #x0 x1 x2 y[A   B   C]<br /></span><span style="color:#75715e;"># 1   2   1   0   0   1     # C<br /></span><span style="color:#75715e;"># 1   3   2   0   0   1<br /></span><span style="color:#75715e;"># 1   3   4   0   0   1<br /></span><span style="color:#75715e;"># 1   5   5   0   1   0     # B<br /></span><span style="color:#75715e;"># 1   7   5   0   1   0<br /></span><span style="color:#75715e;"># 1   2   5   0   1   0<br /></span><span style="color:#75715e;"># 1   6   6   1   0   0     # A<br /></span><span style="color:#75715e;"># 1   7   7   1   0   0<br /></span><span style="color:#75715e;"><br /></span>xy <span style="color:#f92672;">= </span>np.loadtxt(<span style="color:#008080;font-weight:bold;">'05train.txt'</span>, <span style="color:#660099;">unpack</span><span style="color:#f92672;">=</span><span style="color:#66d9ef;font-style:italic;">True</span>, <span style="color:#660099;">dtype</span><span style="color:#f92672;">=</span><span style="color:#008080;font-weight:bold;">'float32'</span>)<br /><br /><span style="color:#75715e;"># xy는 6x8. xy[:3]은 3x8. 행렬 곱셈을 하기 위해 미리 transpose.<br /></span>x_data <span style="color:#f92672;">= </span>np.transpose(xy[<span style="color:#f92672;">:</span><span style="color:#ae81ff;">3</span>])<br />y_data <span style="color:#f92672;">= </span>np.transpose(xy[<span style="color:#ae81ff;">3</span><span style="color:#f92672;">:</span>])<br /><br /><span style="color:#66d9ef;">print</span>(<span style="color:#008080;font-weight:bold;">'x_data :'</span>, x_data.shape)     <span style="color:#75715e;"># x_data : (8, 3)<br /></span><span style="color:#66d9ef;">print</span>(<span style="color:#008080;font-weight:bold;">'y_data :'</span>, y_data.shape)     <span style="color:#75715e;"># y_data : (8, 3)<br /></span><span style="color:#75715e;"><br /></span>X <span style="color:#f92672;">= </span>tf.placeholder(<span style="color:#008080;font-weight:bold;">"float"</span>, [<span style="color:#66d9ef;font-style:italic;">None</span>, <span style="color:#ae81ff;">3</span>])  <span style="color:#75715e;"># x_data와 같은 크기의 열 가짐. 행 크기는 모름.<br /></span>Y <span style="color:#f92672;">= </span>tf.placeholder(<span style="color:#008080;font-weight:bold;">"float"</span>, [<span style="color:#66d9ef;font-style:italic;">None</span>, <span style="color:#ae81ff;">3</span>])  <span style="color: rgb(117, 113, 94); font-size: 9pt;"># tf.float32라고 써도 됨</span><br /><br />W <span style="color:#f92672;">= </span>tf.Variable(tf.zeros([<span style="color:#ae81ff;">3</span>, <span style="color:#ae81ff;">3</span>]))       <span style="color:#75715e;"># 3x3 행렬. 전체 0.<br /></span><span style="color:#75715e;"><br /></span><span style="color:#75715e;"># softmax 알고리듬 적용. X*W = (8x3) * (3x3) = (8x3)<br /></span>hypothesis <span style="color:#f92672;">= </span>tf.nn.softmax(tf.matmul(X, W))<br /><br /><span style="color:#75715e;"># cross-entropy cost 함수<br /></span>cost <span style="color:#f92672;">= </span>tf.reduce_mean(<span style="color:#f92672;">-</span>tf.reduce_sum(Y <span style="color:#f92672;">* </span>tf.log(hypothesis), <span style="color:#660099;">reduction_indices</span><span style="color:#f92672;">=</span><span style="color:#ae81ff;">1</span>))<br /><br />learning_rate <span style="color:#f92672;">= </span><span style="color:#ae81ff;">0.01<br /></span>train <span style="color:#f92672;">= </span>tf.train.GradientDescentOptimizer(learning_rate).minimize(cost)<br /><br />init <span style="color:#f92672;">= </span>tf.initialize_all_variables()<br /><br /><span style="color:#66d9ef;font-style:italic;">with </span>tf.Session() <span style="color:#66d9ef;font-style:italic;">as </span>sess<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">    </span>sess.run(init)<br /><br />    <span style="color:#66d9ef;font-style:italic;">for </span>step <span style="color:#66d9ef;font-style:italic;">in </span><span style="color:#66d9ef;">range</span>(<span style="color:#ae81ff;">2001</span>)<span style="color:#f92672;">:<br /></span><span style="color:#f92672;">        </span>sess.run(train, <span style="color:#660099;">feed_dict</span><span style="color:#f92672;">=</span>{X<span style="color:#f92672;">: </span>x_data, Y<span style="color:#f92672;">: </span>y_data})<br />        <span style="color:#66d9ef;font-style:italic;">if </span>step <span style="color:#f92672;">% </span><span style="color:#ae81ff;">200 </span><span style="color:#f92672;">== </span><span style="color:#ae81ff;">0</span><span style="color:#f92672;">:<br /></span><span style="color:#f92672;">            </span>feed <span style="color:#f92672;">= </span>{X<span style="color:#f92672;">: </span>x_data, Y<span style="color:#f92672;">: </span>y_data}<br />            <span style="color:#66d9ef;">print</span>(<span style="color:#008080;font-weight:bold;">'{:4} {:8.6}'</span>.format(step, sess.run(cost, <span style="color:#660099;">feed_dict</span><span style="color:#f92672;">=</span>feed)), <span style="color:#f92672;">*</span>sess.run(W))<br /><br />    <span style="color:#66d9ef;">print</span>(<span style="color:#008080;font-weight:bold;">'-------------------------------'</span>)<br /><br />    <span style="color:#75715e;"># 1은 bias로 항상 1. (11, 7)은 x 입력<br /></span><span style="color:#75715e;">    </span>a <span style="color:#f92672;">= </span>sess.run(hypothesis, <span style="color:#660099;">feed_dict</span><span style="color:#f92672;">=</span>{X<span style="color:#f92672;">: </span>[[<span style="color:#ae81ff;">1</span>, <span style="color:#ae81ff;">11</span>, <span style="color:#ae81ff;">7</span>]]})<br />    <span style="color:#66d9ef;">print</span>(<span style="color:#008080;font-weight:bold;">"a :"</span>, a, sess.run(tf.argmax(a, <span style="color:#ae81ff;">1</span>)))         <span style="color:#75715e;"># a : [[ 0.68849683  0.26731509  0.04418806]] [0]<br /></span><span style="color:#75715e;"><br /></span><span style="color:#75715e;">    </span>b <span style="color:#f92672;">= </span>sess.run(hypothesis, <span style="color:#660099;">feed_dict</span><span style="color:#f92672;">=</span>{X<span style="color:#f92672;">: </span>[[<span style="color:#ae81ff;">1</span>, <span style="color:#ae81ff;">3</span>, <span style="color:#ae81ff;">4</span>]]})<br />    <span style="color:#66d9ef;">print</span>(<span style="color:#008080;font-weight:bold;">"b :"</span>, b, sess.run(tf.argmax(b, <span style="color:#ae81ff;">1</span>)))         <span style="color:#75715e;"># b : [[ 0.2432227   0.44183081  0.3149465 ]] [1]<br /></span><span style="color:#75715e;"><br /></span><span style="color:#75715e;">    </span>c <span style="color:#f92672;">= </span>sess.run(hypothesis, <span style="color:#660099;">feed_dict</span><span style="color:#f92672;">=</span>{X<span style="color:#f92672;">: </span>[[<span style="color:#ae81ff;">1</span>, <span style="color:#ae81ff;">1</span>, <span style="color:#ae81ff;">0</span>]]})<br />    <span style="color:#66d9ef;">print</span>(<span style="color:#008080;font-weight:bold;">"c :"</span>, c, sess.run(tf.argmax(c, <span style="color:#ae81ff;">1</span>)))         <span style="color:#75715e;"># c : [[ 0.02974809  0.08208466  0.8881672 ]] [2]<br /></span><span style="color:#75715e;"><br /></span><span style="color:#75715e;">    # 한번에 여러 개 판단 가능<br /></span><span style="color:#75715e;">    </span>d <span style="color:#f92672;">= </span>sess.run(hypothesis, <span style="color:#660099;">feed_dict</span><span style="color:#f92672;">=</span>{X<span style="color:#f92672;">: </span>[[<span style="color:#ae81ff;">1</span>, <span style="color:#ae81ff;">11</span>, <span style="color:#ae81ff;">7</span>], [<span style="color:#ae81ff;">1</span>, <span style="color:#ae81ff;">3</span>, <span style="color:#ae81ff;">4</span>], [<span style="color:#ae81ff;">1</span>, <span style="color:#ae81ff;">1</span>, <span style="color:#ae81ff;">0</span>]]})<br />    <span style="color:#66d9ef;">print</span>(<span style="color:#008080;font-weight:bold;">"d : "</span>, <span style="color:#f92672;">*</span>d, <span style="color:#660099;">end</span><span style="color:#f92672;">=</span><span style="color:#008080;font-weight:bold;">' '</span>)<br />    <span style="color:#66d9ef;">print</span>(sess.run(tf.argmax(d, <span style="color:#ae81ff;">1</span>)))                   <span style="color:#75715e;"># d :  ...  [0 1 2]</span><span style="color:#75715e;"><br /></span></pre>
<pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color: rgb(255, 255, 255);">[출력 결과]
</span>...<br /><span style="color: rgb(255, 255, 255);">1200 0.780959 </span><span style="color: rgb(255, 255, 255);">[</span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">1.06231141 </span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">0.26727256  1.32958329</span><span style="color: rgb(255, 255, 255);">] [ </span><span style="color: rgb(255, 255, 255);">0.06808002 </span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">0.11823837  0.05015869</span><span style="color: rgb(255, 255, 255);">] [ </span><span style="color: rgb(255, 255, 255);">0.17550457  0.23514736 </span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">0.41065109</span><span style="color: rgb(255, 255, 255);">]</span><br /><span style="color: rgb(255, 255, 255);">1400 0.756943 </span><span style="color: rgb(255, 255, 255);">[</span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">1.19854832 </span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">0.29670811  1.49525583</span><span style="color: rgb(255, 255, 255);">] [ </span><span style="color: rgb(255, 255, 255);">0.0759144  </span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">0.11214781  0.0362338 </span><span style="color: rgb(255, 255, 255);">] [ </span><span style="color: rgb(255, 255, 255);">0.19498998  0.23733102 </span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">0.43232021</span><span style="color: rgb(255, 255, 255);">]</span><br /><span style="color: rgb(255, 255, 255);">1600 0.735893 </span><span style="color: rgb(255, 255, 255);">[</span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">1.32743549 </span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">0.32218221  1.64961684</span><span style="color: rgb(255, 255, 255);">] [ </span><span style="color: rgb(255, 255, 255);">0.08333751 </span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">0.10558002  0.02224298</span><span style="color: rgb(255, 255, 255);">] [ </span><span style="color: rgb(255, 255, 255);">0.21336637  0.23823628 </span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">0.45160189</span><span style="color: rgb(255, 255, 255);">]</span><br /><span style="color: rgb(255, 255, 255);">1800 0.717269 </span><span style="color: rgb(255, 255, 255);">[</span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">1.44994986 </span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">0.34407791  1.79402602</span><span style="color: rgb(255, 255, 255);">] [ </span><span style="color: rgb(255, 255, 255);">0.09020084 </span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">0.09902247  0.00882212</span><span style="color: rgb(255, 255, 255);">] [ </span><span style="color: rgb(255, 255, 255);">0.23099622  0.2384187  </span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">0.46941417</span><span style="color: rgb(255, 255, 255);">]</span><br /><span style="color: rgb(255, 255, 255);">2000 0.700649 </span><span style="color: rgb(255, 255, 255);">[</span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">1.56689751 </span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">0.36275655  1.92965221</span><span style="color: rgb(255, 255, 255);">] [ </span><span style="color: rgb(255, 255, 255);">0.09643653 </span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">0.09271803 </span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">0.00371794</span><span style="color: rgb(255, 255, 255);">] [ </span><span style="color: rgb(255, 255, 255);">0.248116    0.23818409 </span><span style="color: rgb(255, 255, 255);">-</span><span style="color: rgb(255, 255, 255);">0.48629922</span><span style="color: rgb(255, 255, 255);">]</span><br /><span style="color:#f92672;"><span style="color: rgb(255, 255, 255);">-------------------------------</span><br /></span><span style="color: rgb(255, 255, 255);">a </span><span style="color: rgb(255, 255, 255);">: </span><span style="color: rgb(255, 255, 255);">[[ </span><span style="color: rgb(255, 255, 255);">0.68849683  0.26731509  0.04418806</span><span style="color: rgb(255, 255, 255);">]] [</span><span style="color: rgb(255, 255, 255);">0</span><span style="color: rgb(255, 255, 255);">]</span><br /><span style="color: rgb(255, 255, 255);">b </span><span style="color: rgb(255, 255, 255);">: </span><span style="color: rgb(255, 255, 255);">[[ </span><span style="color: rgb(255, 255, 255);">0.2432227   0.44183081  0.3149465 </span><span style="color: rgb(255, 255, 255);">]] [</span><span style="color: rgb(255, 255, 255);">1</span><span style="color: rgb(255, 255, 255);">]</span><br /><span style="color: rgb(255, 255, 255);">c </span><span style="color: rgb(255, 255, 255);">: </span><span style="color: rgb(255, 255, 255);">[[ </span><span style="color: rgb(255, 255, 255);">0.02974809  0.08208466  0.8881672 </span><span style="color: rgb(255, 255, 255);">]] [</span><span style="color: rgb(255, 255, 255);">2</span><span style="color: rgb(255, 255, 255);">]</span><br /><span style="color: rgb(255, 255, 255);">d </span><span style="color: rgb(255, 255, 255);">:  </span><span style="color: rgb(255, 255, 255);">[ </span><span style="color: rgb(255, 255, 255);">0.68849683  0.26731509  0.04418806</span><span style="color: rgb(255, 255, 255);">] [ </span><span style="color: rgb(255, 255, 255);">0.2432227   0.44183081  0.3149465 </span><span style="color: rgb(255, 255, 255);">] [ </span><span style="color: rgb(255, 255, 255);">0.02974809  0.08208466  0.8881672 </span><span style="color: rgb(255, 255, 255);">] [</span><span style="color: rgb(255, 255, 255);">0 1 2</span><span style="color: rgb(255, 255, 255);">]</span><br /></pre>
<p>핵심적인 부분만 설명하고, 나머지는 주석으로 대신한다. 이전 글들의 소스코드에서 설명된 내용 또한 생략한다. 출력 결과에서 W는 3행 3열이기 때문에 총 9개의 결과로 나타나고 있다. 많다고 생각할 수도 있지만, 실전에서는 수천 개의 weight을 다루게 되고, 지금처럼 출력할 생각은 하지 않게 된다. 몇 개가 됐든 가중치는 변경되어서 최저 cost를 찾아가야 한다.</p>
<p><br /></p>
<pre style="color: rgb(248, 248, 242); font-family: Menlo; font-size: 9pt; background-color: rgb(39, 40, 34);"><span style="color: rgb(117, 113, 94);"># xy는 6x8. xy[:3]은 3x8. 행렬 곱셈을 하기 위해 미리 transpose.<br /></span>x_data <span style="color: rgb(249, 38, 114);">= </span>np.transpose(xy[<span style="color: rgb(249, 38, 114);">:</span><span style="color: rgb(174, 129, 255);">3</span>])<br />y_data <span style="color: rgb(249, 38, 114);">= </span>np.transpose(xy[<span style="color: rgb(174, 129, 255);">3</span><span style="color: rgb(249, 38, 114);">:</span>])<br /></pre>
<p>loadtxt 함수는 파일을 읽을 때 행과 열을 바꿔서 읽어오기 때문에, 행렬 곱셈을 위해 먼저 transpose 시켰다. y_data에 들어가는 값이 1차원이 아니라 2차원이 됐다. y_data는 3번째부터 전체라고 표현했으니까, 6행 8열의 데이터에서 뒤쪽에 오는 3행 8열을 transpose 시켜서 8행 3열이 되었다.</p>
<p><br /></p>
<pre style="color: rgb(248, 248, 242); font-family: Menlo; font-size: 9pt; background-color: rgb(39, 40, 34);">X <span style="color: rgb(249, 38, 114);">= </span>tf.placeholder(<span style="color: rgb(0, 128, 128); font-weight: bold;">"float"</span>, [<span style="color: rgb(102, 217, 239); font-style: italic;">None</span>, <span style="color: rgb(174, 129, 255);">3</span>])  <span style="color: rgb(117, 113, 94);"># x_data와 같은 크기의 열 가짐. 행 크기는 모름.<br /></span>Y <span style="color: rgb(249, 38, 114);">= </span>tf.placeholder(<span style="color: rgb(0, 128, 128); font-weight: bold;">"float"</span>, [<span style="color: rgb(102, 217, 239); font-style: italic;">None</span>, <span style="color: rgb(174, 129, 255);">3</span>])  <span style="color: rgb(117, 113, 94); font-size: 9pt;"># tf.float32라고 써도 됨</span><br /><br />W <span style="color: rgb(249, 38, 114);">= </span>tf.Variable(tf.zeros([<span style="color: rgb(174, 129, 255);">3</span>, <span style="color: rgb(174, 129, 255);">3</span>]))       <span style="color: rgb(117, 113, 94);"># 3x3 행렬. 전체 0.<br /></span></pre>
<p>2차원 배열을 placeholder로 지정하는 문법으로 여기서 처음 나왔다. 앞에 오는 None은 행의 갯수를 알 수 없기 때문이고, 열의 갯수는 언제나 3이어야 한다. 행은 한두 개 없어도 될만큼 가볍지만, 열은 feature로 나타나는 핵심 요소라는 것을 기억하자. 설마 행이 8개라고 생각하는 것은.. 아니겠지? W는 binary classification이 3개 들어가야 하니까, 3행 3열로 표현했다.</p>
<p><b>만약에 feature가 하나 늘어난다면, 다시 말해 x_data가 8x3이 아니라 8x4가 된다면 W는 행이 증가할까, 열이 증가할까?</b></p>
<p>W에서 행은 binary classification을, 열은 feature 갯수를 의미한다. 4가지 중에서 골라야 한다면 행이 증가하고, x의 특징을 가리키는 열, 즉 feature가 추가됐다면 열이 증가한다.</p>
<p><br /></p>
<pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color:#75715e;"># softmax 알고리듬 적용. X*W = (8x3) * (3x3) = (8x3)<br /></span>hypothesis <span style="color:#f92672;">= </span>tf.nn.softmax(tf.matmul(X, W))<br /></pre>
<p>softmax 알고리듬이다. W와 X를 곱하는 게 아니라, X와 W를 곱하고 있다. X는 8행 3열, W는 3행 3열. 행렬 곱셈으로 손색이 없다. W와 X의 위치를 바꾸면 당연히 에러다. X의 각 행에는 x0(bias)와 x1, x2가 들어 있고, 이 값을 토대로 y를 예측해야 한다. 그러니 X의 행과 W의 열을 곱하는 것이 맞다.</p>
<p>x_data를 transpose 시키지 않고 읽어온 그대로 사용한다면 matmul(W, X)라고 해야 한다. W를 앞에 두는 것이 편하기 때문에 이게 좋아보일 수도 있다. 이럴 경우 W는 행으로 동작하고, X는 열로 동작하게 된다. 3행 3열 x 3행 8열의 행렬 곱셈이 되어서 결과는 3행 8열이 된다. 그런데, 결과를 추출할 때 불편하다. 값이 열 단위로 되어 있기 때문에 각각의 행에서 하나씩 가져와서 조합해야 판단이 가능해진다. 별건 아니지만, 이런 불편한 점 때문에 W와 X를 바꿔서 계산을 한다.</p>
<p>또 하나, W를 뒤에 곱할 때는 열 단위로 읽게 되는데, 지금은 앞에 나왔기 때문에 행 단위로 계산을 해야 한다. transpose할 필요까지는 없겠지만, 이 사실을 알고 처음 값을 줄 때 열 단위로 주어야 한다는 점은 이해해야 한다.</p>
<p><br /></p>
<pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color:#75715e;"># cross-entropy cost 함수<br /></span>cost <span style="color:#f92672;">= </span>tf.reduce_mean(<span style="color:#f92672;">-</span>tf.reduce_sum(Y <span style="color:#f92672;">* </span>tf.log(hypothesis), <span style="color:#660099;">reduction_indices</span><span style="color:#f92672;">=</span><span style="color:#ae81ff;">1</span>))<br /></pre>
<p>cross-entropy cost 함수의 텐서플로우 버전이다. log 함수를 호출해서 hypothesis를 처리하고 있다. hypothesis는 softmax를 거쳤으므로 0과 1 사이의 값들만 갖게 된다.</p>
<p>여기서 Y는 공식에서는 L(label)로 표현되었던 값으로 실제 y 값을 의미한다. 즉, L * log(S)를 처리하는 부분이 reduce_sum에 Y * tf.log(hypothesis)이다. 곱셈(*)은 행렬 곱셈이 아닌 element-wise 곱셈이다. 텐서플로우의 행렬 곱셈은 matmul 함수이다.</p>
<p><br /></p>
<p style="text-align: center; clear: none; float: none;"><span class="imageblock" style="display:inline-block;width:625px;;height:auto;max-width:100%"><img src="http://cfile25.uf.tistory.com/image/236567375798199F328910" style="max-width:100%;height:auto" width="625" height="270" filename="lec_06_18.png" filemime="image/jpeg"/></span></p>
<p>Y * tf.log(hypothesis) 결과는 행 단위로 더해야 한다. 그림에서 보면, 최종 cost를 계산하기 전에 행 단위로 결과를 더하고 있다. 이것을 가능하게 하는 옵션이 reduction_indices 매개변수다. 0을 전달하면 열 합계, 1을 전달하면 행 합계, 아무 것도 전달하지 않으면 전체 합계. 이렇게 행 단위로 더한 결과에 대해 전체 합계를 내서 평균을 구하기 위해 reduce_mean 함수가 사용됐다.</p>
<p><br /></p>
<pre style="background-color:#272822;color:#f8f8f2;font-family:'Menlo';font-size:9.0pt;"><span style="color:#75715e;"># 1은 bias로 항상 1. (11, 7)은 x 입력<br /></span>a <span style="color:#f92672;">= </span>sess.run(hypothesis, <span style="color:#660099;">feed_dict</span><span style="color:#f92672;">=</span>{X<span style="color:#f92672;">: </span>[[<span style="color:#ae81ff;">1</span>, <span style="color:#ae81ff;">11</span>, <span style="color:#ae81ff;">7</span>]]})<br /><span style="color:#66d9ef;">print</span>(<span style="color:#008080;font-weight:bold;">"a :"</span>, a, sess.run(tf.argmax(a, <span style="color:#ae81ff;">1</span>)))         <span style="color:#75715e;"># a : [[ 0.68849683  0.26731509  0.04418806]] [0]<br /></span></pre>
<p>학습한 결과를 토대로 학점을 예측하고 있다. 이 학생은 A를 맞았다고 나오는 것이 아니라 A를 가리키는 인덱스인 0을 반환하고 있다. argmax 함수는 one-hot encoding을 구현하는 텐서플로우 함수다.</p><div class="daum_like_wrapper"><iframe class="daum_like_button" id="daum_like_button_21" frameborder="0" scrolling="no" allowTransparency="true" src="http://pythonkim.tistory.com/like/?uid=2072317_21&sc=404%2CblogId_2072317&url=http%3A%2F%2Fpythonkim.tistory.com%2F21&published=1469587695" style="width:100%;height:44px;margin:10px auto"></iframe></div><div style="width:100%;margin-top:30px;clear:both;height:30px">		<div class="entry-ccl" style="float:right;margin-top:0;height:0">
			<a href="http://creativecommons.org/licenses/by/4.0/deed.ko" target="_blank" style="text-decoration: none">
				<img id="ccl-icon-21-0" class="entry-ccl-by" src="//i1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/static/admin/editor/ccl_black01.png"
				     onmouseover="tistoryCcl.show(this, 3)"
				     onmouseout="tistoryCcl.hide()" alt="저작자 표시" style="width:15px;height:15px"/>
								<!--
	<rdf:RDF xmlns="http://web.resource.org/cc/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
		<Work rdf:about="">
			<license rdf:resource="http://creativecommons.org/licenses/by-fr/2.0/kr/" />
		</Work>
		<License rdf:about="http://creativecommons.org/licenses/by-fr/">
			<permits rdf:resource="http://web.resource.org/cc/Reproduction"/>
			<permits rdf:resource="http://web.resource.org/cc/Distribution"/>
			<requires rdf:resource="http://web.resource.org/cc/Notice"/>
			<requires rdf:resource="http://web.resource.org/cc/Attribution"/>
			<permits rdf:resource="http://web.resource.org/cc/DerivativeWorks"/>
		</License>
	</rdf:RDF>
	-->
			</a>
		</div>
					<script type="text/javascript">
				if (/MSIE [0-6]\./.test(navigator.userAgent)) {
					for (var i = 0; i <1; i++) {
						var el = document.getElementById('ccl-icon-21-' + i);
						el.style.filter = 'progid:DXImageTransform.Microsoft.AlphaImageLoader(src="' + el.src + '",sizingMethod="image")';
						el.src = '//i1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/static/admin/form/s.gif';
					}
				}
			</script>
			<div style="width:31px;float:left;"><a href="/toolbar/popup/abuseReport/?entryId=21" onclick="window.open(this.href, 'tistoryThisBlogPopup', 'width=550, height=510, toolbar=no, menubar=no, status=no, scrollbars=no'); return false;"><img style="border:0" src="//t1.daumcdn.net/tistory_admin/static/ico/ico_spam_report.png" alt="신고"></a></div></div><div class="another_category another_category_color_gray">
<h4>'<a href="/category/머신러닝_김성훈교수님">머신러닝_김성훈교수님</a>' 카테고리의 다른 글</h4>
<table>
<tr>
<th>
<a href="http://pythonkim.tistory.com/24" >18. Training-Testing 데이타 셋 (lec 07-2)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.28</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/23" >17. 학습 rate, Overfitting, 그리고 일반화 (Regularization) (lec 07-1)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.28</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/21"  class ="current" >16. TensorFlow로 Softmax Classification의 구현하기 (lab 06)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.27</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/20" >15. Softmax classifier 의 cost함수 (lec 06-2)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.27</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/19" >14. Softmax Regression- 기본 개념 소개 (lec 06-1)</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.27</td>
</tr>
<tr>
<th>
<a href="http://pythonkim.tistory.com/18" >13. 파이썬으로 Logistic Regression 직접 구현</a>&nbsp;&nbsp;<span>(0)</span>
</th>
<td>
2016.07.27</td>
</tr>
</table></div>
						</div>

						<!-- 글 목록 하단의 프로필. 이미지와 간략한 소개 나오는 곳 -->
						<!-- 프로필 아래에 "받은 트랙백이 없고, 댓글이 없습니다." <div class="actionTrail"> -->
						
					</div> 					<!-- end of entry -->
				

			<!-- 하단 목록 번호 1 2 3 .. 9 10 <s_paging> -->
			</div>
			
			<div class="col-md-3">
				<!-- 기본 사이드바 -->
				<div class="sidebar">
				
					<!-- 오른쪽 사이드바의 공지사항 모듈. 없앨려면, s_sidebar_element 안쪽을 주석으로 막아야 한다. b 태그 추가했다 -->
						
							<div id="notice" class="widget">
								<h3><i class="fa fa-bullhorn"></i>공지사항</h3>
								<ul class="fa-ul">
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/77"><b>파이썬 동영상</b></a> </li>
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/76"><b>머신러닝 동영상</b></a> </li>
									
										<li><i class="fa-ul fa fa-chevron-right"></i>
											<a href="/notice/25"><b>머신러닝 목차</b></a> </li>
									
								</ul>
							</div>
						
					
					<!-- 오른쪽 사이드바의 카테고리 모듈. 없앨려면, s_sidebar_element 안쪽을 주석으로 막아야 한다. -->
						<div id="category" class="widget">
							<h3><i class="fa fa-folder"></i>카테고리</h3>
							<ul class="tt_category">
	<li class="">
		<a class="link_tit" href="/category">
			분류 전체보기							<span class="c_cnt">(70)</span>
			
					</a>

				<ul class="category_list">
							<li class="">
					<a class="link_item" href="/category/프로필">
						프로필													<span class="c_cnt">(0)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/머신러닝">
						머신러닝													<span class="c_cnt">(3)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/머신러닝_김성훈교수님">
						머신러닝_김성훈교수님													<span class="c_cnt">(45)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/텐서플로우">
						텐서플로우													<span class="c_cnt">(12)</span>
						
											</a>

					
				</li>
							<li class="">
					<a class="link_item" href="/category/이것저것">
						이것저것													<span class="c_cnt">(10)</span>
						
											</a>

					
				</li>
					</ul>
			</li>
</ul>

						</div>
					
						<div class="author alert alert-success">
							<img src="http://cfile4.uf.tistory.com/image/211AB7495706515D201F0D" alt="블로그 이미지" 
									 class="img-responsive img-circle text-center" width="50%">
							<p><span class="text label label-primary"></span></p>
							<p>얼떨결에 붙인 이름 파이썬_킴</p>
						</div>
					
				</div>
			</div>
		</div>
	</div>
</div>
<!--	
<div id="footer">
	<div class="container">
		<div class="row">
				<div class="copyright">
					<p class="text-center">Copyright 2016 파이썬_킴. All Rights Reserved.<br/>
				</div>
		</div>
	</div>
</div>
-->


<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>
<!-- Include all compiled plugins (below), or include individual files as needed -->
<script src="//s1.daumcdn.net/cfs.tistory/custom/blog/207/2072317/skin/images/bootstrap.min.js"></script>
<script>
$(window).scroll(function() {
  if ($(document).scrollTop() > 50) {
    $('nav').addClass('shrink');
  } else {
    $('nav').removeClass('shrink');
  }
});
</script>
<script id="DragSearchJs" type="text/javascript" src="http://s1.daumcdn.net/img.search/front/js/searchDragSelection.js?nil_ch=tistory" charset="euc-kr"></script>
<script>
$("body").bind('copy', function (e) {
    if (typeof window.getSelection == "undefined") {//IE8 or earlier...
        event.preventDefault();

        var pagelink = '\n\n 출처: ' + decodeURI(document.location.href),
            copytext =  window.getSelection() + pagelink;

        if (window.clipboardData) {
            window.clipboardData.setData('Text', copytext);
        }
        return;
    }
    var body_element = document.getElementsByTagName('body')[0];
    var selection = window.getSelection();

    //if the selection is short let's not annoy our users
    if (("" + selection).length < 30) return;

    //create a div outside of the visible area
    var newdiv = document.createElement('div');
    newdiv.style.position = 'absolute';
    newdiv.style.left = '-99999px';
    body_element.appendChild(newdiv);
    newdiv.appendChild(selection.getRangeAt(0).cloneContents());

    //we need a <pre> tag workaround
    //otherwise the text inside "pre" loses all the line breaks!
    if (selection.getRangeAt(0).commonAncestorContainer.nodeName == "PRE") {
        newdiv.innerHTML = "<pre>" + newdiv.innerHTML + "</pre>";
    }

    newdiv.innerHTML += "<br /><br />출처: <a href='"
        + document.location.href + "'>"
        + decodeURI(document.location.href) + "</a> [파이쿵]";

    selection.selectAllChildren(newdiv);
    window.setTimeout(function () { body_element.removeChild(newdiv); }, 200);
});
</script><script> if (!window.jQuery) document.write("<script src=\"http://t1.daumcdn.net/tistory_admin/lib/jquery-1.12.4.min.js\"><\/script>") </script>
	<script src="//s1.daumcdn.net/cfs.tistory/resource/0c59a9d20b31be342e2141a1d0559a4755f3d334/blog/plugins/lightbox/assets/js/lightbox.min.js"></script>
	<script>
	    lightbox.option({
			"fadeDuration": 200,
		    "resizeDuration": 200,
		    "wrapAround": false,
			"albumLabel": "%1 / %2",
			"fitImagesInViewport":true ,
			"stopEvent": false
	    })
	</script><script type="text/javascript">
var _tiq = 'undefined' !== typeof _tiq ? _tiq : []; // Global Variables
_tiq.push(["__setParam", "title", "파이쿵 :: 16. TensorFlow로 Softmax Classification의 구현하기 (lab 06)"]);
_tiq.push(["__setParam", "svcdomain", "user.tistory.com"]);
_tiq.push(["__setParam", "category", ""]);
_tiq.push(["__setParam", "articleno", "21"]);
_tiq.push(["__setParam", "plink", "http://pythonkim.tistory.com/21"]);
_tiq.push(["__setParam", "date", "2016-07-27 11:48:15"]);
_tiq.push(["__setParam", "author", "pythonkim"]);
_tiq.push(["__setParam", "length", "24076"]);
_tiq.push(["__setParam", "isauthor", "N"]);
_tiq.push(["__setParam", "ishidden", "1"]);
_tiq.push(["__setParam", "comments", "0"]);
_tiq.push(["__setParam", "param1", "0"]);
_tiq.push(["__setParam", "param2", "e"]);
_tiq.push(["__setParam", "param3", ""]);
_tiq.push(["__setParam", "like_ex", "{'serviceId': 'tistory', 'uniqueId': '2072317_21', 'serviceCategories': '404,blogId_2072317'}"]);
_tiq.push(["__trackPageview"]);
(function(d) {
	var se = d.createElement('script'); se.type = 'text/javascript'; se.async = true;
	se.src = location.protocol + '//m2.daumcdn.net/tiara/js/td.min.js';
	var s = d.getElementsByTagName('head')[0]; s.appendChild(se);
})(document);
</script>
<script type="text/javascript">
var __TiaraObj = __TiaraObj || {}; if ('undefined' === typeof __TiaraObj.startTime) { __TiaraObj.startTime = new Date(); }
var addEvent = function (evt, fn) { window.addEventListener ? window.addEventListener(evt, fn, false) : window.attachEvent('on' + evt, fn); };
var ua = navigator.userAgent.toLowerCase(); var isIOS = /iP[ao]d|iPhone/i.test(ua); var contentStat = function() {
_tiq.push(['__content', 't_content', {
"c_id":"2072317_21", 
"c_title":"파이쿵 :: 16. TensorFlow로 Softmax Classification의 구현하기 (lab 06)", 
"type":"article", 
"author":"사과쿵", 
"author_id":"1415031", 
"cp":"pythonkim", 
"cp_id":"2072317", 
"regdata":"2016-07-27 11:48:15", 
"plink":"http://pythonkim.tistory.com/21", 
"media":"pcweb", 
"comment_cnt":0, 
"duration": (new Date()).getTime() - __TiaraObj.startTime.getTime()
}]); };
addEvent(isIOS ? "pagehide" : "beforeunload", contentStat);
</script>
<script type="text/javascript">window.roosevelt_params_queue = window.roosevelt_params_queue || []; window.roosevelt_params_queue.push({channel_id: "dk", channel_label: "tistory"});</script>
<script type="text/javascript" src="//adimg.daumcdn.net/rt/dk_bt/roosevelt_dk_bt.js" async></script><script type="text/javascript">if(window.console!=undefined){setTimeout(console.log.bind(console,"%cTISTORY","font:8em Arial;color:#EC6521;font-weight:bold"),0);setTimeout(console.log.bind(console,"%c  나를 표현하는 블로그","font:2em sans-serif;color:#333;"),0);}</script>		<div id="tistorytoolbarid"
		     style="position:absolute;height:20px;top:4px;right:0px;background-color:transparent;background-image:none;z-index:11;">
			<div class="tistorytoolbar tt_menubar_login">
				<div
					class="tt_menubar_whiteBar">
					<div id="ttMenubarInnerWrap" class="tt_menubar_inner">
						<div class="tt_menubar_bg_toolbar"></div>
						<h2 style="display:none;">티스토리 툴바</h2>
						<div class="tt_menubar_mainmenu"><a
								class="tt_menubar_link_tit tt_menubar_link_tit_daum tt_menubar_link_tit_eng"
								href="http://www.daum.net/?nil_ref=tistory"
								target="_blank">Daum</a></div>
						<div class="tt_menubar_bg_bar"></div>
						<div class="tt_menubar_mainmenu"><a class="tt_menubar_link_tit tt_menubar_link_tit_eng"
						                                    href="http://www.tistory.com">Tistory</a>
						</div>
						<div class="tt_menubar_bg_bar"></div>
						<div class="tt_menubar_logout"><a class="tt_menubar_link_tit"
														  href="https://www.tistory.com/auth/login">로그인</a>
						</div>
					</div>
				</div>
			</div>
		</div>
		</body>
</html>
